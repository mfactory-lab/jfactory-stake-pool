{"version":3,"file":"index.iife.min.js","sources":["../node_modules/tweetnacl/nacl-fast.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/bn.js/lib/bn.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/borsh/lib/index.js","../node_modules/@solana/web3.js/node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/superstruct/lib/index.es.js","../node_modules/@solana/web3.js/lib/index.browser.esm.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@solana/spl-token/lib/index.browser.esm.js","../node_modules/@solana/buffer-layout/lib/Layout.js","../src/utils/layout.ts","../src/utils/math.ts","../src/constants.ts","../src/utils/program-address.ts","../src/layouts.ts","../src/utils/stake.ts","../src/utils/token.ts","../src/utils/instruction.ts","../src/utils/index.ts","../src/instructions.ts","../src/index.ts"],"sourcesContent":["(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\nfunction baseEncode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, 'utf8');\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readBuffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else {\n                writer.writeArray(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj) {\n    const writer = new BinaryWriter();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n        }\n        if (fieldType.kind === 'option') {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer) {\n    const reader = new BinaryReader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer) {\n    const reader = new BinaryReader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nvar buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nvar Layout = /** @class */ (function () {\n    function Layout(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    Layout.prototype.makeDestinationObject = function () {\n        return {};\n    };\n    /**\n     * Decode from a Uint8Array into a JavaScript value.\n     *\n     * @param {Uint8Array} b - the buffer from which encoded data is read.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {(Number|Array|Object)} - the value of the decoded data.\n     *\n     * @abstract\n     */\n    Layout.prototype.decode = function (b, offset) {\n        throw new Error('Layout is abstract');\n    };\n    /**\n     * Encode a JavaScript value into a Uint8Array.\n     *\n     * @param {(Number|Array|Object)} src - the value to be encoded into\n     * the buffer.  The type accepted depends on the (sub-)type of {@link\n     * Layout}.\n     *\n     * @param {Uint8Array} b - the buffer into which encoded data will be\n     * written.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {Number} - the number of bytes encoded, including the\n     * space skipped for internal padding, but excluding data such as\n     * {@link Sequence#count|lengths} when stored {@link\n     * ExternalLayout|externally}.  This is the adjustment to `offset`\n     * producing the offset where data for the next layout would be\n     * written.\n     *\n     * @abstract\n     */\n    Layout.prototype.encode = function (src, b, offset) {\n        throw new Error('Layout is abstract');\n    };\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    Layout.prototype.getSpan = function (b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    };\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    Layout.prototype.replicate = function (property) {\n        var rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    };\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    Layout.prototype.fromArray = function (values) {\n        return undefined;\n    };\n    return Layout;\n}());\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (function () { return new Class(); });\n    Object.defineProperty(Class.prototype, 'encode', {\n        value: function (b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true\n    });\n    Object.defineProperty(Class, 'decode', {\n        value: function (b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nvar ExternalLayout = /** @class */ (function (_super) {\n    __extends(ExternalLayout, _super);\n    function ExternalLayout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    ExternalLayout.prototype.isCount = function () {\n        throw new Error('ExternalLayout is abstract');\n    };\n    return ExternalLayout;\n}(Layout));\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nvar GreedyCount = /** @class */ (function (_super) {\n    __extends(GreedyCount, _super);\n    function GreedyCount(elementSpan, property) {\n        var _this = this;\n        if (undefined === elementSpan) {\n            elementSpan = 1;\n        }\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        _this = _super.call(this, -1, property) || this;\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        _this.elementSpan = elementSpan;\n        return _this;\n    }\n    /** @override */\n    GreedyCount.prototype.isCount = function () {\n        return true;\n    };\n    /** @override */\n    GreedyCount.prototype.decode = function (b, offset) {\n        checkUint8Array(b);\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    };\n    /** @override */\n    GreedyCount.prototype.encode = function (src, b, offset) {\n        return 0;\n    };\n    return GreedyCount;\n}(ExternalLayout));\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nvar OffsetLayout = /** @class */ (function (_super) {\n    __extends(OffsetLayout, _super);\n    function OffsetLayout(layout, offset, property) {\n        var _this = this;\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        else if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        _this = _super.call(this, layout.span, property || layout.property) || this;\n        /** The subordinated layout. */\n        _this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        _this.offset = offset;\n        return _this;\n    }\n    /** @override */\n    OffsetLayout.prototype.isCount = function () {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    };\n    /** @override */\n    OffsetLayout.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return this.layout.decode(b, offset + this.offset);\n    };\n    /** @override */\n    OffsetLayout.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return this.layout.encode(src, b, offset + this.offset);\n    };\n    return OffsetLayout;\n}(ExternalLayout));\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar UInt = /** @class */ (function (_super) {\n    __extends(UInt, _super);\n    function UInt(span, property) {\n        var _this = _super.call(this, span, property) || this;\n        if (6 < _this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n        return _this;\n    }\n    /** @override */\n    UInt.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    };\n    /** @override */\n    UInt.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    };\n    return UInt;\n}(Layout));\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar UIntBE = /** @class */ (function (_super) {\n    __extends(UIntBE, _super);\n    function UIntBE(span, property) {\n        var _this = _super.call(this, span, property) || this;\n        if (6 < _this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n        return _this;\n    }\n    /** @override */\n    UIntBE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    };\n    /** @override */\n    UIntBE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    };\n    return UIntBE;\n}(Layout));\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Int = /** @class */ (function (_super) {\n    __extends(Int, _super);\n    function Int(span, property) {\n        var _this = _super.call(this, span, property) || this;\n        if (6 < _this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n        return _this;\n    }\n    /** @override */\n    Int.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    };\n    /** @override */\n    Int.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    };\n    return Int;\n}(Layout));\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar IntBE = /** @class */ (function (_super) {\n    __extends(IntBE, _super);\n    function IntBE(span, property) {\n        var _this = _super.call(this, span, property) || this;\n        if (6 < _this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n        return _this;\n    }\n    /** @override */\n    IntBE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    };\n    /** @override */\n    IntBE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    };\n    return IntBE;\n}(Layout));\nexports.IntBE = IntBE;\nvar V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    var hi32 = Math.floor(src / V2E32);\n    var lo32 = src - (hi32 * V2E32);\n    return { hi32: hi32, lo32: lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nvar NearUInt64 = /** @class */ (function (_super) {\n    __extends(NearUInt64, _super);\n    function NearUInt64(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    NearUInt64.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        var lo32 = buffer.readUInt32LE(offset);\n        var hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    };\n    /** @override */\n    NearUInt64.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var split = divmodInt64(src);\n        var buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    };\n    return NearUInt64;\n}(Layout));\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nvar NearUInt64BE = /** @class */ (function (_super) {\n    __extends(NearUInt64BE, _super);\n    function NearUInt64BE(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    NearUInt64BE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        var hi32 = buffer.readUInt32BE(offset);\n        var lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    };\n    /** @override */\n    NearUInt64BE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var split = divmodInt64(src);\n        var buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    };\n    return NearUInt64BE;\n}(Layout));\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nvar NearInt64 = /** @class */ (function (_super) {\n    __extends(NearInt64, _super);\n    function NearInt64(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    NearInt64.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        var lo32 = buffer.readUInt32LE(offset);\n        var hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    };\n    /** @override */\n    NearInt64.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var split = divmodInt64(src);\n        var buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    };\n    return NearInt64;\n}(Layout));\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nvar NearInt64BE = /** @class */ (function (_super) {\n    __extends(NearInt64BE, _super);\n    function NearInt64BE(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    NearInt64BE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        var hi32 = buffer.readInt32BE(offset);\n        var lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    };\n    /** @override */\n    NearInt64BE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var split = divmodInt64(src);\n        var buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    };\n    return NearInt64BE;\n}(Layout));\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Float = /** @class */ (function (_super) {\n    __extends(Float, _super);\n    function Float(property) {\n        return _super.call(this, 4, property) || this;\n    }\n    /** @override */\n    Float.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    };\n    /** @override */\n    Float.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    };\n    return Float;\n}(Layout));\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar FloatBE = /** @class */ (function (_super) {\n    __extends(FloatBE, _super);\n    function FloatBE(property) {\n        return _super.call(this, 4, property) || this;\n    }\n    /** @override */\n    FloatBE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    };\n    /** @override */\n    FloatBE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    };\n    return FloatBE;\n}(Layout));\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Double = /** @class */ (function (_super) {\n    __extends(Double, _super);\n    function Double(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    Double.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    };\n    /** @override */\n    Double.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    };\n    return Double;\n}(Layout));\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar DoubleBE = /** @class */ (function (_super) {\n    __extends(DoubleBE, _super);\n    function DoubleBE(property) {\n        return _super.call(this, 8, property) || this;\n    }\n    /** @override */\n    DoubleBE.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    };\n    /** @override */\n    DoubleBE.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    };\n    return DoubleBE;\n}(Layout));\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Sequence = /** @class */ (function (_super) {\n    __extends(Sequence, _super);\n    function Sequence(elementLayout, count, property) {\n        var _this = this;\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        var span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The layout for individual elements of the sequence. */\n        _this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        _this.count = count;\n        return _this;\n    }\n    /** @override */\n    Sequence.prototype.getSpan = function (b, offset) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = 0;\n        var count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            var idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    };\n    /** @override */\n    Sequence.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var rv = [];\n        var i = 0;\n        var count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    };\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    Sequence.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var elo = this.elementLayout;\n        var span = src.reduce(function (span, v) {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    };\n    return Sequence;\n}(Layout));\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nvar Structure = /** @class */ (function (_super) {\n    __extends(Structure, _super);\n    function Structure(fields, property, decodePrefixes) {\n        var _this = this;\n        if (!(Array.isArray(fields)\n            && fields.reduce(function (acc, v) { return acc && (v instanceof Layout); }, true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {\n            var fd = fields_1[_i];\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        var span = -1;\n        try {\n            span = fields.reduce(function (span, fd) { return span + fd.getSpan(); }, 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        _this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        _this.decodePrefixes = !!decodePrefixes;\n        return _this;\n    }\n    /** @override */\n    Structure.prototype.getSpan = function (b, offset) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = 0;\n        try {\n            span = this.fields.reduce(function (span, fd) {\n                var fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    };\n    /** @override */\n    Structure.prototype.decode = function (b, offset) {\n        checkUint8Array(b);\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var dest = this.makeDestinationObject();\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    };\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    Structure.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var firstOffset = offset;\n        var lastOffset = 0;\n        var lastWrote = 0;\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            var span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                var fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    };\n    /** @override */\n    Structure.prototype.fromArray = function (values) {\n        var dest = this.makeDestinationObject();\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    };\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    Structure.prototype.layoutFor = function (property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    Structure.prototype.offsetOf = function (property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        var offset = 0;\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    };\n    return Structure;\n}(Layout));\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nvar UnionDiscriminator = /** @class */ (function () {\n    function UnionDiscriminator(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    UnionDiscriminator.prototype.decode = function (b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    };\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    UnionDiscriminator.prototype.encode = function (src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    };\n    return UnionDiscriminator;\n}());\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nvar UnionLayoutDiscriminator = /** @class */ (function (_super) {\n    __extends(UnionLayoutDiscriminator, _super);\n    function UnionLayoutDiscriminator(layout, property) {\n        var _this = this;\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        _this = _super.call(this, property || layout.property || 'variant') || this;\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        _this.layout = layout;\n        return _this;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    UnionLayoutDiscriminator.prototype.decode = function (b, offset) {\n        return this.layout.decode(b, offset);\n    };\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    UnionLayoutDiscriminator.prototype.encode = function (src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    };\n    return UnionLayoutDiscriminator;\n}(UnionDiscriminator));\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Union = /** @class */ (function (_super) {\n    __extends(Union, _super);\n    function Union(discr, defaultLayout, property) {\n        var _this = this;\n        var upv = ((discr instanceof UInt)\n            || (discr instanceof UIntBE));\n        var discriminator;\n        if (upv) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        var span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && upv) {\n                span += discriminator.layout.span;\n            }\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        _this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        _this.usesPrefixDiscriminator = upv;\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        _this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        _this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        var boundGetSourceVariant = _this.defaultGetSourceVariant.bind(_this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        _this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        _this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n        return _this;\n    }\n    /** @override */\n    Union.prototype.getSpan = function (b, offset) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        var vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    };\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    Union.prototype.defaultGetSourceVariant = function (src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            var vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (var tag in this.registry) {\n                var vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    };\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    Union.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var dest;\n        var dlo = this.discriminator;\n        var discr = dlo.decode(b, offset);\n        var clo = this.registry[discr];\n        if (undefined === clo) {\n            var defaultLayout = this.defaultLayout;\n            var contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    };\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    Union.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            var dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            var clo = this.defaultLayout;\n            var contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    };\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    Union.prototype.addVariant = function (variant, layout, property) {\n        var rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    };\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    Union.prototype.getVariant = function (vb, offset) {\n        var variant;\n        if (vb instanceof Uint8Array) {\n            if (undefined === offset) {\n                offset = 0;\n            }\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    };\n    return Union;\n}(Layout));\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nvar VariantLayout = /** @class */ (function (_super) {\n    __extends(VariantLayout, _super);\n    function VariantLayout(union, variant, layout, property) {\n        var _this = this;\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        var span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The {@link Union} to which this variant belongs. */\n        _this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        _this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        _this.layout = layout || null;\n        return _this;\n    }\n    /** @override */\n    VariantLayout.prototype.getSpan = function (b, offset) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        var span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    };\n    /** @override */\n    VariantLayout.prototype.decode = function (b, offset) {\n        var dest = this.makeDestinationObject();\n        if (undefined === offset) {\n            offset = 0;\n        }\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        var contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        // VariantLayout property is never undefined\n        var property = this.property;\n        if (this.layout) {\n            dest[property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (property) {\n            dest[property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    };\n    /** @override */\n    VariantLayout.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        // VariantLayout property is never undefined\n        var property = this.property;\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, property))) {\n            throw new TypeError('variant lacks property ' + property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        var span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    };\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    VariantLayout.prototype.fromArray = function (values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    };\n    return VariantLayout;\n}(Layout));\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar BitStructure = /** @class */ (function (_super) {\n    __extends(BitStructure, _super);\n    function BitStructure(word, msb, property) {\n        var _this = this;\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        _this = _super.call(this, word.span, property) || this;\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        _this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        _this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        _this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        var value = 0;\n        _this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        _this._packedGetValue = function () {\n            return value;\n        };\n        return _this;\n    }\n    /** @override */\n    BitStructure.prototype.decode = function (b, offset) {\n        var dest = this.makeDestinationObject();\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(value);\n            }\n        }\n        return dest;\n    };\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    BitStructure.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (undefined !== fd.property) {\n                var fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    };\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    BitStructure.prototype.addField = function (bits, property) {\n        var bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    };\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    BitStructure.prototype.addBoolean = function (property) {\n        // This is my Boolean, not the Javascript one.\n        // eslint-disable-next-line no-new-wrappers\n        var bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    };\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    BitStructure.prototype.fieldFor = function (property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (var _i = 0, _a = this.fields; _i < _a.length; _i++) {\n            var fd = _a[_i];\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    };\n    return BitStructure;\n}(Layout));\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nvar BitField = /** @class */ (function () {\n    function BitField(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        var totalBits = 8 * container.span;\n        var usedBits = container.fields.reduce(function (sum, fd) { return sum + fd.bits; }, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    BitField.prototype.decode = function (b, offset) {\n        var word = this.container._packedGetValue();\n        var wordValue = fixBitwiseResult(word & this.wordMask);\n        var value = wordValue >>> this.start;\n        return value;\n    };\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    BitField.prototype.encode = function (value) {\n        if ((!Number.isInteger(value))\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        var word = this.container._packedGetValue();\n        var wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    };\n    return BitField;\n}());\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nvar Boolean = /** @class */ (function (_super) {\n    __extends(Boolean, _super);\n    function Boolean(container, property) {\n        return _super.call(this, container, 1, property) || this;\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    Boolean.prototype.decode = function (b, offset) {\n        return !!BitField.prototype.decode.call(this, b, offset);\n    };\n    /** @override */\n    Boolean.prototype.encode = function (value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        return BitField.prototype.encode.call(this, value);\n    };\n    return Boolean;\n}(BitField));\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Blob = /** @class */ (function (_super) {\n    __extends(Blob, _super);\n    function Blob(length, property) {\n        var _this = this;\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        var span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        _this = _super.call(this, span, property) || this;\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        _this.length = length;\n        return _this;\n    }\n    /** @override */\n    Blob.prototype.getSpan = function (b, offset) {\n        var span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    };\n    /** @override */\n    Blob.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    };\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    Blob.prototype.encode = function (src, b, offset) {\n        var span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        var srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    };\n    return Blob;\n}(Layout));\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar CString = /** @class */ (function (_super) {\n    __extends(CString, _super);\n    function CString(property) {\n        return _super.call(this, -1, property) || this;\n    }\n    /** @override */\n    CString.prototype.getSpan = function (b, offset) {\n        checkUint8Array(b);\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    };\n    /** @override */\n    CString.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    };\n    /** @override */\n    CString.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = src.toString();\n        }\n        var srcb = buffer_1.Buffer.from(src, 'utf8');\n        var span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        var buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    };\n    return CString;\n}(Layout));\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar UTF8 = /** @class */ (function (_super) {\n    __extends(UTF8, _super);\n    function UTF8(maxSpan, property) {\n        var _this = this;\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        _this = _super.call(this, -1, property) || this;\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        _this.maxSpan = maxSpan;\n        return _this;\n    }\n    /** @override */\n    UTF8.prototype.getSpan = function (b, offset) {\n        checkUint8Array(b);\n        if (undefined === offset) {\n            offset = 0;\n        }\n        return b.length - offset;\n    };\n    /** @override */\n    UTF8.prototype.decode = function (b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        var span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    };\n    /** @override */\n    UTF8.prototype.encode = function (src, b, offset) {\n        if (undefined === offset) {\n            offset = 0;\n        }\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = src.toString();\n        }\n        var srcb = buffer_1.Buffer.from(src, 'utf8');\n        var span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    };\n    return UTF8;\n}(Layout));\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nvar Constant = /** @class */ (function (_super) {\n    __extends(Constant, _super);\n    function Constant(value, property) {\n        var _this = _super.call(this, 0, property) || this;\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        _this.value = value;\n        return _this;\n    }\n    /** @override */\n    Constant.prototype.decode = function (b, offset) {\n        return this.value;\n    };\n    /** @override */\n    Constant.prototype.encode = function (src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    };\n    return Constant;\n}(Layout));\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = (function (elementSpan, property) { return new GreedyCount(elementSpan, property); });\n/** Factory for {@link OffsetLayout}. */\nexports.offset = (function (layout, offset, property) { return new OffsetLayout(layout, offset, property); });\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (function (property) { return new UInt(1, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (function (property) { return new UInt(2, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (function (property) { return new UInt(3, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (function (property) { return new UInt(4, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (function (property) { return new UInt(5, property); });\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (function (property) { return new UInt(6, property); });\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (function (property) { return new NearUInt64(property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (function (property) { return new UIntBE(2, property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (function (property) { return new UIntBE(3, property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (function (property) { return new UIntBE(4, property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (function (property) { return new UIntBE(5, property); });\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (function (property) { return new UIntBE(6, property); });\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (function (property) { return new NearUInt64BE(property); });\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (function (property) { return new Int(1, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (function (property) { return new Int(2, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (function (property) { return new Int(3, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (function (property) { return new Int(4, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (function (property) { return new Int(5, property); });\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (function (property) { return new Int(6, property); });\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (function (property) { return new NearInt64(property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (function (property) { return new IntBE(2, property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (function (property) { return new IntBE(3, property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (function (property) { return new IntBE(4, property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (function (property) { return new IntBE(5, property); });\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (function (property) { return new IntBE(6, property); });\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (function (property) { return new NearInt64BE(property); });\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (function (property) { return new Float(property); });\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (function (property) { return new FloatBE(property); });\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (function (property) { return new Double(property); });\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (function (property) { return new DoubleBE(property); });\n/** Factory for {@link Structure} values. */\nexports.struct = (function (fields, property, decodePrefixes) {\n    return new Structure(fields, property, decodePrefixes);\n});\n/** Factory for {@link BitStructure} values. */\nexports.bits = (function (word, msb, property) { return new BitStructure(word, msb, property); });\n/** Factory for {@link Sequence} values. */\nexports.seq = (function (elementLayout, count, property) {\n    return new Sequence(elementLayout, count, property);\n});\n/** Factory for {@link Union} values. */\nexports.union = (function (discr, defaultLayout, property) {\n    return new Union(discr, defaultLayout, property);\n});\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = (function (layout, property) { return new UnionLayoutDiscriminator(layout, property); });\n/** Factory for {@link Blob} values. */\nexports.blob = (function (length, property) { return new Blob(length, property); });\n/** Factory for {@link CString} values. */\nexports.cstr = (function (property) { return new CString(property); });\n/** Factory for {@link UTF8} values. */\nexports.utf8 = (function (maxSpan, property) { return new UTF8(maxSpan, property); });\n/** Factory for {@link Constant} values. */\nexports.constant = (function (value, property) { return new Constant(value, property); });\n//# sourceMappingURL=Layout.js.map","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","import nacl from 'tweetnacl';\nimport { Buffer } from 'buffer';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { coerce, instance, string, tuple, literal, unknown, union, type, optional, any, number, array, nullable, create, boolean, record, assert as assert$7 } from 'superstruct';\nimport { Client } from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar hash$1 = {};\n\nvar utils$9 = {};\n\nvar minimalisticAssert = assert$6;\n\nfunction assert$6(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert$6.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\nvar inherits_browser = {exports: {}};\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  inherits_browser.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  inherits_browser.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\nvar assert$5 = minimalisticAssert;\nvar inherits = inherits_browser.exports;\n\nutils$9.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nutils$9.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils$9.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nutils$9.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nutils$9.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils$9.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nutils$9.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert$5(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nutils$9.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nutils$9.split32 = split32;\n\nfunction rotr32$1(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nutils$9.rotr32 = rotr32$1;\n\nfunction rotl32$2(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nutils$9.rotl32 = rotl32$2;\n\nfunction sum32$3(a, b) {\n  return (a + b) >>> 0;\n}\nutils$9.sum32 = sum32$3;\n\nfunction sum32_3$1(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nutils$9.sum32_3 = sum32_3$1;\n\nfunction sum32_4$2(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nutils$9.sum32_4 = sum32_4$2;\n\nfunction sum32_5$2(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nutils$9.sum32_5 = sum32_5$2;\n\nfunction sum64$1(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nutils$9.sum64 = sum64$1;\n\nfunction sum64_hi$1(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nutils$9.sum64_hi = sum64_hi$1;\n\nfunction sum64_lo$1(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nutils$9.sum64_lo = sum64_lo$1;\n\nfunction sum64_4_hi$1(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nutils$9.sum64_4_hi = sum64_4_hi$1;\n\nfunction sum64_4_lo$1(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nutils$9.sum64_4_lo = sum64_4_lo$1;\n\nfunction sum64_5_hi$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nutils$9.sum64_5_hi = sum64_5_hi$1;\n\nfunction sum64_5_lo$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nutils$9.sum64_5_lo = sum64_5_lo$1;\n\nfunction rotr64_hi$1(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nutils$9.rotr64_hi = rotr64_hi$1;\n\nfunction rotr64_lo$1(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nutils$9.rotr64_lo = rotr64_lo$1;\n\nfunction shr64_hi$1(ah, al, num) {\n  return ah >>> num;\n}\nutils$9.shr64_hi = shr64_hi$1;\n\nfunction shr64_lo$1(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nutils$9.shr64_lo = shr64_lo$1;\n\nvar common$5 = {};\n\nvar utils$8 = utils$9;\nvar assert$4 = minimalisticAssert;\n\nfunction BlockHash$4() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\ncommon$5.BlockHash = BlockHash$4;\n\nBlockHash$4.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils$8.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils$8.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash$4.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert$4(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash$4.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\nvar sha = {};\n\nvar common$4 = {};\n\nvar utils$7 = utils$9;\nvar rotr32 = utils$7.rotr32;\n\nfunction ft_1$1(s, x, y, z) {\n  if (s === 0)\n    return ch32$1(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32$1(x, y, z);\n}\ncommon$4.ft_1 = ft_1$1;\n\nfunction ch32$1(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\ncommon$4.ch32 = ch32$1;\n\nfunction maj32$1(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\ncommon$4.maj32 = maj32$1;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\ncommon$4.p32 = p32;\n\nfunction s0_256$1(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\ncommon$4.s0_256 = s0_256$1;\n\nfunction s1_256$1(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\ncommon$4.s1_256 = s1_256$1;\n\nfunction g0_256$1(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\ncommon$4.g0_256 = g0_256$1;\n\nfunction g1_256$1(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\ncommon$4.g1_256 = g1_256$1;\n\nvar utils$6 = utils$9;\nvar common$3 = common$5;\nvar shaCommon$1 = common$4;\n\nvar rotl32$1 = utils$6.rotl32;\nvar sum32$2 = utils$6.sum32;\nvar sum32_5$1 = utils$6.sum32_5;\nvar ft_1 = shaCommon$1.ft_1;\nvar BlockHash$3 = common$3.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash$3.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils$6.inherits(SHA1, BlockHash$3);\nvar _1 = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5$1(rotl32$1(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32$1(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32$2(this.h[0], a);\n  this.h[1] = sum32$2(this.h[1], b);\n  this.h[2] = sum32$2(this.h[2], c);\n  this.h[3] = sum32$2(this.h[3], d);\n  this.h[4] = sum32$2(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$6.toHex32(this.h, 'big');\n  else\n    return utils$6.split32(this.h, 'big');\n};\n\nvar utils$5 = utils$9;\nvar common$2 = common$5;\nvar shaCommon = common$4;\nvar assert$3 = minimalisticAssert;\n\nvar sum32$1 = utils$5.sum32;\nvar sum32_4$1 = utils$5.sum32_4;\nvar sum32_5 = utils$5.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash$2 = common$2.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256$1() {\n  if (!(this instanceof SHA256$1))\n    return new SHA256$1();\n\n  BlockHash$2.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils$5.inherits(SHA256$1, BlockHash$2);\nvar _256 = SHA256$1;\n\nSHA256$1.blockSize = 512;\nSHA256$1.outSize = 256;\nSHA256$1.hmacStrength = 192;\nSHA256$1.padLength = 64;\n\nSHA256$1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4$1(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert$3(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32$1(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32$1(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32$1(T1, T2);\n  }\n\n  this.h[0] = sum32$1(this.h[0], a);\n  this.h[1] = sum32$1(this.h[1], b);\n  this.h[2] = sum32$1(this.h[2], c);\n  this.h[3] = sum32$1(this.h[3], d);\n  this.h[4] = sum32$1(this.h[4], e);\n  this.h[5] = sum32$1(this.h[5], f);\n  this.h[6] = sum32$1(this.h[6], g);\n  this.h[7] = sum32$1(this.h[7], h);\n};\n\nSHA256$1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$5.toHex32(this.h, 'big');\n  else\n    return utils$5.split32(this.h, 'big');\n};\n\nvar utils$4 = utils$9;\nvar SHA256 = _256;\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils$4.inherits(SHA224, SHA256);\nvar _224 = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils$4.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils$4.split32(this.h.slice(0, 7), 'big');\n};\n\nvar utils$3 = utils$9;\nvar common$1 = common$5;\nvar assert$2 = minimalisticAssert;\n\nvar rotr64_hi = utils$3.rotr64_hi;\nvar rotr64_lo = utils$3.rotr64_lo;\nvar shr64_hi = utils$3.shr64_hi;\nvar shr64_lo = utils$3.shr64_lo;\nvar sum64 = utils$3.sum64;\nvar sum64_hi = utils$3.sum64_hi;\nvar sum64_lo = utils$3.sum64_lo;\nvar sum64_4_hi = utils$3.sum64_4_hi;\nvar sum64_4_lo = utils$3.sum64_4_lo;\nvar sum64_5_hi = utils$3.sum64_5_hi;\nvar sum64_5_lo = utils$3.sum64_5_lo;\n\nvar BlockHash$1 = common$1.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512$1() {\n  if (!(this instanceof SHA512$1))\n    return new SHA512$1();\n\n  BlockHash$1.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils$3.inherits(SHA512$1, BlockHash$1);\nvar _512 = SHA512$1;\n\nSHA512$1.blockSize = 1024;\nSHA512$1.outSize = 512;\nSHA512$1.hmacStrength = 192;\nSHA512$1.padLength = 128;\n\nSHA512$1.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512$1.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert$2(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512$1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$3.toHex32(this.h, 'big');\n  else\n    return utils$3.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nvar utils$2 = utils$9;\n\nvar SHA512 = _512;\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils$2.inherits(SHA384, SHA512);\nvar _384 = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$2.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils$2.split32(this.h.slice(0, 12), 'big');\n};\n\nsha.sha1 = _1;\nsha.sha224 = _224;\nsha.sha256 = _256;\nsha.sha384 = _384;\nsha.sha512 = _512;\n\nvar ripemd = {};\n\nvar utils$1 = utils$9;\nvar common = common$5;\n\nvar rotl32 = utils$1.rotl32;\nvar sum32 = utils$1.sum32;\nvar sum32_3 = utils$1.sum32_3;\nvar sum32_4 = utils$1.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils$1.inherits(RIPEMD160, BlockHash);\nripemd.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils$1.toHex32(this.h, 'little');\n  else\n    return utils$1.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\nvar utils = utils$9;\nvar assert$1 = minimalisticAssert;\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nvar hmac = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert$1(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n(function (exports) {\nvar hash = exports;\n\nhash.utils = utils$9;\nhash.common = common$5;\nhash.sha = sha;\nhash.ripemd = ripemd;\nhash.hmac = hmac;\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n}(hash$1));\n\nvar hash = hash$1;\n\nconst version$2 = \"logger/5.5.0\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\nconst HEX = \"0123456789abcdef\";\nclass Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version$2);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n\nconst version$1 = \"bytes/5.5.0\";\n\nconst logger = new Logger(version$1);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nfunction isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nfunction isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\n\nconst version = \"sha2/5.5.0\";\n\nnew Logger(version);\nfunction sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n\n} // Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\n\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n\n}\nconst SOLANA_SCHEMA = new Map();\n\n/**\n * Maximum length of derived pubkey seed\n */\n\nconst MAX_SEED_LENGTH = 32;\n/**\n * Value to be converted into public key\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n/**\n * A public key\n */\n\n\nclass PublicKey extends Struct {\n  /** @internal */\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    this._bn = void 0;\n\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n  /**\n   * Default public key value. (All zeros)\n   */\n\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n  /**\n   * Return the base-58 representation of the public key\n   */\n\n\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON() {\n    return this.toBase58();\n  }\n  /**\n   * Return the byte array representation of the public key\n   */\n\n\n  toBytes() {\n    return this.toBuffer();\n  }\n  /**\n   * Return the Buffer representation of the public key\n   */\n\n\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  /**\n   * Return the base-58 representation of the public key\n   */\n\n\n  toString() {\n    return this.toBase58();\n  }\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n\n  /* eslint-disable require-await */\n\n\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n\n  /* eslint-disable require-await */\n\n\n  static async createProgramAddress(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n\n    return new PublicKey(publicKeyBytes);\n  }\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n\n\n  static async findProgramAddress(seeds, programId) {\n    let nonce = 255;\n    let address;\n\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n\n        nonce--;\n        continue;\n      }\n\n      return [address, nonce];\n    }\n\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n\n\n  static isOnCurve(pubkey) {\n    return is_on_curve(pubkey) == 1;\n  }\n\n}\nPublicKey.default = new PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n}); // @ts-ignore\n\nlet naclLowLevel = nacl.lowlevel; // Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\n\nfunction is_on_curve(p) {\n  var r = [naclLowLevel.gf(), naclLowLevel.gf(), naclLowLevel.gf(), naclLowLevel.gf()];\n  var t = naclLowLevel.gf(),\n      chk = naclLowLevel.gf(),\n      num = naclLowLevel.gf(),\n      den = naclLowLevel.gf(),\n      den2 = naclLowLevel.gf(),\n      den4 = naclLowLevel.gf(),\n      den6 = naclLowLevel.gf();\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\n\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32),\n      d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\n\nclass Account {\n  /** @internal */\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    this._keypair = void 0;\n\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n  /**\n   * The public key for this account\n   */\n\n\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n  /**\n   * The **unencrypted** secret key for this account\n   */\n\n\n  get secretKey() {\n    return toBuffer(this._keypair.secretKey);\n  }\n\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Layout for a public key\n */\n\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n/**\n * Layout for a Rust String type\n */\n\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n\n  const _decode = rsl.decode.bind(rsl);\n\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer, offset) => {\n    const data = _decode(buffer, offset);\n\n    return data['chars'].toString('utf8');\n  };\n\n  rsl.encode = (str, buffer, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  rsl.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n\n  return rsl;\n};\n/**\n * Layout for an Authorized object\n */\n\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n/**\n * Layout for a Lockup object\n */\n\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n/**\n *  Layout for a VoteInit object\n */\n\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\nfunction getAlloc(type, fields) {\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\n/**\n * The message header, identifying signed and read-only account\n */\n\nconst PUBKEY_LENGTH = 32;\n/**\n * List of instructions to be processed atomically\n */\n\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index) {\n    return index < this.header.numRequiredSignatures - this.header.numReadonlySignedAccounts || index >= this.header.numRequiredSignatures && index < this.accountKeys.length - this.header.numReadonlyUnsignedAccounts;\n  }\n\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = bs58.decode(instruction.data);\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: Buffer.from(accounts),\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n  /**\n   * Decode a compiled message into a Message object.\n   */\n\n\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = byteArray.shift();\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountCount = decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\n\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst SIGNATURE_LENGTH = 64;\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n\n  /**\n   * Program Id to execute\n   */\n\n  /**\n   * Program input\n   */\n  constructor(opts) {\n    this.keys = void 0;\n    this.programId = void 0;\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n}\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n\n    return null;\n  }\n  /**\n   * The transaction fee payer\n   */\n\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    this.signatures = [];\n    this.feePayer = void 0;\n    this.instructions = [];\n    this.recentBlockhash = void 0;\n    this.nonceInfo = void 0;\n    opts && Object.assign(this, opts);\n  }\n  /**\n   * Add one or more instructions to this Transaction\n   */\n\n\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n  /**\n   * Compile transaction data\n   */\n\n\n  compileMessage() {\n    const {\n      nonceInfo\n    } = this;\n\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n\n    const {\n      recentBlockhash\n    } = this;\n\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer;\n\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n\n    const programIds = [];\n    const accountMetas = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({ ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    }); // Append programID account metas\n\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    }); // Sort. Prioritizing first by signer, then by writable\n\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable = x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    }); // Cull duplicate account metas\n\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    }); // Move fee payer to the front\n\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    } // Disallow unknown signers\n\n\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0; // Split out signing from non-signing keys and count header values\n\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    instructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n\n\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n\n\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n\n\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    } // Dedupe signers\n\n\n    const seen = new Set();\n    const uniqueSigners = [];\n\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n\n    const message = this._compile();\n\n    this._partialSign(message, ...uniqueSigners);\n\n    this._verifySignatures(message.serialize(), true);\n  }\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n\n\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    } // Dedupe signers\n\n\n    const seen = new Set();\n    const uniqueSigners = [];\n\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n\n    this._partialSign(message, ...uniqueSigners);\n  }\n  /**\n   * @internal\n   */\n\n\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n\n\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n\n\n    this._addSignature(pubkey, signature);\n  }\n  /**\n   * @internal\n   */\n\n\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n\n\n  verifySignatures() {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n  /**\n   * @internal\n   */\n\n\n  _verifySignatures(signData, requireAllSignatures) {\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n\n\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n\n    if (verifySignatures && !this._verifySignatures(signData, requireAllSignatures)) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n  /**\n   * @internal\n   */\n\n\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n  /**\n   * Deprecated method\n   * @internal\n   */\n\n\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n  /**\n   * Deprecated method\n   * @internal\n   */\n\n\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n  /**\n   * Deprecated method\n   * @internal\n   */\n\n\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n\n\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n  /**\n   * Populate Transaction object from message and signatures\n   */\n\n\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    return transaction;\n  }\n\n}\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n\n  if (status.err) {\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\n\nfunction decodeData(type, buffer) {\n  let data;\n\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\n\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n/**\n * Calculator for transaction fees.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\n\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n\n\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n\n}\n\n/**\n * Create account system transaction params\n */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n\n\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n\n\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n\n}\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), rustString('seed'), publicKey('programId')])\n  }\n});\n/**\n * Factory class for transactions to interact with the System program\n */\n\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the System program\n   */\n\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n\n\n  static transfer(params) {\n    let data;\n    let keys;\n\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: params.lamports\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n\n\n  static assign(params) {\n    let data;\n    let keys;\n\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n\n\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n\n\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n\n\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n\n\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n\n\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n\n\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n\n\n  static allocate(params) {\n    let data;\n    let keys;\n\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\n\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n/**\n * Program loader interface\n */\n\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * ( // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 + // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n\n\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length); // Fetch program account info to check if it has already been created\n\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      } // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n\n\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      })); // Delay between sends in an attempt to reduce rate limit errors\n\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n\n    await Promise.all(transactions); // Finalize the account loaded with program data for execution\n\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      });\n    } // success\n\n    return true;\n  }\n\n}\nLoader.chunkSize = CHUNK_SIZE;\n\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n/**\n * Factory class for transactions to interact with a program loader\n */\n\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n\n\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n\n}\n\nvar browserPonyfill = {exports: {}};\n\n(function (module, exports) {\nvar global = typeof self !== 'undefined' ? self : commonjsGlobal;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException;\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\n((function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch; // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers;\nexports.Request = ctx.Request;\nexports.Response = ctx.Response;\nmodule.exports = exports;\n}(browserPonyfill, browserPonyfill.exports));\n\nvar fetch = /*@__PURE__*/getDefaultExportFromCjs(browserPonyfill.exports);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32; // Returns the number of trailing zeros in the binary representation of self.\n\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n\n  return trailingZeros;\n} // Returns the smallest power of two greater than or equal to n\n\n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\n\n\nclass EpochSchedule {\n  /** The maximum number of slots in each epoch */\n\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n\n  /** Indicates whether epochs start short and grow */\n\n  /** The first epoch with `slotsPerEpoch` slots */\n\n  /** The first slot of `firstNormalEpoch` */\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    this.slotsPerEpoch = void 0;\n    this.leaderScheduleSlotOffset = void 0;\n    this.warmup = void 0;\n    this.firstNormalEpoch = void 0;\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n\n}\n\nclass SendTransactionError extends Error {\n  constructor(message, logs) {\n    super(message);\n    this.logs = void 0;\n    this.logs = logs;\n  }\n\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n/**\n * @internal\n */\n\nconst DEFAULT_TICKS_PER_SLOT = 64;\n/**\n * @internal\n */\n\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n/**\n * @internal\n */\n\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nfunction promiseTimeout(promise, timeoutMs) {\n  let timeoutId;\n  const timeoutPromise = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n  return Promise.race([promise, timeoutPromise]).then(result => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n\nfunction makeWebsocketUrl(endpoint) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = ''; // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n\n  return url.toString();\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\n\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n/**\n * @internal\n */\n\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return { ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n/**\n * @internal\n */\n\n\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n/**\n * @internal\n */\n\n\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number()\n}))));\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n/**\n * Transaction error or null\n */\n\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n/**\n * Signature status for a transaction\n */\n\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n/**\n * Transaction signature received notification\n */\n\nconst SignatureReceivedResult = literal('receivedSignature');\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  })))),\n  unitsConsumed: optional(number())\n}));\n\nfunction createRpcClient(url, useHttps, httpHeaders, fetchMiddleware, disableRetryOnRateLimit) {\n\n  let fetchWithMiddleware;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url, options) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) => resolve([modifiedUrl, modifiedOptions]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {})\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429\n        /* Too many requests */\n        ) {\n          break;\n        }\n\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n\n        too_many_requests_retries -= 1;\n\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n\n        console.log(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n    }\n  }, {});\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\n\n\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\n\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\n\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\n\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\n\nconst SlotRpcResult = jsonRpcResult(number());\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\n\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\n\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n/**\n * @internal\n */\n\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n/**\n * @internal\n */\n\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n/**\n * @internal\n */\n\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n/**\n * @internal\n */\n\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\n\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\n\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n/**\n * @internal\n */\n\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\n\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n/**\n * @internal\n */\n\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\n\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\n\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\n\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\n\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\n\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\n\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\n\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string()\n  })\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n/**\n * @internal\n */\n\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(type({\n      pubkey: PublicKeyFromString,\n      signer: boolean(),\n      writable: boolean()\n    })),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string()\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\n/**\n * @internal\n */\n\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult)))\n});\n/**\n * @internal\n */\n\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult)))\n});\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\n\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(type({\n    pubkey: string(),\n    lamports: number(),\n    postBalance: nullable(number()),\n    rewardType: nullable(string())\n  }))),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\n\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(type({\n    pubkey: string(),\n    lamports: number(),\n    postBalance: nullable(number()),\n    rewardType: nullable(string())\n  }))),\n  blockTime: nullable(number())\n})));\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\n\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\n\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: ConfirmedTransactionMetaResult,\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult\n})));\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\n\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number()))\n})));\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\n\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\n\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\n\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\n\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\n\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\n\nconst SendTransactionRpcResult = jsonRpcResult(string());\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, commitmentOrConfig) {\n    this._commitment = void 0;\n    this._confirmTransactionInitialTimeout = void 0;\n    this._rpcEndpoint = void 0;\n    this._rpcWsEndpoint = void 0;\n    this._rpcClient = void 0;\n    this._rpcRequest = void 0;\n    this._rpcBatchRequest = void 0;\n    this._rpcWebSocket = void 0;\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketHeartbeat = null;\n    this._rpcWebSocketIdleTimeout = null;\n    this._disableBlockhashCaching = false;\n    this._pollingBlockhash = false;\n    this._blockhashInfo = {\n      recentBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    this._accountChangeSubscriptionCounter = 0;\n    this._accountChangeSubscriptions = {};\n    this._programAccountChangeSubscriptionCounter = 0;\n    this._programAccountChangeSubscriptions = {};\n    this._rootSubscriptionCounter = 0;\n    this._rootSubscriptions = {};\n    this._signatureSubscriptionCounter = 0;\n    this._signatureSubscriptions = {};\n    this._slotSubscriptionCounter = 0;\n    this._slotSubscriptions = {};\n    this._logsSubscriptionCounter = 0;\n    this._logsSubscriptions = {};\n    this._slotUpdateSubscriptionCounter = 0;\n    this._slotUpdateSubscriptions = {};\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n    let wsEndpoint;\n    let httpHeaders;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(url.toString(), useHttps, httpHeaders, fetchMiddleware, disableRetryOnRateLimit);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new Client(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n  /**\n   * The default commitment used for requests\n   */\n\n\n  get commitment() {\n    return this._commitment;\n  }\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n\n\n  async getBalanceAndContext(publicKey, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get balance for ' + publicKey.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the balance for the specified public key\n   */\n\n\n  async getBalance(publicKey, commitment) {\n    return await this.getBalanceAndContext(publicKey, commitment).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n  /**\n   * Fetch the estimated production time of a block\n   */\n\n\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n\n    if ('error' in res) {\n      throw new Error('failed to get block time for slot ' + slot + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n\n\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get minimum ledger slot: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n\n\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get first available block: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch information about the current supply\n   */\n\n\n  async getSupply(config) {\n    let configArg = {};\n\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = { ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current supply of a token mint\n   */\n\n\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current balance of a token account\n   */\n\n\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n\n    if ('error' in res) {\n      throw new Error('failed to get token account balance: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n\n\n  async getTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n\n    if ('error' in res) {\n      throw new Error('failed to get token accounts owned by account ' + ownerAddress.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n\n\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n\n    if ('error' in res) {\n      throw new Error('failed to get token accounts owned by account ' + ownerAddress.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n\n\n  async getLargestAccounts(config) {\n    const arg = { ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n\n\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get token largest accounts: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n\n\n  async getAccountInfoAndContext(publicKey, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n\n\n  async getParsedAccountInfo(publicKey, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the account info for the specified public key\n   */\n\n\n  async getAccountInfo(publicKey, commitment) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n\n\n  async getMultipleAccountsInfo(publicKeys, configOrCommitment) {\n    const keys = publicKeys.map(key => key.toBase58());\n    let commitment;\n    let encoding = 'base64';\n\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n        encoding = 'base64';\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding || 'base64';\n      }\n    }\n\n    const args = this._buildArgs([keys], commitment, encoding);\n\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n\n    if ('error' in res) {\n      throw new Error('failed to get info for accounts ' + keys + ': ' + res.error.message);\n    }\n\n    return res.result.value;\n  }\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n\n\n  async getStakeActivation(publicKey, commitment, epoch) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined, epoch !== undefined ? {\n      epoch\n    } : undefined);\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n\n    if ('error' in res) {\n      throw new Error(`failed to get Stake Activation ${publicKey.toBase58()}: ${res.error.message}`);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n\n  async getProgramAccounts(programId, configOrCommitment) {\n    const extra = {};\n    let commitment;\n    let encoding;\n\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', extra);\n\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get accounts owned by program ' + programId.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n\n\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const extra = {};\n    let commitment;\n\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', extra);\n\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get accounts owned by program ' + programId.toBase58() + ': ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n\n\n  async confirmTransaction(signature, commitment) {\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n    let subscriptionId;\n    let response = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(signature, (result, context) => {\n          subscriptionId = undefined;\n          response = {\n            context,\n            value: result\n          };\n          resolve(null);\n        }, subscriptionCommitment);\n      } catch (err) {\n        reject(err);\n      }\n    });\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip':\n        {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(`Transaction was not confirmed in ${duration.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`);\n    }\n\n    return response;\n  }\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n\n\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n\n\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current slot that the node is processing\n   */\n\n\n  async getSlot(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n\n\n  async getSlotLeader(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n\n\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current status of a signature\n   */\n\n\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n\n\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n\n    if (config) {\n      params.push(config);\n    }\n\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n\n\n  async getTransactionCount(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n\n\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n\n\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n\n\n  async getInflationReward(addresses, epoch, commitment) {\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined, {\n      epoch\n    });\n\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the Epoch Info parameters\n   */\n\n\n  async getEpochInfo(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n\n\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n\n\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n\n\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n\n\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n\n\n  async getRecentPerformanceSamples(limit) {\n    const args = this._buildArgs(limit ? [limit] : []);\n\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', args);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get recent performance samples: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n\n\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n\n\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = message.serialize().toString('base64');\n\n    const args = this._buildArgs([wireMessage], commitment);\n\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n\n\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n\n\n  async getLatestBlockhash(commitment) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n\n\n  async getLatestBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the node version\n   */\n\n\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the genesis hash\n   */\n\n\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a processed block from the cluster.\n   */\n\n\n  async getBlock(slot, opts) {\n    const args = this._buildArgsAtLeastConfirmed([slot], opts && opts.commitment);\n\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n    return { ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: { ...transaction,\n            message\n          }\n        };\n      })\n    };\n  }\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n\n\n  async getTransaction(signature, opts) {\n    const args = this._buildArgsAtLeastConfirmed([signature], opts && opts.commitment);\n\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n    return { ...result,\n      transaction: { ...result.transaction,\n        message: new Message(result.transaction.message)\n      }\n    };\n  }\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n\n\n  async getParsedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n\n\n  async getParsedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n\n      return res.result;\n    });\n    return res;\n  }\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n\n\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = { ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: { ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return { ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n\n\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n\n\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n\n    const result = res.result;\n\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n\n    return result;\n  }\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n\n\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    return result;\n  }\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n\n\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return { ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n\n\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed transaction: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n\n\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n\n      if ('error' in res) {\n        throw new Error('failed to get confirmed transactions: ' + res.error.message);\n      }\n\n      return res.result;\n    });\n    return res;\n  }\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n\n\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n\n    while (!('until' in options)) {\n      startSlot--;\n\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n\n    while (!('before' in options)) {\n      endSlot++;\n\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n\n\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed signatures for address: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n\n\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get signatures for address: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n\n\n  async getNonceAndContext(nonceAccount, commitment) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitment);\n    let value = null;\n\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value\n    };\n  }\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n\n\n  async getNonce(nonceAccount, commitment) {\n    return await this.getNonceAndContext(nonceAccount, commitment).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n\n\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n\n    if ('error' in res) {\n      throw new Error('airdrop to ' + to.toBase58() + ' failed: ' + res.error.message);\n    }\n\n    return res.result;\n  }\n  /**\n   * @internal\n   */\n\n\n  async _recentBlockhash(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n  /**\n   * @internal\n   */\n\n\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n\n    try {\n      const startTime = Date.now();\n\n      for (let i = 0; i < 50; i++) {\n        const {\n          blockhash\n        } = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return blockhash;\n        } // Sleep for approximately half a slot\n\n\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n  /**\n   * Simulate a transaction\n   */\n\n\n  async simulateTransaction(transactionOrMessage, signers, includeAccounts) {\n    let transaction;\n\n    if (transactionOrMessage instanceof Transaction) {\n      transaction = transactionOrMessage;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        if (!signers) break;\n        transaction.sign(...signers);\n\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n\n    const signData = message.serialize();\n\n    const wireTransaction = transaction._serialize(signData);\n\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n\n    if ('error' in res) {\n      let logs;\n\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n\n      throw new SendTransactionError('failed to simulate transaction: ' + res.error.message, logs);\n    }\n\n    return res.result;\n  }\n  /**\n   * Sign and send a transaction\n   */\n\n\n  async sendTransaction(transaction, signers, options) {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n\n\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n\n\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = options && options.preflightCommitment || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n\n    if ('error' in res) {\n      let logs;\n\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n\n      throw new SendTransactionError('failed to send transaction: ' + res.error.message, logs);\n    }\n\n    return res.result;\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n\n    this._updateSubscriptions();\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnError(err) {\n    console.error('ws error:', err.message);\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnClose(code) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n\n      return;\n    } // implicit close, prepare subscriptions for auto-reconnect\n\n\n    this._resetSubscriptions();\n  }\n  /**\n   * @internal\n   */\n\n\n  async _subscribe(sub, rpcMethod, rpcArgs) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error for argument`, rpcArgs, err.message);\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  async _unsubscribe(sub, rpcMethod) {\n    const subscriptionId = sub.subscriptionId;\n\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId = subscriptionId;\n\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._programAccountChangeSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._rootSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._signatureSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._slotSubscriptions).forEach(s => s.subscriptionId = null);\n    Object.values(this._slotUpdateSubscriptions).forEach(s => s.subscriptionId = null);\n  }\n  /**\n   * @internal\n   */\n\n\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(Number);\n    const programKeys = Object.keys(this._programAccountChangeSubscriptions).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(Number);\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n\n    if (accountKeys.length === 0 && programKeys.length === 0 && slotKeys.length === 0 && slotUpdateKeys.length === 0 && signatureKeys.length === 0 && rootKeys.length === 0 && logsKeys.length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n\n      this._subscribe(sub, 'accountSubscribe', this._buildArgs([sub.publicKey], sub.commitment, 'base64'));\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n\n      this._subscribe(sub, 'programSubscribe', this._buildArgs([sub.programId], sub.commitment, 'base64', {\n        filters: sub.filters\n      }));\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args = [sub.signature];\n      if (sub.options) args.push(sub.options);\n\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n\n      if (typeof sub.filter === 'object') {\n        filter = {\n          mentions: [sub.filter.toString()]\n        };\n      } else {\n        filter = sub.filter;\n      }\n\n      this._subscribe(sub, 'logsSubscribe', this._buildArgs([filter], sub.commitment));\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnAccountNotification(notification) {\n    const res = create(notification, AccountNotificationResult);\n\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n\n\n  onAccountChange(publicKey, callback, commitment) {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeAccountChangeListener(id) {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnProgramAccountNotification(notification) {\n    const res = create(notification, ProgramAccountNotificationResult);\n\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {\n          value,\n          context\n        } = res.result;\n        sub.callback({\n          accountId: value.pubkey,\n          accountInfo: value.account\n        }, context);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n\n\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeProgramAccountChangeListener(id) {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n\n\n  onLogs(filter, callback, commitment) {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n\n\n  async removeOnLogsListener(id) {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n\n    this._updateSubscriptions();\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnLogsNotification(notification) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnSlotNotification(notification) {\n    const res = create(notification, SlotNotificationResult);\n\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n\n\n  onSlotChange(callback) {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeSlotChangeListener(id) {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnSlotUpdatesNotification(notification) {\n    const res = create(notification, SlotUpdateNotificationResult);\n\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n\n\n  onSlotUpdate(callback) {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeSlotUpdateListener(id) {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n\n    if (commitment || encoding || extra) {\n      let options = {};\n\n      if (encoding) {\n        options.encoding = encoding;\n      }\n\n      if (commitment) {\n        options.commitment = commitment;\n      }\n\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n\n      args.push(options);\n    }\n\n    return args;\n  }\n  /**\n   * @internal\n   */\n\n\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n\n    return this._buildArgs(args, override, encoding, extra);\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnSignatureNotification(notification) {\n    const res = create(notification, SignatureNotificationResult);\n\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback({\n            type: 'received'\n          }, res.result.context);\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n\n          this._updateSubscriptions();\n\n          sub.callback({\n            type: 'status',\n            result: res.result.value\n          }, res.result.context);\n        }\n\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n\n\n  onSignature(signature, callback, commitment) {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {\n        commitment\n      },\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n\n\n  onSignatureWithOptions(signature, callback, options) {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeSignatureListener(id) {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _wsOnRootNotification(notification) {\n    const res = create(notification, RootNotificationResult);\n\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n\n\n  onRootChange(callback) {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null\n    };\n\n    this._updateSubscriptions();\n\n    return id;\n  }\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n\n\n  async removeRootChangeListener(id) {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n  /**\n   * Generate a new random keypair\n   */\n\n\n  static generate() {\n    return new Keypair(nacl.sign.keyPair());\n  }\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n\n\n  static fromSecretKey(secretKey, options) {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n\n    return new Keypair(keypair);\n  }\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n\n\n  static fromSeed(seed) {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n  /**\n   * The public key for this keypair\n   */\n\n\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n  /**\n   * The raw secret key for this keypair\n   */\n\n\n  get secretKey() {\n    return this._keypair.secretKey;\n  }\n\n}\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      publicKeyOffset,\n      publicKeyInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n\n\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\n\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n/**\n * Stake account authority info\n */\n\nclass Authorized {\n  /** stake authority */\n\n  /** withdraw authority */\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    this.staker = void 0;\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n\n}\n/**\n * Stake account lockup info\n */\n\nclass Lockup {\n  /** Unix timestamp of lockup expiration */\n\n  /** Epoch of lockup expiration */\n\n  /** Lockup custodian authority */\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    this.unixTimestamp = void 0;\n    this.epoch = void 0;\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n  /**\n   * Default, inactive Lockup value\n   */\n\n\n}\n/**\n * Create stake account transaction params\n */\n\nLockup.default = new Lockup(0, 0, PublicKey.default);\n\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n\n\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n\n    return o;\n  }\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n\n    return o;\n  }\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n\n    return o;\n  }\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n\n\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n\n}\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n/**\n * Factory class for transactions to interact with the Stake program\n */\n\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the Stake program\n   */\n\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n\n\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n\n\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n\n\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n\n\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n\n\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n\n\n  static split(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: authorizedPubkey,\n      newAccountPubkey: splitStakePubkey,\n      lamports: 0,\n      space: this.space,\n      programId: this.programId\n    }));\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return transaction.add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n\n\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n\n\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n\n\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\nStakeProgram.space = 200;\n\nconst {\n  publicKeyCreate,\n  ecdsaSign\n} = secp256k1;\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n\n    try {\n      return Buffer.from(sha3.keccak_256.update(toBuffer(publicKey)).digest()).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n\n\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n\n\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n\n\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n\n      const messageHash = Buffer.from(sha3.keccak_256.update(toBuffer(message)).digest());\n      const {\n        signature,\n        recid: recoveryId\n      } = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n/**\n * @internal\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n/**\n * ValidatorInfo class\n */\n\nclass ValidatorInfo {\n  /**\n   * validator public key\n   */\n\n  /**\n   * validator information\n   */\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    this.key = void 0;\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n\n\n  static fromConfigData(buffer) {\n    const PUBKEY_LENGTH = 32;\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$7(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(), // votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(), // authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(), // epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n\n\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n\n}\n\nfunction parseAuthorizedVoter({\n  epoch,\n  authorizedVoter\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\n\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx)];\n}\n\n/**\n * Vote account info\n */\n\nclass VoteInit {\n  /** [0, 100] */\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n\n}\n/**\n * Create vote account transaction params\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n\n\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n\n\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n\n\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n\n}\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  }\n});\n/**\n * Factory class for transactions to interact with the Vote program\n */\n\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  /**\n   * Public key that identifies the Vote program\n   */\n\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n\n\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n\n\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\nVoteProgram.space = 3731;\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n\n  if (status.err) {\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n\n  return signature;\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n\n  return url;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\n\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, Loader, Lockup, MAX_SEED_LENGTH, Message, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PublicKey, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionInstruction, VALIDATOR_INFO_KEY, VOTE_PROGRAM_ID, ValidatorInfo, VoteAccount, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport BN from 'bn.js';\nimport { sendAndConfirmTransaction as sendAndConfirmTransaction$1, PublicKey, Keypair, Transaction, SystemProgram, SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\n\nvar buffer = {};\n\nvar base64Js = {};\n\nbase64Js.byteLength = byteLength;\nbase64Js.toByteArray = toByteArray;\nbase64Js.fromByteArray = fromByteArray;\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens (b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4);\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n\n  var curByte = 0;\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen;\n\n  var i;\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = (tmp >> 16) & 0xFF;\n    arr[curByte++] = (tmp >> 8) & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[curByte++] = (tmp >> 8) & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    );\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    );\n  }\n\n  return parts.join('')\n}\n\nvar ieee754 = {};\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\nieee754.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = (nBytes * 8) - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n};\n\nieee754.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = (nBytes * 8) - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n(function (exports) {\n\nconst base64 = base64Js;\nconst ieee754$1 = ieee754;\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null;\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n\nconst K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  );\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1);\n    const proto = { foo: function () { return 42 } };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n});\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n});\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf();\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value);\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n};\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n};\n\nfunction allocUnsafe (size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n};\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0;\n  let buf = createBuffer(length);\n\n  const actual = buf.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0;\n  const buf = createBuffer(length);\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf;\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype);\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0;\n    const buf = createBuffer(len);\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len);\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n};\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length;\n  let y = b.length;\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i];\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n        buf.copy(buffer, pos);\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        );\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos);\n    }\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length;\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  let str = '';\n  const max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>'\n};\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart;\n  let y = end - start;\n  const len = Math.min(x, y);\n\n  const thisCopy = this.slice(thisStart, thisEnd);\n  const targetCopy = target.slice(start, end);\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1;\n  let arrLength = arr.length;\n  let valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i;\n  if (dir) {\n    let foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true;\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  const remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  const strLen = string.length;\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  let i;\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  let loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  const res = [];\n\n  let i = start;\n  while (i < end) {\n    const firstByte = buf[i];\n    let codePoint = null;\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1;\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = '';\n  end = Math.min(buf.length, end);\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  let out = '';\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end);\n  let res = '';\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256));\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  const newBuf = this.subarray(start, end);\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  let val = this[offset + --byteLength];\n  let mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n});\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n});\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  let val = this[offset];\n  let mul = 1;\n  let i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  let i = byteLength;\n  let mul = 1;\n  let val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  const val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n});\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n});\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754$1.read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754$1.read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754$1.read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754$1.read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  let mul = 1;\n  let i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  let i = byteLength - 1;\n  let mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = (value & 0xff);\n  this[offset + 1] = (value >>> 8);\n  return offset + 2\n};\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = (value >>> 8);\n  this[offset + 1] = (value & 0xff);\n  return offset + 2\n};\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = (value >>> 24);\n  this[offset + 2] = (value >>> 16);\n  this[offset + 1] = (value >>> 8);\n  this[offset] = (value & 0xff);\n  return offset + 4\n};\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = (value >>> 24);\n  this[offset + 1] = (value >>> 16);\n  this[offset + 2] = (value >>> 8);\n  this[offset + 3] = (value & 0xff);\n  return offset + 4\n};\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n\n  let lo = Number(value & BigInt(0xffffffff));\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n});\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n});\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  let i = 0;\n  let mul = 1;\n  let sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  let i = byteLength - 1;\n  let mul = 1;\n  let sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = (value & 0xff);\n  this[offset + 1] = (value >>> 8);\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = (value >>> 8);\n  this[offset + 1] = (value & 0xff);\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = (value & 0xff);\n  this[offset + 1] = (value >>> 8);\n  this[offset + 2] = (value >>> 16);\n  this[offset + 3] = (value >>> 24);\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = (value >>> 24);\n  this[offset + 1] = (value >>> 16);\n  this[offset + 2] = (value >>> 8);\n  this[offset + 3] = (value & 0xff);\n  return offset + 4\n};\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n});\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n});\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  ieee754$1.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  ieee754$1.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  const len = end - start;\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0);\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  let i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding);\n    const len = bytes.length;\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {};\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super();\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      });\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`;\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack; // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name;\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      });\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  };\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError);\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError);\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`;\n    let received = input;\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg\n  }, RangeError);\n\nfunction addNumericalSeparator (val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`;\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1));\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength);\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type);\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0];\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo;\n  const byteArray = [];\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i;\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef';\n  const table = new Array(256);\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16;\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n  return table\n})();\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n}(buffer));\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});\n\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\nvar inherits$1 = inherits;\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect$1(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect$1.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect$1.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect$1.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect$1.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect$1.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect$1 &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n}\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (buffer.isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global$1.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nfunction AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits$1(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return inspect$1(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nfunction equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nfunction notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nfunction deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nfunction deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (buffer.isBuffer(actual) && buffer.isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (buffer.isBuffer(actual) !== buffer.isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nfunction notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nfunction strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nfunction notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nfunction throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nfunction doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nfunction ifError(err) {\n  if (err) throw err;\n}\n\nvar Layout$1 = {};\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nLayout$1.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nLayout$1.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nLayout$1.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (buffer.Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(buffer.Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!buffer.Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new buffer.Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!buffer.Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new buffer.Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nLayout$1.ExternalLayout = ExternalLayout;\nLayout$1.GreedyCount = GreedyCount;\nLayout$1.OffsetLayout = OffsetLayout;\nLayout$1.UInt = UInt;\nLayout$1.UIntBE = UIntBE;\nLayout$1.Int = Int;\nLayout$1.IntBE = IntBE;\nLayout$1.Float = Float;\nLayout$1.FloatBE = FloatBE;\nLayout$1.Double = Double;\nLayout$1.DoubleBE = DoubleBE;\nLayout$1.Sequence = Sequence;\nLayout$1.Structure = Structure;\nLayout$1.UnionDiscriminator = UnionDiscriminator;\nLayout$1.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nLayout$1.Union = Union;\nLayout$1.VariantLayout = VariantLayout;\nLayout$1.BitStructure = BitStructure;\nLayout$1.BitField = BitField;\nLayout$1.Boolean = Boolean;\nLayout$1.Blob = Blob;\nLayout$1.CString = CString;\nLayout$1.UTF8 = UTF8;\nLayout$1.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nLayout$1.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nLayout$1.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nvar u8 = Layout$1.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nLayout$1.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nLayout$1.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nvar u32 = Layout$1.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nLayout$1.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nLayout$1.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nLayout$1.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nLayout$1.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nLayout$1.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nLayout$1.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nLayout$1.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nLayout$1.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nLayout$1.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nLayout$1.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nLayout$1.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nLayout$1.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nLayout$1.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nLayout$1.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nLayout$1.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nLayout$1.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nLayout$1.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nLayout$1.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nLayout$1.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nLayout$1.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nLayout$1.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nLayout$1.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nLayout$1.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nLayout$1.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nLayout$1.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nLayout$1.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nvar struct = Layout$1.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nLayout$1.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nLayout$1.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nLayout$1.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nLayout$1.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nvar blob = Layout$1.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nLayout$1.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nLayout$1.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nLayout$1.const = ((value, property) => new Constant(value, property));\n\n//      \n/**\n * Layout for a public key\n */\n\nconst publicKey = (property = 'publicKey') => {\n  return blob(32, property);\n};\n/**\n * Layout for a 64bit unsigned value\n */\n\nconst uint64 = (property = 'uint64') => {\n  return blob(8, property);\n};\n\n//      \nfunction sendAndConfirmTransaction(title, connection, transaction, ...signers) {\n  return sendAndConfirmTransaction$1(connection, transaction, signers, {\n    skipPreflight: false\n  });\n}\n\nconst TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nconst ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\n\nfunction pubkeyToBuffer(publicKey) {\n  return buffer.Buffer.from(publicKey.toBuffer());\n}\n/**\n * 64-bit value\n */\n\n\nclass u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer() {\n    const a = super.toArray().reverse();\n    const b = buffer.Buffer.from(a);\n\n    if (b.length === 8) {\n      return b;\n    }\n\n    assert(b.length < 8, 'u64 too large');\n    const zeroPad = buffer.Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n  /**\n   * Construct a u64 from Buffer representation\n   */\n\n\n  static fromBuffer(buffer) {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64([...buffer].reverse().map(i => `00${i.toString(16)}`.slice(-2)).join(''), 16);\n  }\n\n}\n\nfunction isAccount(accountOrPublicKey) {\n  return 'publicKey' in accountOrPublicKey;\n}\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3\n}; // The address of the special mint for wrapped native token.\n\nconst NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/**\n * Information about the mint\n */\n\nconst MintLayout = struct([u32('mintAuthorityOption'), publicKey('mintAuthority'), uint64('supply'), u8('decimals'), u8('isInitialized'), u32('freezeAuthorityOption'), publicKey('freezeAuthority')]);\n/**\n * Information about an account\n */\n\n/**\n * @private\n */\n\nconst AccountLayout = struct([publicKey('mint'), publicKey('owner'), uint64('amount'), u32('delegateOption'), publicKey('delegate'), u8('state'), u32('isNativeOption'), uint64('isNative'), uint64('delegatedAmount'), u32('closeAuthorityOption'), publicKey('closeAuthority')]);\n/**\n * Information about an multisig\n */\n\n/**\n * @private\n */\n\nconst MultisigLayout = struct([u8('m'), u8('n'), u8('is_initialized'), publicKey('signer1'), publicKey('signer2'), publicKey('signer3'), publicKey('signer4'), publicKey('signer5'), publicKey('signer6'), publicKey('signer7'), publicKey('signer8'), publicKey('signer9'), publicKey('signer10'), publicKey('signer11')]);\n/**\n * An ERC20-like Token\n */\n\nclass Token {\n  /**\n   * @private\n   */\n\n  /**\n   * The public key identifying this mint\n   */\n\n  /**\n   * Program Identifier for the Token program\n   */\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n\n  /**\n   * Fee payer\n   */\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(connection, publicKey, programId, payer) {\n    _defineProperty(this, \"connection\", void 0);\n\n    _defineProperty(this, \"publicKey\", void 0);\n\n    _defineProperty(this, \"programId\", void 0);\n\n    _defineProperty(this, \"associatedProgramId\", void 0);\n\n    _defineProperty(this, \"payer\", void 0);\n\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID\n    });\n  }\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  static async getMinBalanceRentForExemptMint(connection) {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  static async getMinBalanceRentForExemptAccount(connection) {\n    return await connection.getMinimumBalanceForRentExemption(AccountLayout.span);\n  }\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  static async getMinBalanceRentForExemptMultisig(connection) {\n    return await connection.getMinimumBalanceForRentExemption(MultisigLayout.span);\n  }\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n\n\n  static async createMint(connection, payer, mintAuthority, freezeAuthority, decimals, programId) {\n    const mintAccount = Keypair.generate();\n    const token = new Token(connection, mintAccount.publicKey, programId, payer); // Allocate memory for the account\n\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(connection);\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: mintAccount.publicKey,\n      lamports: balanceNeeded,\n      space: MintLayout.span,\n      programId\n    }));\n    transaction.add(Token.createInitMintInstruction(programId, mintAccount.publicKey, decimals, mintAuthority, freezeAuthority)); // Send the two instructions\n\n    await sendAndConfirmTransaction('createAccount and InitializeMint', connection, transaction, payer, mintAccount);\n    return token;\n  }\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n\n\n  async createAccount(owner) {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(this.connection);\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: this.payer.publicKey,\n      newAccountPubkey: newAccount.publicKey,\n      lamports: balanceNeeded,\n      space: AccountLayout.span,\n      programId: this.programId\n    }));\n    const mintPublicKey = this.publicKey;\n    transaction.add(Token.createInitAccountInstruction(this.programId, mintPublicKey, newAccount.publicKey, owner)); // Send the two instructions\n\n    await sendAndConfirmTransaction('createAccount and InitializeAccount', this.connection, transaction, this.payer, newAccount);\n    return newAccount.publicKey;\n  }\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n\n\n  async createAssociatedTokenAccount(owner) {\n    const associatedAddress = await Token.getAssociatedTokenAddress(this.associatedProgramId, this.programId, this.publicKey, owner);\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(owner, associatedAddress) {\n    await sendAndConfirmTransaction('CreateAssociatedTokenAccount', this.connection, new Transaction().add(Token.createAssociatedTokenAccountInstruction(this.associatedProgramId, this.programId, this.publicKey, associatedAddress, owner, this.payer.publicKey)), this.payer);\n    return associatedAddress;\n  }\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n\n\n  async getOrCreateAssociatedAccountInfo(owner) {\n    const associatedAddress = await Token.getAssociatedTokenAddress(this.associatedProgramId, this.programId, this.publicKey, owner); // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (err.message === FAILED_TO_FIND_ACCOUNT || err.message === INVALID_ACCOUNT_OWNER) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n        } catch (err) {// ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        } // Now this should always succeed\n\n\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n\n\n  static async createWrappedNativeAccount(connection, programId, owner, payer, amount) {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(connection); // Create a new account\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: payer.publicKey,\n      newAccountPubkey: newAccount.publicKey,\n      lamports: balanceNeeded,\n      space: AccountLayout.span,\n      programId\n    })); // Send lamports to it (these will be wrapped into native tokens by the token program)\n\n    transaction.add(SystemProgram.transfer({\n      fromPubkey: payer.publicKey,\n      toPubkey: newAccount.publicKey,\n      lamports: amount\n    })); // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n\n    transaction.add(Token.createInitAccountInstruction(programId, NATIVE_MINT, newAccount.publicKey, owner)); // Send the three instructions\n\n    await sendAndConfirmTransaction('createAccount, transfer, and initializeAccount', connection, transaction, payer, newAccount);\n    return newAccount.publicKey;\n  }\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n\n\n  async createMultisig(m, signers) {\n    const multisigAccount = Keypair.generate(); // Allocate memory for the account\n\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(this.connection);\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: this.payer.publicKey,\n      newAccountPubkey: multisigAccount.publicKey,\n      lamports: balanceNeeded,\n      space: MultisigLayout.span,\n      programId: this.programId\n    })); // create the new account\n\n    let keys = [{\n      pubkey: multisigAccount.publicKey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    signers.forEach(signer => keys.push({\n      pubkey: signer,\n      isSigner: false,\n      isWritable: false\n    }));\n    const dataLayout = struct([u8('instruction'), u8('m')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 2,\n      // InitializeMultisig instruction\n      m\n    }, data);\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data\n    }); // Send the two instructions\n\n    await sendAndConfirmTransaction('createAccount and InitializeMultisig', this.connection, transaction, this.payer, multisigAccount);\n    return multisigAccount.publicKey;\n  }\n  /**\n   * Retrieve mint information\n   */\n\n\n  async getMintInfo() {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = buffer.Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n\n    return mintInfo;\n  }\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n\n\n  async getAccountInfo(account, commitment) {\n    const info = await this.connection.getAccountInfo(account, commitment);\n\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = buffer.Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(`Invalid account mint: ${JSON.stringify(accountInfo.mint)} !== ${JSON.stringify(this.publicKey)}`);\n    }\n\n    return accountInfo;\n  }\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n\n\n  async getMultisigInfo(multisig) {\n    const info = await this.connection.getAccountInfo(multisig);\n\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = buffer.Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n    return multisigInfo;\n  }\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n\n\n  async transfer(source, destination, owner, multiSigners, amount) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    return await sendAndConfirmTransaction('Transfer', this.connection, new Transaction().add(Token.createTransferInstruction(this.programId, source, destination, ownerPublicKey, multiSigners, amount)), this.payer, ...signers);\n  }\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n\n\n  async approve(account, delegate, owner, multiSigners, amount) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('Approve', this.connection, new Transaction().add(Token.createApproveInstruction(this.programId, account, delegate, ownerPublicKey, multiSigners, amount)), this.payer, ...signers);\n  }\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  async revoke(account, owner, multiSigners) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('Revoke', this.connection, new Transaction().add(Token.createRevokeInstruction(this.programId, account, ownerPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n\n\n  async setAuthority(account, newAuthority, authorityType, currentAuthority, multiSigners) {\n    let currentAuthorityPublicKey;\n    let signers;\n\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('SetAuthority', this.connection, new Transaction().add(Token.createSetAuthorityInstruction(this.programId, account, newAuthority, authorityType, currentAuthorityPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n\n\n  async mintTo(dest, authority, multiSigners, amount) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('MintTo', this.connection, new Transaction().add(Token.createMintToInstruction(this.programId, this.publicKey, dest, ownerPublicKey, multiSigners, amount)), this.payer, ...signers);\n  }\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n\n\n  async burn(account, owner, multiSigners, amount) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('Burn', this.connection, new Transaction().add(Token.createBurnInstruction(this.programId, this.publicKey, account, ownerPublicKey, multiSigners, amount)), this.payer, ...signers);\n  }\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n\n\n  async closeAccount(account, dest, authority, multiSigners) {\n    let authorityPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('CloseAccount', this.connection, new Transaction().add(Token.createCloseAccountInstruction(this.programId, account, dest, authorityPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n\n\n  async freezeAccount(account, authority, multiSigners) {\n    let authorityPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('FreezeAccount', this.connection, new Transaction().add(Token.createFreezeAccountInstruction(this.programId, account, this.publicKey, authorityPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n\n\n  async thawAccount(account, authority, multiSigners) {\n    let authorityPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('ThawAccount', this.connection, new Transaction().add(Token.createThawAccountInstruction(this.programId, account, this.publicKey, authorityPublicKey, multiSigners)), this.payer, ...signers);\n  }\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n\n\n  async transferChecked(source, destination, owner, multiSigners, amount, decimals) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    return await sendAndConfirmTransaction('TransferChecked', this.connection, new Transaction().add(Token.createTransferCheckedInstruction(this.programId, source, this.publicKey, destination, ownerPublicKey, multiSigners, amount, decimals)), this.payer, ...signers);\n  }\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n\n\n  async approveChecked(account, delegate, owner, multiSigners, amount, decimals) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('ApproveChecked', this.connection, new Transaction().add(Token.createApproveCheckedInstruction(this.programId, account, this.publicKey, delegate, ownerPublicKey, multiSigners, amount, decimals)), this.payer, ...signers);\n  }\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n\n\n  async mintToChecked(dest, authority, multiSigners, amount, decimals) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('MintToChecked', this.connection, new Transaction().add(Token.createMintToCheckedInstruction(this.programId, this.publicKey, dest, ownerPublicKey, multiSigners, amount, decimals)), this.payer, ...signers);\n  }\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n\n\n  async burnChecked(account, owner, multiSigners, amount, decimals) {\n    let ownerPublicKey;\n    let signers;\n\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n\n    await sendAndConfirmTransaction('BurnChecked', this.connection, new Transaction().add(Token.createBurnCheckedInstruction(this.programId, this.publicKey, account, ownerPublicKey, multiSigners, amount, decimals)), this.payer, ...signers);\n  }\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n\n\n  async syncNative(nativeAccount) {\n    await sendAndConfirmTransaction('SyncNative', this.connection, new Transaction().add(Token.createSyncNativeInstruction(this.programId, nativeAccount)), this.payer);\n  }\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n\n\n  static createInitMintInstruction(programId, mint, decimals, mintAuthority, freezeAuthority) {\n    let keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    const commandDataLayout = struct([u8('instruction'), u8('decimals'), publicKey('mintAuthority'), u8('option'), publicKey('freezeAuthority')]);\n    let data = buffer.Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 0,\n        // InitializeMint instruction\n        decimals,\n        mintAuthority: pubkeyToBuffer(mintAuthority),\n        option: freezeAuthority === null ? 0 : 1,\n        freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0))\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n\n\n  static createInitAccountInstruction(programId, mint, account, owner) {\n    const keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: owner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 1 // InitializeAccount instruction\n\n    }, data);\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data\n    });\n  }\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n\n\n  static createTransferInstruction(programId, source, destination, owner, multiSigners, amount) {\n    const dataLayout = struct([u8('instruction'), uint64('amount')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 3,\n      // Transfer instruction\n      amount: new u64(amount).toBuffer()\n    }, data);\n    let keys = [{\n      pubkey: source,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: destination,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n\n\n  static createApproveInstruction(programId, account, delegate, owner, multiSigners, amount) {\n    const dataLayout = struct([u8('instruction'), uint64('amount')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 4,\n      // Approve instruction\n      amount: new u64(amount).toBuffer()\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: delegate,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  static createRevokeInstruction(programId, account, owner, multiSigners) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 5 // Approve instruction\n\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n\n\n  static createSetAuthorityInstruction(programId, account, newAuthority, authorityType, currentAuthority, multiSigners) {\n    const commandDataLayout = struct([u8('instruction'), u8('authorityType'), u8('option'), publicKey('newAuthority')]);\n    let data = buffer.Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode({\n        instruction: 6,\n        // SetAuthority instruction\n        authorityType: AuthorityTypeCodes[authorityType],\n        option: newAuthority === null ? 0 : 1,\n        newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0))\n      }, data);\n      data = data.slice(0, encodeLength);\n    }\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: currentAuthority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: currentAuthority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n\n\n  static createMintToInstruction(programId, mint, dest, authority, multiSigners, amount) {\n    const dataLayout = struct([u8('instruction'), uint64('amount')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 7,\n      // MintTo instruction\n      amount: new u64(amount).toBuffer()\n    }, data);\n    let keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: dest,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: authority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n\n\n  static createBurnInstruction(programId, mint, account, owner, multiSigners, amount) {\n    const dataLayout = struct([u8('instruction'), uint64('amount')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 8,\n      // Burn instruction\n      amount: new u64(amount).toBuffer()\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  static createCloseAccountInstruction(programId, account, dest, owner, multiSigners) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 9 // CloseAccount instruction\n\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: dest,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  static createFreezeAccountInstruction(programId, account, mint, authority, multiSigners) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 10 // FreezeAccount instruction\n\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: authority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n\n\n  static createThawAccountInstruction(programId, account, mint, authority, multiSigners) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 11 // ThawAccount instruction\n\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: authority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n\n\n  static createTransferCheckedInstruction(programId, source, mint, destination, owner, multiSigners, amount, decimals) {\n    const dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 12,\n      // TransferChecked instruction\n      amount: new u64(amount).toBuffer(),\n      decimals\n    }, data);\n    let keys = [{\n      pubkey: source,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: destination,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n\n\n  static createApproveCheckedInstruction(programId, account, mint, delegate, owner, multiSigners, amount, decimals) {\n    const dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 13,\n      // ApproveChecked instruction\n      amount: new u64(amount).toBuffer(),\n      decimals\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: delegate,\n      isSigner: false,\n      isWritable: false\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n\n\n  static createMintToCheckedInstruction(programId, mint, dest, authority, multiSigners, amount, decimals) {\n    const dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 14,\n      // MintToChecked instruction\n      amount: new u64(amount).toBuffer(),\n      decimals\n    }, data);\n    let keys = [{\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: dest,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: authority,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n\n\n  static createBurnCheckedInstruction(programId, mint, account, owner, multiSigners, amount, decimals) {\n    const dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 15,\n      // BurnChecked instruction\n      amount: new u64(amount).toBuffer(),\n      decimals\n    }, data);\n    let keys = [{\n      pubkey: account,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: true\n    }];\n\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false\n      });\n    } else {\n      keys.push({\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      });\n      multiSigners.forEach(signer => keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      }));\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n\n\n  static createSyncNativeInstruction(programId, nativeAccount) {\n    const dataLayout = struct([u8('instruction')]);\n    const data = buffer.Buffer.alloc(dataLayout.span);\n    dataLayout.encode({\n      instruction: 17 // SyncNative instruction\n\n    }, data);\n    let keys = [{\n      pubkey: nativeAccount,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data\n    });\n  }\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n\n\n  static async getAssociatedTokenAddress(associatedProgramId, programId, mint, owner, allowOwnerOffCurve = false) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n\n    return (await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedProgramId))[0];\n  }\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n\n\n  static createAssociatedTokenAccountInstruction(associatedProgramId, programId, mint, associatedAccount, owner, payer) {\n    const data = buffer.Buffer.alloc(0);\n    let keys = [{\n      pubkey: payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: associatedAccount,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: owner,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: mint,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: programId,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data\n    });\n  }\n\n}\n\nexport { ASSOCIATED_TOKEN_PROGRAM_ID, AccountLayout, MintLayout, NATIVE_MINT, TOKEN_PROGRAM_ID, Token, u64 };\n//# sourceMappingURL=index.browser.esm.js.map\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","import * as BufferLayout from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\n\nexport class SignedNumberLayout extends BufferLayout.Layout<BN> {\n  constructor(span: number, property?: string) {\n    super(span, property);\n  }\n\n  decode(b: Uint8Array, offset?: number): BN {\n    const start = offset == undefined ? 0 : offset;\n    const data = b.slice(start, start + this.span);\n    return new BN(data, undefined, 'le').fromTwos(this.span * 8);\n  }\n\n  encode(src: BN, b: Uint8Array, offset?: number): number {\n    const start = offset == undefined ? 0 : offset;\n    b.set(src.toTwos(this.span * 8).toArray('le'), start);\n\n    return this.span;\n  }\n}\n\nexport const u64 = (property?: string): BufferLayout.Layout<BN> => {\n  return new SignedNumberLayout(8, property);\n};\n\nclass WrappedLayout<T, U> extends BufferLayout.Layout<U> {\n  private readonly layout: BufferLayout.Layout<T>;\n  private readonly decoder: (data: T) => U;\n  private readonly encoder: (src: U) => T;\n\n  constructor(\n    layout: BufferLayout.Layout<T>,\n    decoder: (data: T) => U,\n    encoder: (src: U) => T,\n    property?: string,\n  ) {\n    super(layout.span, property);\n    this.layout = layout;\n    this.decoder = decoder;\n    this.encoder = encoder;\n  }\n\n  decode(b: Buffer, offset?: number): U {\n    return this.decoder(this.layout.decode(b, offset));\n  }\n\n  encode(src: U, b: Buffer, offset?: number): number {\n    return this.layout.encode(this.encoder(src), b, offset);\n  }\n\n  getSpan(b: Buffer, offset?: number): number {\n    return this.layout.getSpan(b, offset);\n  }\n}\n\nexport function publicKey(property?: string): BufferLayout.Layout<PublicKey> {\n  return new WrappedLayout(\n    BufferLayout.blob(32) as any,\n    (b: Buffer) => new PublicKey(b),\n    (key: PublicKey) => key.toBuffer(),\n    property,\n  );\n}\n\nexport function vec<T>(\n  elementLayout: BufferLayout.Layout<T>,\n  property?: string,\n): BufferLayout.Layout<T[]> {\n  const length = BufferLayout.u32('length');\n  const layout: BufferLayout.Layout<{ values: T[] }> = BufferLayout.struct<any>([\n    length,\n    BufferLayout.seq(elementLayout, BufferLayout.offset(length, -length.span), 'values'),\n  ]);\n  return new WrappedLayout(\n    layout,\n    ({ values }) => values,\n    (values) => ({ values }),\n    property,\n  );\n}\n\nexport class OptionLayout<T> extends BufferLayout.Layout<T | undefined> {\n  private readonly layout: BufferLayout.Layout<T>;\n  private readonly discriminator: BufferLayout.Layout<number>;\n\n  constructor(layout: BufferLayout.Layout<T>) {\n    super(layout.span + 1, layout.property);\n    this.layout = layout;\n    this.discriminator = BufferLayout.u8();\n  }\n\n  public encode(src: T, b: Uint8Array, offset?: number): number {\n    if (src === null || src === undefined) {\n      return this.layout.encode(0 as never as T, b, offset);\n    }\n    this.discriminator.encode(1, b, offset);\n    return this.layout.encode(src, b, (offset ?? 0) + 1) + 1;\n  }\n\n  public decode(b: Uint8Array, offset?: number): T | undefined {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (!discriminator) {\n      return undefined;\n    }\n    return this.layout.decode(b, (offset ?? 0) + 1);\n  }\n}\n\nexport function option<T>(layout: BufferLayout.Layout<T>) {\n  return new OptionLayout<T>(layout);\n}\n","import BN from 'bn.js';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\n\nexport function solToLamports(amount: number): number {\n  if (isNaN(amount)) return Number(0);\n  return Number(amount * LAMPORTS_PER_SOL);\n}\n\nexport function lamportsToSol(lamports: number | BN): number {\n  if (typeof lamports === 'number') {\n    return Math.abs(lamports) / LAMPORTS_PER_SOL;\n  }\n\n  let signMultiplier = 1;\n  if (lamports.isNeg()) {\n    signMultiplier = -1;\n  }\n\n  const absLamports = lamports.abs();\n  const lamportsString = absLamports.toString(10).padStart(10, '0');\n  const splitIndex = lamportsString.length - 9;\n  const solString = lamportsString.slice(0, splitIndex) + '.' + lamportsString.slice(splitIndex);\n  return signMultiplier * parseFloat(solString);\n}\n","import { Buffer } from 'buffer';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\n\n// Public key that identifies the metadata program.\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\nexport const METADATA_MAX_NAME_LENGTH = 32;\nexport const METADATA_MAX_SYMBOL_LENGTH = 10;\nexport const METADATA_MAX_URI_LENGTH = 200;\n\n// Public key that identifies the SPL Stake Pool program.\nexport const STAKE_POOL_PROGRAM_ID = new PublicKey('SPoo1Ku8WFXoNDMHPsrGSTSG1Y47rzgn41SLUNakuHy');\n\n// Maximum number of validators to update during UpdateValidatorListBalance.\nexport const MAX_VALIDATORS_TO_UPDATE = 5;\n\n// Seed for ephemeral stake account\nexport const EPHEMERAL_STAKE_SEED_PREFIX = Buffer.from('ephemeral');\n\n// Seed used to derive transient stake accounts.\nexport const TRANSIENT_STAKE_SEED_PREFIX = Buffer.from('transient');\n\n// Minimum amount of staked SOL required in a validator stake account to allow\n// for merges without a mismatch on credits observed\nexport const MINIMUM_ACTIVE_STAKE = LAMPORTS_PER_SOL;\n","import { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport { EPHEMERAL_STAKE_SEED_PREFIX, TRANSIENT_STAKE_SEED_PREFIX } from '../constants';\n\n/**\n * Generates the withdraw authority program address for the stake pool\n */\nexport async function findWithdrawAuthorityProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [stakePoolAddress.toBuffer(), Buffer.from('withdraw')],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [voteAccountAddress.toBuffer(), stakePoolAddress.toBuffer()],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport async function findTransientStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [\n      TRANSIENT_STAKE_SEED_PREFIX,\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed.toBuffer('le', 8),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the ephemeral program address for stake pool redelegation\n */\nexport async function findEphemeralStakeProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [EPHEMERAL_STAKE_SEED_PREFIX, stakePoolAddress.toBuffer(), seed.toBuffer('le', 8)],\n    programId,\n  );\n  return publicKey;\n}\n","import { PublicKey } from '@solana/web3.js';\nimport { struct, u32, u8, nu64 } from '@solana/buffer-layout';\nimport BN from 'bn.js';\nimport {\n  Infer,\n  number,\n  nullable,\n  enums,\n  type,\n  coerce,\n  instance,\n  string,\n  optional,\n} from 'superstruct';\nimport { publicKey, option, u64, vec } from './utils';\nimport { Fee } from './index';\n\nconst lockup = (property?: string) =>\n  struct<{\n    unixTimestamp: BN;\n    epoch: BN;\n    custodian: PublicKey;\n  }>([u64('unixTimestamp'), u64('epoch'), publicKey('custodian')], property);\n\nconst fee = (property?: string) => struct<Fee>([u64('denominator'), u64('numerator')], property);\n\n/**\n * AccountLayout.encode from \"@solana/spl-token\" doesn't work\n */\nexport const AccountLayout = struct<any>([\n  publicKey('mint'),\n  publicKey('owner'),\n  u64('amount'),\n  u32('delegateOption'),\n  publicKey('delegate'),\n  u8('state'),\n  u32('isNativeOption'),\n  u64('isNative'),\n  u64('delegatedAmount'),\n  u32('closeAuthorityOption'),\n  publicKey('closeAuthority'),\n]);\n\nexport enum AccountType {\n  Uninitialized,\n  StakePool,\n  ValidatorList,\n}\n\nexport const BigNumFromString = coerce(instance(BN), string(), (value) => {\n  if (typeof value === 'string') return new BN(value, 10);\n  throw new Error('invalid big num');\n});\n\nexport const PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  (value) => new PublicKey(value),\n);\n\nexport type StakeAccountType = Infer<typeof StakeAccountType>;\nexport const StakeAccountType = enums(['uninitialized', 'initialized', 'delegated', 'rewardsPool']);\n\nexport type StakeMeta = Infer<typeof StakeMeta>;\nexport const StakeMeta = type({\n  rentExemptReserve: BigNumFromString,\n  authorized: type({\n    staker: PublicKeyFromString,\n    withdrawer: PublicKeyFromString,\n  }),\n  lockup: type({\n    unixTimestamp: number(),\n    epoch: number(),\n    custodian: PublicKeyFromString,\n  }),\n});\n\nexport type StakeAccountInfo = Infer<typeof StakeAccountInfo>;\nexport const StakeAccountInfo = type({\n  meta: StakeMeta,\n  stake: nullable(\n    type({\n      delegation: type({\n        voter: PublicKeyFromString,\n        stake: BigNumFromString,\n        activationEpoch: BigNumFromString,\n        deactivationEpoch: BigNumFromString,\n        warmupCooldownRate: number(),\n      }),\n      creditsObserved: number(),\n    }),\n  ),\n});\n\nexport type StakeAccount = Infer<typeof StakeAccount>;\nexport const StakeAccount = type({\n  type: StakeAccountType,\n  info: optional(StakeAccountInfo),\n});\n\nexport interface StakePool {\n  accountType: AccountType;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakeDepositAuthority: PublicKey;\n  stakeWithdrawBumpSeed: number;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerFeeAccount: PublicKey;\n  tokenProgramId: PublicKey;\n  totalLamports: BN;\n  poolTokenSupply: BN;\n  lastUpdateEpoch: BN;\n  lockup: { unixTimestamp: BN; epoch: BN; custodian: PublicKey };\n  epochFee: Fee;\n  nextEpochFee?: Fee | undefined;\n  preferredDepositValidatorVoteAddress?: PublicKey | undefined;\n  preferredWithdrawValidatorVoteAddress?: PublicKey | undefined;\n  stakeDepositFee: Fee;\n  stakeWithdrawalFee: Fee;\n  nextStakeWithdrawalFee?: Fee | undefined;\n  stakeReferralFee: number;\n  solDepositAuthority?: PublicKey | undefined;\n  solDepositFee: Fee;\n  solReferralFee: number;\n  solWithdrawAuthority?: PublicKey | undefined;\n  solWithdrawalFee: Fee;\n  nextSolWithdrawalFee?: Fee | undefined;\n  lastEpochPoolTokenSupply: BN;\n  lastEpochTotalLamports: BN;\n}\n\nexport const StakePoolLayout = struct<StakePool>([\n  u8('accountType'),\n  publicKey('manager'),\n  publicKey('staker'),\n  publicKey('stakeDepositAuthority'),\n  u8('stakeWithdrawBumpSeed'),\n  publicKey('validatorList'),\n  publicKey('reserveStake'),\n  publicKey('poolMint'),\n  publicKey('managerFeeAccount'),\n  publicKey('tokenProgramId'),\n  u64('totalLamports'),\n  u64('poolTokenSupply'),\n  u64('lastUpdateEpoch'),\n  lockup('lockup'),\n  fee('epochFee'),\n  option(fee('nextEpochFee')),\n  option(publicKey('preferredDepositValidatorVoteAddress')),\n  option(publicKey('preferredWithdrawValidatorVoteAddress')),\n  fee('stakeDepositFee'),\n  fee('stakeWithdrawalFee'),\n  option(fee('nextStakeWithdrawalFee')),\n  u8('stakeReferralFee'),\n  option(publicKey('solDepositAuthority')),\n  fee('solDepositFee'),\n  u8('solReferralFee'),\n  option(publicKey('solWithdrawAuthority')),\n  fee('solWithdrawalFee'),\n  option(fee('nextSolWithdrawalFee')),\n  u64('lastEpochPoolTokenSupply'),\n  u64('lastEpochTotalLamports'),\n]);\n\nexport enum ValidatorStakeInfoStatus {\n  Active,\n  DeactivatingTransient,\n  ReadyForRemoval,\n}\n\nexport interface ValidatorStakeInfo {\n  status: ValidatorStakeInfoStatus;\n  voteAccountAddress: PublicKey;\n  activeStakeLamports: BN;\n  transientStakeLamports: BN;\n  transientSeedSuffixStart: BN;\n  transientSeedSuffixEnd: BN;\n  lastUpdateEpoch: BN;\n}\n\nexport const ValidatorStakeInfoLayout = struct<ValidatorStakeInfo>([\n  /// Amount of active stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('activeStakeLamports'),\n  /// Amount of transient stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('transientStakeLamports'),\n  /// Last epoch the active and transient stake lamports fields were updated\n  u64('lastUpdateEpoch'),\n  /// Start of the validator transient account seed suffixes\n  u64('transientSeedSuffixStart'),\n  /// End of the validator transient account seed suffixes\n  u64('transientSeedSuffixEnd'),\n  /// Status of the validator stake account\n  u8('status'),\n  /// Validator vote account address\n  publicKey('voteAccountAddress'),\n]);\n\nexport interface ValidatorList {\n  /// Account type, must be ValidatorList currently\n  accountType: number;\n  /// Maximum allowable number of validators\n  maxValidators: number;\n  /// List of stake info for each validator in the pool\n  validators: ValidatorStakeInfo[];\n}\n\nexport const ValidatorListLayout = struct<ValidatorList>([\n  u8('accountType'),\n  u32('maxValidators'),\n  vec(ValidatorStakeInfoLayout, 'validators'),\n]);\n","import {\n  Connection,\n  Keypair,\n  PublicKey,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { findStakeProgramAddress, findTransientStakeProgramAddress } from './program-address';\nimport BN from 'bn.js';\n\nimport { lamportsToSol } from './math';\nimport { Fee, WithdrawAccount } from '../index';\nimport {\n  StakePool,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfoStatus,\n} from '../layouts';\nimport { MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from '../constants';\n\nexport async function getValidatorListAccount(connection: Connection, pubkey: PublicKey) {\n  const account = await connection.getAccountInfo(pubkey);\n  if (!account) {\n    throw new Error('Invalid validator list account');\n  }\n  return {\n    pubkey,\n    account: {\n      data: ValidatorListLayout.decode(account?.data) as ValidatorList,\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\nexport interface ValidatorAccount {\n  type: 'preferred' | 'active' | 'transient' | 'reserve';\n  voteAddress?: PublicKey | undefined;\n  stakeAddress: PublicKey;\n  lamports: number;\n}\n\nexport async function prepareWithdrawAccounts(\n  connection: Connection,\n  stakePool: StakePool,\n  stakePoolAddress: PublicKey,\n  amount: number,\n  compareFn?: (a: ValidatorAccount, b: ValidatorAccount) => number,\n  skipFee?: boolean,\n): Promise<WithdrawAccount[]> {\n  const validatorListAcc = await connection.getAccountInfo(stakePool.validatorList);\n  const validatorList = ValidatorListLayout.decode(\n    Uint8Array.from(validatorListAcc?.data ?? []),\n  ) as ValidatorList;\n\n  if (!validatorList?.validators || validatorList?.validators.length == 0) {\n    throw new Error('No accounts found');\n  }\n\n  const minBalanceForRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n  const minBalance = minBalanceForRentExemption + MINIMUM_ACTIVE_STAKE;\n\n  let accounts = [] as Array<{\n    type: 'preferred' | 'active' | 'transient' | 'reserve';\n    voteAddress?: PublicKey | undefined;\n    stakeAddress: PublicKey;\n    lamports: number;\n  }>;\n\n  // Prepare accounts\n  for (const validator of validatorList.validators) {\n    if (validator.status !== ValidatorStakeInfoStatus.Active) {\n      continue;\n    }\n\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      validator.voteAccountAddress,\n      stakePoolAddress,\n    );\n\n    if (!validator.activeStakeLamports.isZero()) {\n      const isPreferred = stakePool?.preferredWithdrawValidatorVoteAddress?.equals(\n        validator.voteAccountAddress,\n      );\n      accounts.push({\n        type: isPreferred ? 'preferred' : 'active',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: stakeAccountAddress,\n        lamports: validator.activeStakeLamports.toNumber(),\n      });\n    }\n\n    const transientStakeLamports = validator.transientStakeLamports.toNumber() - minBalance;\n    if (transientStakeLamports > 0) {\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      accounts.push({\n        type: 'transient',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: transientStakeAccountAddress,\n        lamports: transientStakeLamports,\n      });\n    }\n  }\n\n  // Sort from highest to lowest balance\n  accounts = accounts.sort(compareFn ? compareFn : (a, b) => b.lamports - a.lamports);\n\n  const reserveStake = await connection.getAccountInfo(stakePool.reserveStake);\n  const reserveStakeBalance = (reserveStake?.lamports ?? 0) - minBalanceForRentExemption - 1;\n  if (reserveStakeBalance > 0) {\n    accounts.push({\n      type: 'reserve',\n      stakeAddress: stakePool.reserveStake,\n      lamports: reserveStakeBalance,\n    });\n  }\n\n  // Prepare the list of accounts to withdraw from\n  const withdrawFrom: WithdrawAccount[] = [];\n  let remainingAmount = amount;\n\n  const fee = stakePool.stakeWithdrawalFee;\n  const inverseFee: Fee = {\n    numerator: fee.denominator.sub(fee.numerator),\n    denominator: fee.denominator,\n  };\n\n  for (const type of ['preferred', 'active', 'transient', 'reserve']) {\n    const filteredAccounts = accounts.filter((a) => a.type == type);\n\n    for (const { stakeAddress, voteAddress, lamports } of filteredAccounts) {\n      if (lamports <= minBalance && type == 'transient') {\n        continue;\n      }\n\n      let availableForWithdrawal = calcPoolTokensForDeposit(stakePool, lamports);\n\n      if (!skipFee && !inverseFee.numerator.isZero()) {\n        availableForWithdrawal = divideBnToNumber(\n          new BN(availableForWithdrawal).mul(inverseFee.denominator),\n          inverseFee.numerator,\n        );\n      }\n\n      const poolAmount = Math.min(availableForWithdrawal, remainingAmount);\n      if (poolAmount <= 0) {\n        continue;\n      }\n\n      // Those accounts will be withdrawn completely with `claim` instruction\n      withdrawFrom.push({ stakeAddress, voteAddress, poolAmount });\n      remainingAmount -= poolAmount;\n\n      if (remainingAmount == 0) {\n        break;\n      }\n    }\n\n    if (remainingAmount == 0) {\n      break;\n    }\n  }\n\n  // Not enough stake to withdraw the specified amount\n  if (remainingAmount > 0) {\n    throw new Error(\n      `No stake accounts found in this pool with enough balance to withdraw ${lamportsToSol(\n        amount,\n      )} pool tokens.`,\n    );\n  }\n\n  return withdrawFrom;\n}\n\n/**\n * Calculate the pool tokens that should be minted for a deposit of `stakeLamports`\n */\nexport function calcPoolTokensForDeposit(stakePool: StakePool, stakeLamports: number): number {\n  if (stakePool.poolTokenSupply.isZero() || stakePool.totalLamports.isZero()) {\n    return stakeLamports;\n  }\n  return Math.floor(\n    divideBnToNumber(new BN(stakeLamports).mul(stakePool.poolTokenSupply), stakePool.totalLamports),\n  );\n}\n\n/**\n * Calculate lamports amount on withdrawal\n */\nexport function calcLamportsWithdrawAmount(stakePool: StakePool, poolTokens: number): number {\n  const numerator = new BN(poolTokens).mul(stakePool.totalLamports);\n  const denominator = stakePool.poolTokenSupply;\n  if (numerator.lt(denominator)) {\n    return 0;\n  }\n  return divideBnToNumber(numerator, denominator);\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  if (denominator.isZero()) {\n    return 0;\n  }\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function newStakeAccount(\n  feePayer: PublicKey,\n  instructions: TransactionInstruction[],\n  lamports: number,\n): Keypair {\n  // Account for tokens not specified, creating one\n  const stakeReceiverKeypair = Keypair.generate();\n  console.log(`Creating account to receive stake ${stakeReceiverKeypair.publicKey}`);\n\n  instructions.push(\n    // Creating new account\n    SystemProgram.createAccount({\n      fromPubkey: feePayer,\n      newAccountPubkey: stakeReceiverKeypair.publicKey,\n      lamports,\n      space: StakeProgram.space,\n      programId: StakeProgram.programId,\n    }),\n  );\n\n  return stakeReceiverKeypair;\n}\n","import { Connection, PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport {\n  AccountInfo,\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  MintInfo,\n  Token,\n  TOKEN_PROGRAM_ID,\n} from '@solana/spl-token';\nimport { Buffer } from 'buffer';\nimport { AccountLayout } from '../layouts';\nimport { METADATA_PROGRAM_ID } from '../constants';\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\nexport async function getTokenMint(\n  connection: Connection,\n  tokenMintPubkey: PublicKey,\n): Promise<MintInfo | undefined> {\n  // @ts-ignore\n  const token = new Token(connection, tokenMintPubkey, TOKEN_PROGRAM_ID, null);\n  return token.getMintInfo();\n}\n\n/**\n * Retrieve the associated account or create one if not found.\n * This account may then be used as a `transfer()` or `approve()` destination\n */\nexport async function addAssociatedTokenAccount(\n  connection: Connection,\n  owner: PublicKey,\n  mint: PublicKey,\n  instructions: TransactionInstruction[],\n) {\n  const associatedAddress = await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    mint,\n    owner,\n  );\n\n  let rentFee = 0;\n\n  // This is the optimum logic, considering TX fee, client-side computation,\n  // RPC roundtrips and guaranteed idempotent.\n  // Sadly we can't do this atomically;\n  try {\n    const account = await connection.getAccountInfo(associatedAddress);\n    if (!account) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n  } catch (err: any) {\n    // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n    // already been received some lamports (= became system accounts).\n    // Assuming program derived addressing is safe, this is the only case\n    // for the INVALID_ACCOUNT_OWNER in this code-path\n    if (err.message === FAILED_TO_FIND_ACCOUNT || err.message === INVALID_ACCOUNT_OWNER) {\n      instructions.push(\n        Token.createAssociatedTokenAccountInstruction(\n          ASSOCIATED_TOKEN_PROGRAM_ID,\n          TOKEN_PROGRAM_ID,\n          mint,\n          associatedAddress,\n          owner,\n          owner,\n        ),\n      );\n      rentFee = await connection.getMinimumBalanceForRentExemption(AccountLayout.span);\n    } else {\n      throw err;\n    }\n    console.warn(err);\n  }\n\n  return {\n    associatedAddress,\n    rentFee,\n  };\n}\n\nexport async function getTokenAccount(\n  connection: Connection,\n  tokenAccountAddress: PublicKey,\n  expectedTokenMint: PublicKey,\n): Promise<AccountInfo | void> {\n  try {\n    const account = await connection.getAccountInfo(tokenAccountAddress);\n    if (!account) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(`Invalid account ${tokenAccountAddress.toBase58()}`);\n    }\n    const tokenAccount = AccountLayout.decode(account.data) as AccountInfo;\n    if (tokenAccount.mint?.toBase58() != expectedTokenMint.toBase58()) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(\n        `Invalid token mint for ${tokenAccountAddress}, expected mint is ${expectedTokenMint}`,\n      );\n    }\n    return tokenAccount;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMetadataPDA(mint: PublicKey): Promise<PublicKey> {\n  const [publicKey] = await PublicKey.findProgramAddress(\n    [Buffer.from('metadata'), METADATA_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    METADATA_PROGRAM_ID,\n  );\n  return publicKey;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport { Buffer } from 'buffer';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<any>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength = type.layout.span;\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({ instruction: type.index }, fields);\n  type.layout.encode(layoutFields, data);\n\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","export * from './layout';\nexport * from './math';\nexport * from './program-address';\nexport * from './stake';\nexport * from './token';\nexport * from './instruction';\n\nexport function arrayChunk(array: any[], size: number): any[] {\n  const result = [];\n  for (let i = 0; i < array.length; i += size) {\n    result.push(array.slice(i, i + size));\n  }\n  return result;\n}\n","import {\n  PublicKey,\n  STAKE_CONFIG_ID,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport BN from 'bn.js';\nimport {\n  METADATA_MAX_NAME_LENGTH,\n  METADATA_MAX_SYMBOL_LENGTH,\n  METADATA_MAX_URI_LENGTH,\n  METADATA_PROGRAM_ID,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\nimport { InstructionType, encodeData } from './utils';\nimport { Fee } from './index';\n\n/**\n * An enumeration of valid StakePoolInstructionType's\n */\nexport type StakePoolInstructionType =\n  | 'Initialize'\n  | 'AddValidatorToPool'\n  | 'RemoveValidatorFromPool'\n  | 'DecreaseValidatorStake'\n  | 'IncreaseValidatorStake'\n  // | 'SetPreferredValidator'\n  | 'UpdateValidatorListBalance'\n  | 'UpdateStakePoolBalance'\n  | 'CleanupRemovedValidatorEntries'\n  | 'DepositStake'\n  | 'WithdrawStake'\n  // | 'SetManager'\n  // | 'SetFee'\n  // | 'SetStaker'\n  | 'DepositSol'\n  // | 'SetFundingAuthority'\n  | 'WithdrawSol'\n  | 'CreateTokenMetadata'\n  | 'UpdateTokenMetadata'\n  | 'IncreaseAdditionalValidatorStake'\n  | 'DecreaseAdditionalValidatorStake'\n  | 'Redelegate';\n\nconst MOVE_STAKE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.nu64('lamports'),\n  BufferLayout.nu64('transientStakeSeed'),\n]);\n\nconst TOKEN_METADATA_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.blob(METADATA_MAX_NAME_LENGTH, 'name'),\n  BufferLayout.blob(METADATA_MAX_SYMBOL_LENGTH, 'symbol'),\n  BufferLayout.blob(METADATA_MAX_URI_LENGTH, 'uri'),\n]);\n\nconst feeLayout = (property?: string) =>\n  BufferLayout.struct<any>(\n    [BufferLayout.nu64('denominator'), BufferLayout.nu64('numerator')],\n    property,\n  );\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_POOL_INSTRUCTION_LAYOUTS: {\n  [type in StakePoolInstructionType]: InstructionType;\n} = Object.freeze({\n  /// Initializes a new StakePool.\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      /// Fee assessed as percentage of perceived rewards\n      feeLayout('fee'),\n      /// Fee charged per withdrawal as percentage of withdrawal\n      feeLayout('withdrawalFee'),\n      /// Fee charged per deposit as percentage of deposit\n      feeLayout('depositFee'),\n      /// Percentage [0-100] of deposit_fee that goes to referrer\n      BufferLayout.u8('referralFee'),\n      /// Maximum expected number of validators\n      BufferLayout.u32('maxValidators'),\n    ]),\n  },\n  /// (Staker only) Adds stake account delegated to validator to the pool's list of managed validators.\n  AddValidatorToPool: {\n    index: 1,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      // Optional non-zero u32 seed used for generating the validator stake address\n      // OptionLayout.of(BufferLayout.u32('seed')),\n    ]),\n  },\n  /// (Staker only) Removes validator from the pool, deactivating its stake\n  RemoveValidatorFromPool: {\n    index: 2,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  /// (Staker only) Decrease active stake on a validator, eventually moving it to the reserve\n  DecreaseValidatorStake: {\n    index: 3,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  /// (Staker only) Increase stake on a validator from the reserve account\n  IncreaseValidatorStake: {\n    index: 4,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  // SetPreferredValidator: {\n  //   index: 5,\n  //   layout: BufferLayout.struct<any>([\n  //     BufferLayout.u8('instruction'),\n  //     BufferLayout.u8('validatorType'),\n  //     BufferLayout.u64('validatorVoteAddress'), // Option<Pubkey>\n  //   ]),\n  // },\n  UpdateValidatorListBalance: {\n    index: 6,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('startIndex'),\n      BufferLayout.u8('noMerge'),\n    ]),\n  },\n  UpdateStakePoolBalance: {\n    index: 7,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  CleanupRemovedValidatorEntries: {\n    index: 8,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  DepositStake: {\n    index: 9,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  /// Withdraw the token from the pool at the current ratio.\n  WithdrawStake: {\n    index: 10,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('poolTokens'),\n    ]),\n  },\n  // /// (Manager only) Update manager\n  // SetManager: {\n  //   index: 11,\n  //   layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  // },\n  // /// (Manager only) Update fee\n  // SetFee: {\n  //   index: 12,\n  //   layout: BufferLayout.struct<any>([\n  //     BufferLayout.u8('instruction'),\n  //     // Type of fee to update and value to update it to\n  //     BufferLayout.nu64('fee'),\n  //   ]),\n  // },\n  // /// (Manager or staker only) Update staker\n  // SetStaker: {\n  //   index: 13,\n  //   layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  // },\n  /// Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n  /// representing ownership into the pool. Inputs are converted to the current ratio.\n  DepositSol: {\n    index: 14,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('lamports'),\n    ]),\n  },\n  // /// (Manager only) Update SOL deposit, stake deposit, or SOL withdrawal authority.\n  // SetFundingAuthority: {\n  //   index: 15,\n  // },\n  /// Withdraw SOL directly from the pool's reserve account. Fails if the\n  /// reserve does not have enough SOL.\n  WithdrawSol: {\n    index: 16,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('poolTokens'),\n    ]),\n  },\n  /// Create token metadata for the stake-pool token in the\n  /// metaplex-token program\n  CreateTokenMetadata: {\n    index: 17,\n    layout: TOKEN_METADATA_LAYOUT,\n  },\n  /// Update token metadata for the stake-pool token in the\n  /// metaplex-token program\n  UpdateTokenMetadata: {\n    index: 18,\n    layout: TOKEN_METADATA_LAYOUT,\n  },\n  IncreaseAdditionalValidatorStake: {\n    index: 19,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('lamports'),\n      BufferLayout.nu64('transientStakeSeed'),\n      BufferLayout.nu64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseAdditionalValidatorStake: {\n    index: 20,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('lamports'),\n      BufferLayout.nu64('transientStakeSeed'),\n      BufferLayout.nu64('ephemeralStakeSeed'),\n    ]),\n  },\n  Redelegate: {\n    index: 21,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      /// Amount of lamports to redelegate\n      BufferLayout.nu64('lamports'),\n      /// Seed used to create source transient stake account\n      BufferLayout.nu64('sourceTransientStakeSeed'),\n      /// Seed used to create destination ephemeral account.\n      BufferLayout.nu64('ephemeralStakeSeed'),\n      /// Seed used to create destination transient stake account. If there is\n      /// already transient stake, this must match the current seed, otherwise\n      /// it can be anything\n      BufferLayout.nu64('destinationTransientStakeSeed'),\n    ]),\n  },\n});\n\nexport type InitializeParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerPoolAccount: PublicKey;\n  depositAuthority?: PublicKey;\n  fee: Fee;\n  withdrawalFee: Fee;\n  depositFee: Fee;\n  referralFee: number;\n  maxValidators: number;\n};\n\nexport type AddValidatorToPoolParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  reserveStake: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  /// (Optional) Seed to used to create the validator stake account.\n  seed?: number;\n};\n\nexport type RemoveValidatorFromPoolParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n};\n\n/**\n * Cleans up validator stake account entries marked as `ReadyForRemoval`\n */\nexport type CleanupRemovedValidatorEntriesParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n};\n\n/**\n * Updates balances of validator and transient stake accounts in the pool.\n */\nexport type UpdateValidatorListBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  validatorAndTransientStakePairs: PublicKey[];\n  startIndex: number;\n  noMerge: boolean;\n};\n\n/**\n * Updates total pool balance based on balances in the reserve and validator list.\n */\nexport type UpdateStakePoolBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * (Staker only) Decrease active stake on a validator, eventually moving it to the reserve\n */\nexport type DecreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface DecreaseAdditionalValidatorStakeParams extends DecreaseValidatorStakeParams {\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * (Staker only) Increase stake on a validator from the reserve account.\n */\nexport type IncreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  transientStake: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface IncreaseAdditionalValidatorStakeParams extends IncreaseValidatorStakeParams {\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * Deposits a stake account into the pool in exchange for pool tokens\n */\nexport type DepositStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  depositAuthority: PublicKey;\n  withdrawAuthority: PublicKey;\n  depositStake: PublicKey;\n  validatorStake: PublicKey;\n  reserveStake: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * Withdraws a stake account from the pool in exchange for pool tokens\n */\nexport type WithdrawStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorStake: PublicKey;\n  destinationStake: PublicKey;\n  destinationStakeAuthority: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  sourcePoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Withdraw sol instruction params\n */\nexport type WithdrawSolParams = {\n  stakePool: PublicKey;\n  sourcePoolAccount: PublicKey;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  destinationSystemAccount: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  solWithdrawAuthority?: PublicKey | undefined;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n * representing ownership into the pool. Inputs are converted to the current ratio.\n */\nexport type DepositSolParams = {\n  stakePool: PublicKey;\n  depositAuthority?: PublicKey | undefined;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  fundingAccount: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n  lamports: number;\n};\n\nexport type RedelegateParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  sourceValidatorStake: PublicKey;\n  sourceTransientStake: PublicKey;\n  ephemeralStake: PublicKey;\n  destinationTransientStake: PublicKey;\n  destinationValidatorStake: PublicKey;\n  validator: PublicKey;\n  // Amount of lamports to redelegate\n  lamports: number | BN;\n  // Seed used to create source transient stake account\n  sourceTransientStakeSeed: number | BN;\n  // Seed used to create destination ephemeral account\n  ephemeralStakeSeed: number | BN;\n  // Seed used to create destination transient stake account. If there is\n  // already transient stake, this must match the current seed, otherwise\n  // it can be anything\n  destinationTransientStakeSeed: number | BN;\n};\n\nexport type CreateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  poolMint: PublicKey;\n  payer: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\nexport type UpdateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\n/**\n * Stake Pool Instruction class\n */\nexport class StakePoolInstruction {\n  /**\n   * Creates an 'initialize' instruction.\n   */\n  static initialize(params: InitializeParams) {\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      fee: params.fee,\n      withdrawalFee: params.withdrawalFee,\n      depositFee: params.depositFee,\n      referralFee: params.referralFee,\n      maxValidators: params.maxValidators,\n    });\n\n    const keys = [\n      { pubkey: params.stakePool, isSigner: false, isWritable: true },\n      { pubkey: params.manager, isSigner: true, isWritable: false },\n      { pubkey: params.staker, isSigner: false, isWritable: false },\n      { pubkey: params.stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: params.validatorList, isSigner: false, isWritable: true },\n      { pubkey: params.reserveStake, isSigner: false, isWritable: false },\n      { pubkey: params.poolMint, isSigner: false, isWritable: true },\n      { pubkey: params.managerPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (params.depositAuthority) {\n      keys.push({ pubkey: params.depositAuthority, isSigner: true, isWritable: false });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to add a validator to the pool.\n   */\n  static addValidatorToPool(params: AddValidatorToPoolParams) {\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.AddValidatorToPool;\n    const data = encodeData(type, { seed: params.seed });\n\n    const keys = [\n      { pubkey: params.stakePool, isSigner: false, isWritable: true },\n      { pubkey: params.staker, isSigner: true, isWritable: false },\n      { pubkey: params.reserveStake, isSigner: false, isWritable: true },\n      { pubkey: params.withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: params.validatorList, isSigner: false, isWritable: true },\n      { pubkey: params.validatorStake, isSigner: false, isWritable: true },\n      { pubkey: params.validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to remove a validator from the pool.\n   */\n  static removeValidatorFromPool(params: RemoveValidatorFromPoolParams) {\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.RemoveValidatorFromPool;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: params.stakePool, isSigner: false, isWritable: true },\n      { pubkey: params.staker, isSigner: true, isWritable: false },\n      { pubkey: params.withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: params.validatorList, isSigner: false, isWritable: true },\n      { pubkey: params.validatorStake, isSigner: false, isWritable: true },\n      { pubkey: params.transientStake, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update a set of validators in the stake pool.\n   */\n  static updateValidatorListBalance(\n    params: UpdateValidatorListBalanceParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      startIndex,\n      noMerge,\n      validatorAndTransientStakePairs,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateValidatorListBalance;\n    const data = encodeData(type, { startIndex, noMerge: noMerge ? 1 : 0 });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      ...validatorAndTransientStakePairs.map((pubkey) => ({\n        pubkey,\n        isSigner: false,\n        isWritable: true,\n      })),\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update the overall stake pool balance.\n   */\n  static updateStakePoolBalance(params: UpdateStakePoolBalanceParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      managerFeeAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateStakePoolBalance;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: false },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to clean up removed validator entries.\n   */\n  static cleanupRemovedValidatorEntries(\n    params: CleanupRemovedValidatorEntriesParams,\n  ): TransactionInstruction {\n    const { stakePool, validatorList } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.CleanupRemovedValidatorEntries;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseValidatorStake(params: IncreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseAdditionalValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseAdditionalValidatorStake(\n    params: IncreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStake` instruction (rebalance from validator account to\n   * transient account)\n   */\n  static decreaseValidatorStake(params: DecreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseAdditionalValidatorStake` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseAdditionalValidatorStake(\n    params: DecreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n      ephemeralStakeSeed,\n      ephemeralStake,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit a stake account into a stake pool.\n   */\n  static depositStake(params: DepositStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      depositAuthority,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      reserveStake,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: depositAuthority, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: depositStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit SOL into a stake pool.\n   */\n  static depositSol(params: DepositSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      depositAuthority,\n      reserveStake,\n      fundingAccount,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n      lamports,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol;\n    const data = encodeData(type, { lamports });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: fundingAccount, isSigner: true, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (depositAuthority) {\n      keys.push({\n        pubkey: depositAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw active stake from a stake pool.\n   */\n  static withdrawStake(params: WithdrawStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      withdrawAuthority,\n      validatorStake,\n      destinationStake,\n      destinationStakeAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      managerFeeAccount,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawStake;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStakeAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw SOL from a stake pool.\n   */\n  static withdrawSol(params: WithdrawSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      reserveStake,\n      destinationSystemAccount,\n      managerFeeAccount,\n      solWithdrawAuthority,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawSol;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationSystemAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (solWithdrawAuthority) {\n      keys.push({\n        pubkey: solWithdrawAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to create metadata\n   * using the mpl token metadata program for the pool token\n   */\n  static createTokenMetadata(params: CreateTokenMetadataParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      tokenMetadata,\n      manager,\n      payer,\n      poolMint,\n      name,\n      symbol,\n      uri,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: poolMint, isSigner: false, isWritable: false },\n      { pubkey: payer, isSigner: true, isWritable: true },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.CreateTokenMetadata, {\n      name: new TextEncoder().encode(name.padEnd(METADATA_MAX_NAME_LENGTH, '\\0')),\n      symbol: new TextEncoder().encode(symbol.padEnd(METADATA_MAX_SYMBOL_LENGTH, '\\0')),\n      uri: new TextEncoder().encode(uri.padEnd(METADATA_MAX_URI_LENGTH, '\\0')),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to update metadata\n   * in the mpl token metadata program account for the pool token\n   */\n  static updateTokenMetadata(params: UpdateTokenMetadataParams): TransactionInstruction {\n    const { stakePool, withdrawAuthority, tokenMetadata, manager, name, symbol, uri } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateTokenMetadata, {\n      name: new TextEncoder().encode(name.padEnd(METADATA_MAX_NAME_LENGTH, '\\0')),\n      symbol: new TextEncoder().encode(symbol.padEnd(METADATA_MAX_SYMBOL_LENGTH, '\\0')),\n      uri: new TextEncoder().encode(uri.padEnd(METADATA_MAX_URI_LENGTH, '\\0')),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `Redelegate` instruction (rebalance from one validator account to another)\n   * @param params\n   */\n  static redelegate(params: RedelegateParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      stakePoolWithdrawAuthority,\n      validatorList,\n      sourceValidatorStake,\n      sourceTransientStake,\n      ephemeralStake,\n      destinationTransientStake,\n      destinationValidatorStake,\n      validator,\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: sourceValidatorStake, isSigner: false, isWritable: true },\n      { pubkey: sourceTransientStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: destinationTransientStake, isSigner: false, isWritable: true },\n      { pubkey: destinationValidatorStake, isSigner: false, isWritable: false },\n      { pubkey: validator, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.Redelegate, {\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n}\n","import {\n  AccountInfo,\n  Connection,\n  Keypair,\n  PublicKey,\n  Signer,\n  StakeAuthorizationLayout,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, Token, TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { create } from 'superstruct';\nimport BN from 'bn.js';\nimport {\n  addAssociatedTokenAccount,\n  arrayChunk,\n  calcLamportsWithdrawAmount,\n  findEphemeralStakeProgramAddress,\n  findStakeProgramAddress,\n  findTransientStakeProgramAddress,\n  findWithdrawAuthorityProgramAddress,\n  getTokenAccount,\n  getValidatorListAccount,\n  lamportsToSol,\n  newStakeAccount,\n  prepareWithdrawAccounts,\n  solToLamports,\n  getMetadataPDA,\n  ValidatorAccount,\n} from './utils';\nimport { StakePoolInstruction } from './instructions';\nimport {\n  StakeAccount,\n  StakePool,\n  StakePoolLayout,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfo,\n  ValidatorStakeInfoLayout,\n} from './layouts';\nimport { MAX_VALIDATORS_TO_UPDATE, MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from './constants';\n\nexport type { StakePool, AccountType, ValidatorList, ValidatorStakeInfo } from './layouts';\nexport { STAKE_POOL_PROGRAM_ID } from './constants';\nexport * from './instructions';\n\nexport interface ValidatorListAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<ValidatorList>;\n}\n\nexport interface StakePoolAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<StakePool>;\n}\n\nexport interface WithdrawAccount {\n  stakeAddress: PublicKey;\n  voteAddress?: PublicKey;\n  poolAmount: number;\n}\n\nexport interface Fee {\n  denominator: BN;\n  numerator: BN;\n}\n\n/**\n * Wrapper class for a stake pool.\n * Each stake pool has a stake pool account and a validator list account.\n */\nexport interface StakePoolAccounts {\n  stakePool: StakePoolAccount | undefined;\n  validatorList: ValidatorListAccount | undefined;\n}\n\ninterface InitializeProps {\n  connection: Connection;\n  // Default: Keypair.generate\n  manager?: Keypair | undefined;\n  // Default: Keypair.generate\n  stakePool?: Keypair | undefined;\n  // Default: Keypair.generate\n  validatorList?: Keypair | undefined;\n  poolMint: PublicKey;\n  reserveStake: PublicKey;\n  managerPoolAccount: PublicKey;\n  fee: Fee;\n  referralFee: number;\n  // Default: 2950\n  maxValidators?: number | undefined;\n}\n\ninterface UpdateStakePoolTokenMetadataProps {\n  connection: Connection;\n  stakePool: StakePoolAccount | PublicKey;\n  tokenMetadata?: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n}\n\ninterface CreateStakePoolTokenMetadataProps extends UpdateStakePoolTokenMetadataProps {\n  payer: PublicKey;\n}\n\ninterface RedelegateProps {\n  connection: Connection;\n  stakePoolAddress: PublicKey;\n  sourceVoteAccount: PublicKey;\n  destinationVoteAccount: PublicKey;\n  sourceTransientStakeSeed: number | BN;\n  destinationTransientStakeSeed: number | BN;\n  ephemeralStakeSeed: number | BN;\n  lamports: number | BN;\n}\n\n/**\n * Retrieves and deserializes a StakePool account using a web3js connection and the stake pool address.\n * @param connection: An active web3js connection.\n * @param stakePoolAddress: The public key (address) of the stake pool account.\n */\nexport async function getStakePoolAccount(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n): Promise<StakePoolAccount> {\n  const account = await connection.getAccountInfo(stakePoolAddress);\n\n  if (!account) {\n    throw new Error('Invalid stake pool account');\n  }\n\n  return {\n    pubkey: stakePoolAddress,\n    account: {\n      data: StakePoolLayout.decode(account.data),\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\n/**\n * Retrieves and deserializes a Stake account using a web3js connection and the stake address.\n * @param connection: An active web3js connection.\n * @param stakeAccount: The public key (address) of the stake account.\n */\nexport async function getStakeAccount(\n  connection: Connection,\n  stakeAccount: PublicKey,\n): Promise<StakeAccount> {\n  const result = (await connection.getParsedAccountInfo(stakeAccount)).value;\n  if (!result || !('parsed' in result.data)) {\n    throw new Error('Invalid stake account');\n  }\n  const program = result.data.program;\n  if (program != 'stake') {\n    throw new Error('Not a stake account');\n  }\n  return create(result.data.parsed, StakeAccount);\n}\n\n/**\n * Retrieves all StakePool and ValidatorList accounts that are running a particular StakePool program.\n * @param connection: An active web3js connection.\n * @param stakePoolProgramAddress: The public key (address) of the StakePool program.\n */\nexport async function getStakePoolAccounts(\n  connection: Connection,\n  stakePoolProgramAddress: PublicKey,\n) {\n  const response = await connection.getProgramAccounts(stakePoolProgramAddress);\n\n  return response.map((a) => {\n    let data: StakePool | ValidatorList | undefined;\n\n    if (a.account.data.readUInt8() === 1) {\n      try {\n        data = StakePoolLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode StakeAccount. Error:', error);\n      }\n    } else if (a.account.data.readUInt8() === 2) {\n      try {\n        data = ValidatorListLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode ValidatorList. Error:', error);\n      }\n    } else {\n      console.error(\n        `Could not decode. StakePoolAccount Enum is ${a.account.data.readUInt8()}, expected 1 or 2!`,\n      );\n    }\n\n    return {\n      pubkey: a.pubkey,\n      account: { ...a.account, data },\n    };\n  });\n}\n\n/**\n * Creates instructions required to deposit stake to stake pool.\n */\nexport async function depositStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  authorizedPubkey: PublicKey,\n  validatorVote: PublicKey,\n  depositStake: PublicKey,\n  poolTokenReceiverAccount?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [];\n\n  const poolMint = stakePool.account.data.poolMint;\n\n  let rentFee = 0;\n\n  // Create token account if not specified\n  if (!poolTokenReceiverAccount) {\n    const { associatedAddress, rentFee: fee } = await addAssociatedTokenAccount(\n      connection,\n      authorizedPubkey,\n      poolMint,\n      instructions,\n    );\n    poolTokenReceiverAccount = associatedAddress;\n    rentFee += fee;\n  }\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Staker,\n    }).instructions,\n  );\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Withdrawer,\n    }).instructions,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositStake({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      depositAuthority: stakePool.account.data.stakeDepositAuthority,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      referralPoolAccount: poolTokenReceiverAccount,\n      destinationPoolAccount: poolTokenReceiverAccount,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      poolMint,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n    rentFee,\n  };\n}\n\n/**\n * Creates instructions required to deposit sol to stake pool.\n */\nexport async function depositSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  from: PublicKey,\n  lamports: number,\n  destinationTokenAccount?: PublicKey,\n  referrerTokenAccount?: PublicKey,\n  depositAuthority?: PublicKey,\n) {\n  const fromBalance = await connection.getBalance(from, 'confirmed');\n  if (fromBalance < lamports) {\n    throw new Error(\n      `Not enough SOL to deposit into pool. Maximum deposit amount is ${lamportsToSol(\n        fromBalance,\n      )} SOL.`,\n    );\n  }\n\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n\n  // Ephemeral SOL account just to do the transfer\n  const userSolTransfer = new Keypair();\n  const signers: Signer[] = [userSolTransfer];\n  const instructions: TransactionInstruction[] = [];\n\n  let rentFee = 0;\n\n  // Create the ephemeral SOL account\n  instructions.push(\n    SystemProgram.transfer({\n      fromPubkey: from,\n      toPubkey: userSolTransfer.publicKey,\n      lamports,\n    }),\n  );\n\n  // Create token account if not specified\n  if (!destinationTokenAccount) {\n    const { associatedAddress, rentFee: fee } = await addAssociatedTokenAccount(\n      connection,\n      from,\n      stakePool.poolMint,\n      instructions,\n    );\n    destinationTokenAccount = associatedAddress;\n    rentFee += fee;\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositSol({\n      stakePool: stakePoolAddress,\n      reserveStake: stakePool.reserveStake,\n      fundingAccount: userSolTransfer.publicKey,\n      destinationPoolAccount: destinationTokenAccount,\n      managerFeeAccount: stakePool.managerFeeAccount,\n      referralPoolAccount: referrerTokenAccount ?? destinationTokenAccount,\n      poolMint: stakePool.poolMint,\n      lamports,\n      withdrawAuthority,\n      depositAuthority,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n    rentFee,\n  };\n}\n\n/**\n * Creates instructions required to withdraw stake from a stake pool.\n */\nexport async function withdrawStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  amount: number,\n  useReserve = false,\n  voteAccountAddress?: PublicKey,\n  stakeReceiver?: PublicKey,\n  poolTokenAccount?: PublicKey,\n  validatorComparator?: (_a: ValidatorAccount, _b: ValidatorAccount) => number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  if (!poolTokenAccount) {\n    poolTokenAccount = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      stakePool.account.data.poolMint,\n      tokenOwner,\n    );\n  }\n\n  const tokenAccount = await getTokenAccount(\n    connection,\n    poolTokenAccount,\n    stakePool.account.data.poolMint,\n  );\n\n  if (!tokenAccount) {\n    throw new Error('Invalid token account');\n  }\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount.toNumber() < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n        Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount.toNumber())} pool tokens.`,\n    );\n  }\n\n  const stakeAccountRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  let stakeReceiverAccount = null;\n  if (stakeReceiver) {\n    stakeReceiverAccount = await getStakeAccount(connection, stakeReceiver);\n  }\n\n  const withdrawAccounts: WithdrawAccount[] = [];\n\n  if (useReserve) {\n    withdrawAccounts.push({\n      stakeAddress: stakePool.account.data.reserveStake,\n      voteAddress: undefined,\n      poolAmount,\n    });\n  } else if (stakeReceiverAccount && stakeReceiverAccount?.type == 'delegated') {\n    const voteAccount = stakeReceiverAccount.info?.stake?.delegation.voter;\n    if (!voteAccount) throw new Error(`Invalid stake reciever ${stakeReceiver} delegation`);\n    const validatorListAccount = await connection.getAccountInfo(\n      stakePool.account.data.validatorList,\n    );\n    const validatorList = ValidatorListLayout.decode(\n      Uint8Array.from(validatorListAccount?.data ?? []),\n    ) as ValidatorList;\n    const isValidVoter = validatorList.validators.find((val) =>\n      val.voteAccountAddress.equals(voteAccount),\n    );\n    if (voteAccountAddress && voteAccountAddress !== voteAccount) {\n      throw new Error(`Provided withdrawal vote account ${voteAccountAddress} does not match delegation on stake receiver account ${voteAccount},\n      remove this flag or provide a different stake account delegated to ${voteAccountAddress}`);\n    }\n    if (isValidVoter) {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        voteAccount,\n        stakePoolAddress,\n      );\n\n      const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n      if (!stakeAccount) {\n        throw new Error(`Preferred withdraw valdator's stake account is invalid`);\n      }\n\n      const availableForWithdrawal = calcLamportsWithdrawAmount(\n        stakePool.account.data,\n        stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n      );\n\n      if (availableForWithdrawal < poolAmount) {\n        throw new Error(\n          `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n            ${poolAmount} asked, ${availableForWithdrawal} available.`,\n        );\n      }\n      withdrawAccounts.push({\n        stakeAddress: stakeAccountAddress,\n        voteAddress: voteAccount,\n        poolAmount,\n      });\n    } else {\n      throw new Error(\n        `Provided stake account is delegated to a vote account ${voteAccount} which does not exist in the stake pool`,\n      );\n    }\n  } else if (voteAccountAddress) {\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      voteAccountAddress,\n      stakePoolAddress,\n    );\n    const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n    if (!stakeAccount) {\n      throw new Error('Invalid Stake Account');\n    }\n\n    const availableForWithdrawal = calcLamportsWithdrawAmount(\n      stakePool.account.data,\n      stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n    );\n\n    if (availableForWithdrawal < poolAmount) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(\n        `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n          ${poolAmount} asked, ${availableForWithdrawal} available.`,\n      );\n    }\n    withdrawAccounts.push({\n      stakeAddress: stakeAccountAddress,\n      voteAddress: voteAccountAddress,\n      poolAmount,\n    });\n  } else {\n    // Get the list of accounts to withdraw from\n    withdrawAccounts.push(\n      ...(await prepareWithdrawAccounts(\n        connection,\n        stakePool.account.data,\n        stakePoolAddress,\n        poolAmount,\n        validatorComparator,\n        poolTokenAccount.equals(stakePool.account.data.managerFeeAccount),\n      )),\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    Token.createApproveInstruction(\n      TOKEN_PROGRAM_ID,\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      [],\n      poolAmount,\n    ),\n  );\n\n  let totalRentFreeBalances = 0;\n\n  // Max 5 accounts to prevent an error: \"Transaction too large\"\n  const maxWithdrawAccounts = 5;\n  let i = 0;\n\n  // Go through prepared accounts and withdraw/claim them\n  for (const withdrawAccount of withdrawAccounts) {\n    if (i > maxWithdrawAccounts) {\n      break;\n    }\n    // Convert pool tokens amount to lamports\n    const solWithdrawAmount = Math.ceil(\n      calcLamportsWithdrawAmount(stakePool.account.data, withdrawAccount.poolAmount),\n    );\n\n    let infoMsg = `Withdrawing ◎${solWithdrawAmount},\n      from stake account ${withdrawAccount.stakeAddress?.toBase58()}`;\n\n    if (withdrawAccount.voteAddress) {\n      infoMsg = `${infoMsg}, delegated to ${withdrawAccount.voteAddress?.toBase58()}`;\n    }\n\n    console.info(infoMsg);\n    let stakeToReceive;\n\n    if (!stakeReceiver || (stakeReceiverAccount && stakeReceiverAccount.type === 'delegated')) {\n      const stakeKeypair = newStakeAccount(tokenOwner, instructions, stakeAccountRentExemption);\n      signers.push(stakeKeypair);\n      totalRentFreeBalances += stakeAccountRentExemption;\n      stakeToReceive = stakeKeypair.publicKey;\n    } else {\n      stakeToReceive = stakeReceiver;\n    }\n\n    instructions.push(\n      StakePoolInstruction.withdrawStake({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        validatorStake: withdrawAccount.stakeAddress,\n        destinationStake: stakeToReceive,\n        destinationStakeAuthority: tokenOwner,\n        sourceTransferAuthority: userTransferAuthority.publicKey,\n        sourcePoolAccount: poolTokenAccount,\n        managerFeeAccount: stakePool.account.data.managerFeeAccount,\n        poolMint: stakePool.account.data.poolMint,\n        poolTokens: withdrawAccount.poolAmount,\n        withdrawAuthority,\n      }),\n    );\n    i++;\n  }\n  if (stakeReceiver && stakeReceiverAccount && stakeReceiverAccount.type === 'delegated') {\n    signers.forEach((newStakeKeypair) => {\n      instructions.concat(\n        StakeProgram.merge({\n          stakePubkey: stakeReceiver,\n          sourceStakePubKey: newStakeKeypair.publicKey,\n          authorizedPubkey: tokenOwner,\n        }).instructions,\n      );\n    });\n  }\n\n  return {\n    instructions,\n    signers,\n    stakeReceiver,\n    totalRentFreeBalances,\n  };\n}\n\n/**\n * Creates instructions required to withdraw SOL directly from a stake pool.\n */\nexport async function withdrawSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  solReceiver: PublicKey,\n  amount: number,\n  solWithdrawAuthority?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  const poolTokenAccount = await Token.getAssociatedTokenAddress(\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    TOKEN_PROGRAM_ID,\n    stakePool.account.data.poolMint,\n    tokenOwner,\n  );\n\n  const tokenAccount = await getTokenAccount(\n    connection,\n    poolTokenAccount,\n    stakePool.account.data.poolMint,\n  );\n  if (!tokenAccount) {\n    throw new Error('Invalid token account');\n  }\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount.toNumber() < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n          Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount.toNumber())} pool tokens.`,\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    Token.createApproveInstruction(\n      TOKEN_PROGRAM_ID,\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      [],\n      poolAmount,\n    ),\n  );\n\n  const poolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  if (solWithdrawAuthority) {\n    const expectedSolWithdrawAuthority = stakePool.account.data.solWithdrawAuthority;\n    if (!expectedSolWithdrawAuthority) {\n      throw new Error('SOL withdraw authority specified in arguments but stake pool has none');\n    }\n    if (solWithdrawAuthority.toBase58() != expectedSolWithdrawAuthority.toBase58()) {\n      throw new Error(\n        `Invalid deposit withdraw specified, expected ${expectedSolWithdrawAuthority.toBase58()}, received ${solWithdrawAuthority.toBase58()}`,\n      );\n    }\n  }\n\n  const withdrawTransaction = StakePoolInstruction.withdrawSol({\n    stakePool: stakePoolAddress,\n    withdrawAuthority: poolWithdrawAuthority,\n    reserveStake: stakePool.account.data.reserveStake,\n    sourcePoolAccount: poolTokenAccount,\n    sourceTransferAuthority: userTransferAuthority.publicKey,\n    destinationSystemAccount: solReceiver,\n    managerFeeAccount: stakePool.account.data.managerFeeAccount,\n    poolMint: stakePool.account.data.poolMint,\n    poolTokens: poolAmount,\n    solWithdrawAuthority,\n  });\n\n  instructions.push(withdrawTransaction);\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to increase validator stake.\n */\nexport async function increaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const transientStakeSeed = validatorInfo.transientSeedSuffixStart.addn(1); // bump up by one to avoid reuse\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    StakePoolInstruction.increaseAdditionalValidatorStake({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      transientStakeSeed: transientStakeSeed.toNumber(),\n      withdrawAuthority,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    });\n  } else {\n    instructions.push(\n      StakePoolInstruction.increaseValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to decrease validator stake.\n */\nexport async function decreaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const transientStakeSeed = validatorInfo.transientSeedSuffixStart.addn(1); // bump up by one to avoid reuse\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = await findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.decreaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.decreaseValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to completely update a stake pool after epoch change.\n */\nexport async function updateStakePool(\n  connection: Connection,\n  stakePool: StakePoolAccount,\n  noMerge = false,\n) {\n  const stakePoolAddress = stakePool.pubkey;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const updateListInstructions: TransactionInstruction[] = [];\n  const instructions: TransactionInstruction[] = [];\n\n  let startIndex = 0;\n  const validatorChunks: Array<ValidatorStakeInfo[]> = arrayChunk(\n    validatorList.account.data.validators,\n    MAX_VALIDATORS_TO_UPDATE,\n  );\n\n  for (const validatorChunk of validatorChunks) {\n    const validatorAndTransientStakePairs: PublicKey[] = [];\n\n    for (const validator of validatorChunk) {\n      const validatorStake = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      validatorAndTransientStakePairs.push(validatorStake);\n\n      const transientStake = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      validatorAndTransientStakePairs.push(transientStake);\n    }\n\n    updateListInstructions.push(\n      StakePoolInstruction.updateValidatorListBalance({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        validatorAndTransientStakePairs,\n        withdrawAuthority,\n        startIndex,\n        noMerge,\n      }),\n    );\n    startIndex += MAX_VALIDATORS_TO_UPDATE;\n  }\n\n  instructions.push(\n    StakePoolInstruction.updateStakePoolBalance({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      poolMint: stakePool.account.data.poolMint,\n      withdrawAuthority,\n    }),\n  );\n\n  instructions.push(\n    StakePoolInstruction.cleanupRemovedValidatorEntries({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n    }),\n  );\n\n  return {\n    updateListInstructions,\n    finalInstructions: instructions,\n  };\n}\n\n/**\n * Retrieves detailed information about the StakePool.\n */\nexport async function stakePoolInfo(connection: Connection, stakePoolAddress: PublicKey) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const reserveAccountStakeAddress = stakePool.account.data.reserveStake;\n  const totalLamports = stakePool.account.data.totalLamports;\n  const lastUpdateEpoch = stakePool.account.data.lastUpdateEpoch;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const maxNumberOfValidators = validatorList.account.data.maxValidators;\n  const currentNumberOfValidators = validatorList.account.data.validators.length;\n\n  const epochInfo = await connection.getEpochInfo();\n  const reserveStake = await connection.getAccountInfo(reserveAccountStakeAddress);\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const minimumReserveStakeBalance =\n    (await connection.getMinimumBalanceForRentExemption(StakeProgram.space)) + 1;\n\n  const stakeAccounts = await Promise.all(\n    validatorList.account.data.validators.map(async (validator) => {\n      const stakeAccountAddress = await findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      const updateRequired = !validator.lastUpdateEpoch.eqn(epochInfo.epoch);\n      return {\n        voteAccountAddress: validator.voteAccountAddress.toBase58(),\n        stakeAccountAddress: stakeAccountAddress.toBase58(),\n        validatorActiveStakeLamports: validator.activeStakeLamports.toString(),\n        validatorLastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        validatorLamports: validator.activeStakeLamports\n          .add(validator.transientStakeLamports)\n          .toString(),\n        validatorTransientStakeAccountAddress: transientStakeAccountAddress.toBase58(),\n        validatorTransientStakeLamports: validator.transientStakeLamports.toString(),\n        updateRequired,\n      };\n    }),\n  );\n\n  const totalPoolTokens = lamportsToSol(stakePool.account.data.poolTokenSupply);\n  const updateRequired = !lastUpdateEpoch.eqn(epochInfo.epoch);\n\n  return {\n    address: stakePoolAddress.toBase58(),\n    poolWithdrawAuthority: withdrawAuthority.toBase58(),\n    manager: stakePool.account.data.manager.toBase58(),\n    staker: stakePool.account.data.staker.toBase58(),\n    stakeDepositAuthority: stakePool.account.data.stakeDepositAuthority.toBase58(),\n    stakeWithdrawBumpSeed: stakePool.account.data.stakeWithdrawBumpSeed,\n    maxValidators: maxNumberOfValidators,\n    validatorList: validatorList.account.data.validators.map((validator) => {\n      return {\n        activeStakeLamports: validator.activeStakeLamports.toString(),\n        transientStakeLamports: validator.transientStakeLamports.toString(),\n        lastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        transientSeedSuffixStart: validator.transientSeedSuffixStart.toString(),\n        transientSeedSuffixEnd: validator.transientSeedSuffixEnd.toString(),\n        status: validator.status.toString(),\n        voteAccountAddress: validator.voteAccountAddress.toString(),\n      };\n    }), // CliStakePoolValidator\n    validatorListStorageAccount: stakePool.account.data.validatorList.toBase58(),\n    reserveStake: stakePool.account.data.reserveStake.toBase58(),\n    poolMint: stakePool.account.data.poolMint.toBase58(),\n    managerFeeAccount: stakePool.account.data.managerFeeAccount.toBase58(),\n    tokenProgramId: stakePool.account.data.tokenProgramId.toBase58(),\n    totalLamports: stakePool.account.data.totalLamports.toString(),\n    poolTokenSupply: stakePool.account.data.poolTokenSupply.toString(),\n    lastUpdateEpoch: stakePool.account.data.lastUpdateEpoch.toString(),\n    lockup: stakePool.account.data.lockup, // pub lockup: CliStakePoolLockup\n    epochFee: stakePool.account.data.epochFee,\n    nextEpochFee: stakePool.account.data.nextEpochFee,\n    preferredDepositValidatorVoteAddress:\n      stakePool.account.data.preferredDepositValidatorVoteAddress,\n    preferredWithdrawValidatorVoteAddress:\n      stakePool.account.data.preferredWithdrawValidatorVoteAddress,\n    stakeDepositFee: stakePool.account.data.stakeDepositFee,\n    stakeWithdrawalFee: stakePool.account.data.stakeWithdrawalFee,\n    // CliStakePool the same\n    nextStakeWithdrawalFee: stakePool.account.data.nextStakeWithdrawalFee,\n    stakeReferralFee: stakePool.account.data.stakeReferralFee,\n    solDepositAuthority: stakePool.account.data.solDepositAuthority?.toBase58(),\n    solDepositFee: stakePool.account.data.solDepositFee,\n    solReferralFee: stakePool.account.data.solReferralFee,\n    solWithdrawAuthority: stakePool.account.data.solWithdrawAuthority?.toBase58(),\n    solWithdrawalFee: stakePool.account.data.solWithdrawalFee,\n    nextSolWithdrawalFee: stakePool.account.data.nextSolWithdrawalFee,\n    lastEpochPoolTokenSupply: stakePool.account.data.lastEpochPoolTokenSupply.toString(),\n    lastEpochTotalLamports: stakePool.account.data.lastEpochTotalLamports.toString(),\n    details: {\n      reserveStakeLamports: reserveStake?.lamports,\n      reserveAccountStakeAddress: reserveAccountStakeAddress.toBase58(),\n      minimumReserveStakeBalance,\n      stakeAccounts,\n      totalLamports,\n      totalPoolTokens,\n      currentNumberOfValidators,\n      maxNumberOfValidators,\n      updateRequired,\n    }, // CliStakePoolDetails\n  };\n}\n\n/**\n * Creates instructions required to redelegate stake.\n */\nexport async function redelegate(props: RedelegateProps) {\n  const {\n    connection,\n    stakePoolAddress,\n    sourceVoteAccount,\n    sourceTransientStakeSeed,\n    destinationVoteAccount,\n    destinationTransientStakeSeed,\n    ephemeralStakeSeed,\n    lamports,\n  } = props;\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const stakePoolWithdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const sourceValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n  );\n\n  const sourceTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n    new BN(sourceTransientStakeSeed),\n  );\n\n  const destinationValidatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n  );\n\n  const destinationTransientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n    new BN(destinationTransientStakeSeed),\n  );\n\n  const ephemeralStake = await findEphemeralStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n    new BN(ephemeralStakeSeed),\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.redelegate({\n      stakePool: stakePool.pubkey,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      stakePoolWithdrawAuthority,\n      ephemeralStake,\n      ephemeralStakeSeed,\n      sourceValidatorStake,\n      sourceTransientStake,\n      sourceTransientStakeSeed,\n      destinationValidatorStake,\n      destinationTransientStake,\n      destinationTransientStakeSeed,\n      validator: destinationVoteAccount,\n      lamports,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Initializes a new StakePool.\n */\nexport async function initialize(props: InitializeProps) {\n  const { connection, poolMint, reserveStake, managerPoolAccount, fee, referralFee } = props;\n\n  const poolBalance = await connection.getMinimumBalanceForRentExemption(StakePoolLayout.span);\n\n  const stakePool = props.stakePool ?? Keypair.generate();\n  const validatorList = props.validatorList ?? Keypair.generate();\n  const manager = props.manager ?? Keypair.generate();\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [manager, stakePool, validatorList];\n\n  instructions.push(\n    SystemProgram.createAccount({\n      fromPubkey: manager.publicKey,\n      newAccountPubkey: stakePool.publicKey,\n      lamports: poolBalance,\n      space: StakePoolLayout.span,\n      programId: STAKE_POOL_PROGRAM_ID,\n    }),\n  );\n\n  // current supported max by the program, go big!\n  const maxValidators = props.maxValidators ?? 2950;\n\n  // TODO: ValidatorListLayout.span returns -1\n  const validatorListSpace = 1 + 4 + 4 + ValidatorStakeInfoLayout.span * maxValidators;\n  const validatorListBalance = await connection.getMinimumBalanceForRentExemption(\n    validatorListSpace,\n  );\n\n  instructions.push(\n    SystemProgram.createAccount({\n      fromPubkey: manager.publicKey,\n      newAccountPubkey: validatorList.publicKey,\n      lamports: validatorListBalance,\n      space: validatorListSpace,\n      programId: STAKE_POOL_PROGRAM_ID,\n    }),\n  );\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePool.publicKey,\n  );\n\n  instructions.push(\n    StakePoolInstruction.initialize({\n      stakePool: stakePool.publicKey,\n      manager: manager.publicKey,\n      staker: manager.publicKey,\n      stakePoolWithdrawAuthority: withdrawAuthority,\n      validatorList: validatorList.publicKey,\n      poolMint,\n      managerPoolAccount,\n      reserveStake,\n      fee,\n      withdrawalFee: fee,\n      depositFee: fee,\n      referralFee,\n      maxValidators,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to create pool token metadata.\n */\nexport async function createPoolTokenMetadata(props: CreateStakePoolTokenMetadataProps) {\n  const { connection, name, symbol, uri, payer } = props;\n\n  const stakePool =\n    props.stakePool instanceof PublicKey\n      ? await getStakePoolAccount(connection, props.stakePool)\n      : props.stakePool;\n\n  const tokenMetadata =\n    props.tokenMetadata ?? (await getMetadataPDA(stakePool.account.data.poolMint));\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePool.pubkey,\n  );\n\n  const manager = stakePool.account.data.manager;\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.createTokenMetadata({\n      stakePool: stakePool.pubkey,\n      poolMint: stakePool.account.data.poolMint,\n      payer,\n      manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to update pool token metadata.\n */\nexport async function updatePoolTokenMetadata(props: UpdateStakePoolTokenMetadataProps) {\n  const { connection, name, symbol, uri } = props;\n\n  const stakePool =\n    props.stakePool instanceof PublicKey\n      ? await getStakePoolAccount(connection, props.stakePool)\n      : props.stakePool;\n\n  const tokenMetadata =\n    props.tokenMetadata ?? (await getMetadataPDA(stakePool.account.data.poolMint));\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePool.pubkey,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.updateTokenMetadata({\n      stakePool: stakePool.pubkey,\n      manager: stakePool.account.data.manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to add a validator to the pool.\n */\nexport async function addValidatorToPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  seed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  console.log(stakePoolAddress.toBase58());\n  console.log(stakePool.account.data.validatorList.toBase58());\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n  console.log(validatorList.account.data);\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (validatorInfo) {\n    throw new Error(\n      `Stake pool already contains validator ${validatorInfo.voteAccountAddress.toBase58()}, ignoring`,\n    );\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.addValidatorToPool({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      validatorStake,\n      reserveStake: stakePool.account.data.reserveStake,\n      withdrawAuthority,\n      validatorVote,\n      seed,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to add a validator to the pool.\n */\nexport async function removeValidatorFromPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = await findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const transientStake = await findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    validatorInfo.transientSeedSuffixStart,\n  );\n\n  const validatorStake = await findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.removeValidatorFromPool({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      withdrawAuthority,\n      validatorList: stakePool.account.data.validatorList,\n      validatorStake,\n      transientStake,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n"],"names":["nacl","gf","init","i","r","Float64Array","length","randombytes","Error","_0","Uint8Array","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","x","h","l","vn","xi","y","yi","n","d","crypto_verify_16","crypto_verify_32","core_salsa20","o","p","k","c","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","u","core_hsalsa20","crypto_core_salsa20","out","inp","crypto_core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","m","mpos","b","z","crypto_stream_salsa20","crypto_stream","s","sn","crypto_stream_xor","poly1305","key","this","buffer","Uint16Array","pad","leftover","fin","t0","t1","t2","t3","t4","t5","t6","t7","prototype","blocks","bytes","hibit","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","finish","mac","macpos","g","mask","f","update","want","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","a","car25519","v","Math","floor","sel25519","q","t","pack25519","j","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","e","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","crypto_box_afternm","crypto_box_open_afternm","crypto_box","crypto_box_open","K","crypto_hashblocks_hl","hh","hl","wh","Int32Array","wl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","add","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","reduce","crypto_sign","sm","smlen","unpackneg","chk","num","den","den2","den4","den6","crypto_sign_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","lowlevel","checkLengths","checkBoxLengths","checkArrayTypes","arguments","TypeError","cleanup","arr","randomBytes","secretbox","msg","nonce","open","box","keyLength","nonceLength","overheadLength","scalarMult","base","scalarLength","groupElementLength","publicKey","secretKey","before","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","sign","signedMsg","tmp","mlen","detached","sig","verify","fromSeed","seed","seedLength","signatureLength","hash","hashLength","setPRNG","fn","crypto","self","msCrypto","getRandomValues","QUOTA","min","require","require$$0","module","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Array","code","len","charCodeAt","getLens","b64","validLen","indexOf","placeHoldersLen","lens","_byteLength","curByte","tripletToBase64","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","pow","value","rt","abs","isNaN","log","LN2","base64","ieee754","require$$1","customInspectSymbol","Symbol","Buffer","SlowBuffer","K_MAX_LENGTH","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","defineProperty","enumerable","get","isBuffer","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","write","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","String","toLowerCase","concat","list","set","call","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","INSPECT_MAX_BYTES","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","hexSliceLookupTable","newBuf","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","BufferBigIntNotDefined","assert","inherits","ctor","superCtor","super_","TempCtor","BN","number","endian","isBN","negative","words","red","_init","wordSize","window","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","w","off","_strip","parseHex4Bits","index","parseHexByte","lowerBound","parseLength","parseBase","limbLen","limbPow","total","mod","word","imuln","_iaddn","dest","move","_move","clone","_expand","strip","_normSign","for","zeros","groupSizes","groupBases","padding","groupSize","groupBase","isZero","modrn","idivn","toNumber","toBuffer","toArrayLike","allocate","ArrayType","reqLength","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","ncarry","rword","maxJ","comb10MulTo","mid","a0","a1","a2","a3","a4","a5","a6","a7","a8","al8","ah8","a9","al9","ah9","bl8","bh8","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","acc","modn","egcd","B","C","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","ireduce","rlen","imulK","K256","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","copyProps","SafeBuffer","create","_Buffer","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","encode","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","inRange","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","options","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","UTF8Decoder","input_stream","result","handler","TextEncoder","_encoder","_options","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","count","temp","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserialize_1","serialize_1","bn_js_1","bs58_1","require$$2","global","textDecoder","baseEncode","baseDecode","INITIAL_LENGTH","BorshError","fieldPath","originalMessage","addToFieldPath","fieldName","splice","BinaryWriter","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","item","kind","serializeStruct","structSchema","fields","map","field","idx","values","serialize","deserializeField","reader","option","deserializeStruct","classType","fieldValue","deserialize","deserializeUnchecked","deserializeUnchecked_1","__extends","extendStatics","__proto__","__","nu64","u32","u16","u8","blob","seq","struct","ns64","buffer_1","checkUint8Array","uint8ArrayToBuffer","Layout","span","property","makeDestinationObject","getSpan","replicate","rv","assign","fromArray","nameWithProperty","bindConstructorLayout","Class","layout","layout_","boundConstructor_","ExternalLayout","_super","isCount","GreedyCount","elementSpan","_this","rem","OffsetLayout","UInt","UIntBE","Int","IntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","elementLayout","elo","Structure","decodePrefixes","_i","fields_1","fd","fsp","_a","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","Blob","srcBuffer","CString","srcb","UTF8","maxSpan","Constant","StructError","failure","failures","cached","rest","path","_cached","isIterable","isObject","iterator","print","JSON","stringify","shiftIterator","done","toFailure","context","branch","refinement","toFailures","run","coerce","coercer","valid","validator","entries","ts","Map","Set","refiner","Struct","props","is","validate","tuples","tuple","define","any","Element","boolean","enums","description","instance","literal","constant","never","nullable","optional","record","Key","Value","Elements","Never","keys","Structs","unknown","condition","commonjsGlobal","globalThis","getDefaultExportFromCjs","hash$1","utils$9","minimalisticAssert","assert$6","equal","assertEqual","inherits_browser","assert$5","isSurrogatePair","enc","toHex","zero2","htonl","toHex32","zero8","join32","split32","rotr32$1","rotr32","rotl32$2","rotl32","sum32$3","sum32","sum32_3$1","sum32_3","sum32_4$2","sum32_4","sum32_5$2","sum32_5","sum64$1","ah","al","bh","bl","sum64","sum64_hi$1","sum64_hi","sum64_lo$1","sum64_lo","sum64_4_hi$1","ch","cl","dh","dl","sum64_4_hi","sum64_4_lo$1","sum64_4_lo","sum64_5_hi$1","eh","el","sum64_5_hi","sum64_5_lo$1","sum64_5_lo","rotr64_hi$1","rotr64_hi","rotr64_lo$1","rotr64_lo","shr64_hi$1","shr64_hi","shr64_lo$1","shr64_lo","common$5","utils$8","assert$4","BlockHash$4","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","BlockHash","_update","digest","_pad","_digest","sha","common$4","utils$7","ft_1$1","ch32$1","p32","maj32$1","ft_1","ch32","maj32","s0_256$1","s0_256","s1_256$1","s1_256","g0_256$1","g0_256","g1_256$1","g1_256","utils$6","common$3","shaCommon$1","rotl32$1","sum32$2","sum32_5$1","BlockHash$3","sha1_K","SHA1","W","_1","utils$5","common$2","shaCommon","assert$3","sum32$1","sum32_4$1","BlockHash$2","sha256_K","SHA256$1","_256","T1","T2","utils$4","SHA256","SHA224","_224","utils$3","common$1","assert$2","BlockHash$1","sha512_K","SHA512$1","_512","_prepareBlock","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","fh","fl","gh","gl","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","T1_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","T2_lo","xh","xl","yh","yl","zh","zl","utils$2","SHA512","SHA384","_384","sha1","sha224","sha256","sha384","sha512","ripemd","utils$1","common","RIPEMD160","ripemd160","Ah","Bh","Ch","Dh","Eh","T","rh","Kh","sh","utils","assert$1","Hmac","Hash","inner","outer","hmac","version$2","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","_logLevel","_globalLogger","_checkNormalize","missing","forEach","form","normalize","_normalizeError","LogLevel","ErrorCode","HEX","Logger","version","_log","logLevel","level","throwArgumentError","levels","DEBUG","INFO","warn","WARNING","makeError","params","UNKNOWN_ERROR","messageDetails","hex","reason","throwError","INVALID_ARGUMENT","argument","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","MISSING_NEW","checkAbstract","static","censorship","permanent","globalLogger","version$1","logger","isHexable","addSlice","isBytes","arrayify","allowMissingPrefix","substring","toHexString","isHexString","hexPad","match","properties","SOLANA_SCHEMA","MAX_SEED_LENGTH","isPublicKeyData","_bn","PublicKey","decoded","toBase58","toBytes","zeroPad","fromPublicKey","programId","seeds","publicKeyBytes","is_on_curve","address","seedsWithNonce","createProgramAddress","err","pubkey","naclLowLevel","BufferLayout.blob","rustString","rsl","BufferLayout.struct","BufferLayout.u32","BufferLayout.offset","_decode","_encode","chars","authorized","lockup","BufferLayout.ns64","voteInit","BufferLayout.u8","getAlloc","decodeLength","encodeLength","rem_len","PUBKEY_LENGTH","Message","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","programIdIndex","isAccountSigner","numRequiredSignatures","isAccountWritable","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","isProgramId","has","programIds","nonProgramIds","filter","_","numKeys","keyCount","instruction","accounts","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","PACKET_DATA_SIZE","instructionBufferLength","instructionLayout","BufferLayout.seq","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","DEFAULT_SIGNATURE","SIGNATURE_LENGTH","TransactionInstruction","opts","Transaction","signature","signatures","feePayer","nonceInfo","items","compileMessage","nonceInstruction","accountMetas","accountMeta","isSigner","isWritable","sort","pubkeySorting","localeCompare","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","findIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","meta","keyIndex","_compile","every","pair","serializeMessage","setSigners","signers","seen","uniqueSigners","signer","_partialSign","_verifySignatures","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","async","sendAndConfirmTransaction","connection","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","encodeData","allocLength","layoutFields","FeeCalculatorLayout","BufferLayout.nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","SYSTEM_INSTRUCTION_LAYOUTS","freeze","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","authorizedPubkey","nonceInitialize","instructionData","newAuthorizedPubkey","browserPonyfill","__self__","F","fetch","DOMException","support","searchParams","iterable","formData","arrayBuffer","isDataView","DataView","isPrototypeOf","viewClasses","isArrayBufferView","normalizeName","test","normalizeValue","iteratorFor","Headers","headers","append","getOwnPropertyNames","oldValue","callback","thisArg","consumed","body","bodyUsed","Promise","reject","fileReaderReady","resolve","onload","onerror","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","view","bufferClone","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","then","text","json","parse","methods","normalizeMethod","method","upcased","Request","url","credentials","signal","referrer","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","Response","bodyInit","ok","statusText","response","redirectStatuses","redirect","location","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","slot","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","epoch","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","logs","executable","owner","rentEpoch","unitsConsumed","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","program","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","state","active","inactive","memo","blockTime","subscription","ProgramAccountInfoResult","SlotInfoResult","parent","root","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","blockhash","previousBlockhash","parentSlot","transactions","rewards","rewardType","feeCalculator","lamportsPerSignature","lastValidBlockHeight","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","LogsResult","Keypair","keypair","_keypair","skipValidation","encoder","BufferLayout.u16","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeAuthorizationLayout","Staker","Withdrawer","StakeProgram","stakePubkey","maybeLockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","sourceStakePubKey","website","details","keybaseUsername","InitializeAccount","LAMPORTS_PER_SOL","_defineProperty","base64Js","ieee754$1","kMaxLength","global$1","inherits$1","inspect$1","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","yellow","styles","special","null","date","regexp","styleType","style","arrayToHash","recurseTimes","isFunction","isString","primitive","formatPrimitive","visibleKeys","isError","formatError","isRegExp","RegExp","isDate","Date","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","isNumber","isNull","cur","ar","re","objectToString","isPrimitive","origin","prop","hasOwn","objectKeys","pSlice","_functionsHaveNames","functionsHaveNames","pToString","arrbuf","fail","regex","getName","func","AssertionError","expected","operator","generatedMessage","stackStartFunction","captureStackTrace","fn_name","next_line","truncate","something","rawname","notEqual","deepEqual","_deepEqual","deepStrictEqual","strict","memos","getTime","multiline","lastIndex","ignoreCase","Float32Array","actualIndex","objEquiv","isArguments","object","actualVisitedObjects","getPrototypeOf","aIsArgs","bIsArgs","ka","kb","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","expectedException","_tryBlock","block","_throws","shouldThrow","userProvidedMessage","isUnwantedException","isUnexpectedException","throws","doesNotThrow","ifError","uint64","title","sendAndConfirmTransaction$1","TOKEN_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","FAILED_TO_FIND_ACCOUNT","INVALID_ACCOUNT_OWNER","pubkeyToBuffer","u64","reverse","isAccount","accountOrPublicKey","AuthorityTypeCodes","MintTokens","FreezeAccount","AccountOwner","CloseAccount","NATIVE_MINT","MintLayout","AccountLayout","MultisigLayout","Token","payer","associatedProgramId","getMinimumBalanceForRentExemption","mintAuthority","freezeAuthority","mintAccount","generate","balanceNeeded","getMinBalanceRentForExemptMint","createInitMintInstruction","getMinBalanceRentForExemptAccount","newAccount","mintPublicKey","createInitAccountInstruction","associatedAddress","getAssociatedTokenAddress","createAssociatedTokenAccountInternal","createAssociatedTokenAccountInstruction","getAccountInfo","transfer","multisigAccount","getMinBalanceRentForExemptMultisig","dataLayout","mintInfo","mintAuthorityOption","supply","fromBuffer","isInitialized","freezeAuthorityOption","accountInfo","delegateOption","delegate","delegatedAmount","isFrozen","isNativeOption","rentExemptReserve","isNative","closeAuthorityOption","closeAuthority","multisig","multisigInfo","signer1","signer2","signer3","signer4","signer5","signer6","signer7","signer8","signer9","signer10","signer11","destination","multiSigners","ownerPublicKey","createTransferInstruction","createApproveInstruction","createRevokeInstruction","newAuthority","authorityType","currentAuthority","currentAuthorityPublicKey","createSetAuthorityInstruction","authority","createMintToInstruction","createBurnInstruction","authorityPublicKey","createCloseAccountInstruction","createFreezeAccountInstruction","createThawAccountInstruction","createTransferCheckedInstruction","createApproveCheckedInstruction","createMintToCheckedInstruction","createBurnCheckedInstruction","nativeAccount","createSyncNativeInstruction","commandDataLayout","allowOwnerOffCurve","isOnCurve","findProgramAddress","associatedAccount","Layout_1","Layout_2","SignedNumberLayout","BufferLayout.Layout","WrappedLayout","decoder","vec","OptionLayout","solToLamports","lamportsToSol","signMultiplier","absLamports","lamportsString","padStart","splitIndex","solString","parseFloat","METADATA_PROGRAM_ID","METADATA_MAX_NAME_LENGTH","METADATA_MAX_SYMBOL_LENGTH","METADATA_MAX_URI_LENGTH","STAKE_POOL_PROGRAM_ID","MAX_VALIDATORS_TO_UPDATE","EPHEMERAL_STAKE_SEED_PREFIX","TRANSIENT_STAKE_SEED_PREFIX","MINIMUM_ACTIVE_STAKE","findWithdrawAuthorityProgramAddress","stakePoolAddress","findStakeProgramAddress","voteAccountAddress","findTransientStakeProgramAddress","findEphemeralStakeProgramAddress","AccountType","BigNumFromString","StakeAccountType","StakeMeta","StakeAccountInfo","stake","delegation","voter","activationEpoch","deactivationEpoch","warmupCooldownRate","creditsObserved","StakeAccount","StakePoolLayout","ValidatorStakeInfoStatus","ValidatorStakeInfoLayout","ValidatorListLayout","getValidatorListAccount","prepareWithdrawAccounts","stakePool","compareFn","skipFee","validatorListAcc","validatorList","validators","minBalanceForRentExemption","minBalance","Active","stakeAccountAddress","activeStakeLamports","isPreferred","preferredWithdrawValidatorVoteAddress","voteAddress","stakeAddress","transientStakeLamports","transientStakeAccountAddress","transientSeedSuffixStart","reserveStake","reserveStakeBalance","withdrawFrom","remainingAmount","stakeWithdrawalFee","inverseFee","numerator","denominator","filteredAccounts","availableForWithdrawal","calcPoolTokensForDeposit","divideBnToNumber","poolAmount","stakeLamports","poolTokenSupply","totalLamports","calcLamportsWithdrawAmount","poolTokens","quotient","newStakeAccount","stakeReceiverKeypair","addAssociatedTokenAccount","rentFee","getTokenAccount","tokenAccountAddress","expectedTokenMint","tokenAccount","getMetadataPDA","arrayChunk","MOVE_STAKE_LAYOUT","TOKEN_METADATA_LAYOUT","feeLayout","STAKE_POOL_INSTRUCTION_LAYOUTS","AddValidatorToPool","RemoveValidatorFromPool","DecreaseValidatorStake","IncreaseValidatorStake","UpdateValidatorListBalance","UpdateStakePoolBalance","CleanupRemovedValidatorEntries","DepositStake","WithdrawStake","DepositSol","WithdrawSol","CreateTokenMetadata","UpdateTokenMetadata","IncreaseAdditionalValidatorStake","DecreaseAdditionalValidatorStake","Redelegate","StakePoolInstruction","withdrawalFee","depositFee","referralFee","maxValidators","manager","stakePoolWithdrawAuthority","poolMint","managerPoolAccount","depositAuthority","withdrawAuthority","validatorStake","validatorVote","transientStake","startIndex","noMerge","validatorAndTransientStakePairs","managerFeeAccount","transientStakeSeed","ephemeralStake","ephemeralStakeSeed","depositStake","destinationPoolAccount","referralPoolAccount","fundingAccount","destinationStake","destinationStakeAuthority","sourceTransferAuthority","sourcePoolAccount","destinationSystemAccount","solWithdrawAuthority","tokenMetadata","symbol","uri","padEnd","sourceValidatorStake","sourceTransientStake","destinationTransientStake","destinationValidatorStake","sourceTransientStakeSeed","destinationTransientStakeSeed","getStakePoolAccount","getStakeAccount","stakeAccount","getParsedAccountInfo","getStakePoolAccounts","stakePoolProgramAddress","getProgramAccounts","poolTokenReceiverAccount","authorize","stakeDepositAuthority","depositSol","destinationTokenAccount","referrerTokenAccount","fromBalance","getBalance","stakePoolAccount","userSolTransfer","withdrawStake","tokenOwner","useReserve","stakeReceiver","poolTokenAccount","validatorComparator","stakeAccountRentExemption","stakeReceiverAccount","withdrawAccounts","voteAccount","validatorListAccount","isValidVoter","find","userTransferAuthority","totalRentFreeBalances","maxWithdrawAccounts","withdrawAccount","solWithdrawAmount","infoMsg","stakeToReceive","stakeKeypair","newStakeKeypair","merge","withdrawSol","solReceiver","poolWithdrawAuthority","expectedSolWithdrawAuthority","withdrawTransaction","increaseValidatorStake","validatorInfo","increaseAdditionalValidatorStake","decreaseValidatorStake","decreaseAdditionalValidatorStake","updateStakePool","updateListInstructions","validatorChunks","validatorChunk","updateValidatorListBalance","updateStakePoolBalance","cleanupRemovedValidatorEntries","finalInstructions","stakePoolInfo","reserveAccountStakeAddress","lastUpdateEpoch","maxNumberOfValidators","currentNumberOfValidators","epochInfo","getEpochInfo","minimumReserveStakeBalance","stakeAccounts","all","updateRequired","validatorActiveStakeLamports","validatorLastUpdateEpoch","validatorLamports","validatorTransientStakeAccountAddress","validatorTransientStakeLamports","totalPoolTokens","stakeWithdrawBumpSeed","transientSeedSuffixEnd","validatorListStorageAccount","tokenProgramId","epochFee","nextEpochFee","preferredDepositValidatorVoteAddress","stakeDepositFee","nextStakeWithdrawalFee","stakeReferralFee","solDepositAuthority","solDepositFee","solReferralFee","solWithdrawalFee","nextSolWithdrawalFee","lastEpochPoolTokenSupply","lastEpochTotalLamports","reserveStakeLamports","redelegate","sourceVoteAccount","destinationVoteAccount","poolBalance","validatorListSpace","validatorListBalance","createPoolTokenMetadata","createTokenMetadata","updatePoolTokenMetadata","updateTokenMetadata","addValidatorToPool","removeValidatorFromPool"],"mappings":"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"}