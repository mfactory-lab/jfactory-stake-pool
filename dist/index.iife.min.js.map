{"version":3,"file":"index.iife.min.js","sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/@noble/curves/esm/abstract/montgomery.js","../node_modules/@noble/curves/esm/abstract/hash-to-curve.js","../node_modules/@noble/curves/esm/ed25519.js","../node_modules/bn.js/lib/bn.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/borsh/lib/index.js","../node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/superstruct/lib/index.es.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/eventemitter3/index.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@noble/curves/esm/secp256k1.js","../node_modules/@solana/web3.js/lib/index.browser.esm.js","../node_modules/@solana/spl-token/lib/esm/constants.js","../node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs","../node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs","../node_modules/@solana/spl-token/lib/esm/errors.js","../node_modules/@solana/spl-token/lib/esm/instructions/types.js","../node_modules/@solana/spl-token/lib/esm/instructions/internal.js","../node_modules/@solana/spl-token/lib/esm/instructions/approve.js","../node_modules/@solana/spl-token/lib/esm/extensions/accountType.js","../node_modules/@solana/spl-token/lib/esm/state/multisig.js","../node_modules/@solana/spl-token/lib/esm/state/account.js","../node_modules/@solana/spl-token/lib/esm/state/mint.js","../node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.js","../src/utils/math.ts","../src/constants.ts","../src/utils/program-address.ts","../node_modules/buffer-layout/lib/Layout.js","../node_modules/@coral-xyz/borsh/dist/index.js","../src/layouts.ts","../src/utils/stake.ts","../src/utils/instruction.ts","../src/utils/index.ts","../src/instructions.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// Caching slows it down 2-3x\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    if (hex.length % 2)\n        throw new Error('hex string is invalid: unpadded ' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Big Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport const numberToBytesBE = (n, len) => hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n, len) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n) => hexToBytes(numberToHexUnpadded(n));\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs) {\n    const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrs.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\n// Bit operations\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n, pos) => (n >> BigInt(pos)) & _1n;\n// Sets single bit at position\nexport const bitSet = (n, pos, value) => n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n ** BigInt(nByteLength * 8);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // if x=0 and x_0 = 1, fail\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    validateObject(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => mod(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => pow(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // Accepts 0 as well\n    function assertFieldElement(n) {\n        if (typeof n === 'bigint' && _0n <= n && n < P)\n            return n;\n        throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(pointU, scalar) {\n        const u = assertFieldElement(pointU);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = assertFieldElement(scalar);\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return numberToBytesLE(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP\n        // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519\n        const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n        // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)\n        if (fieldLen === montgomeryBytes)\n            u[fieldLen - 1] &= 127; // 0b0111_1111\n        return bytesToNumberLE(u);\n    }\n    function decodeScalar(n) {\n        const bytes = ensureBytes('scalar', n);\n        if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)\n            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);\n        return bytesToNumberLE(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\n//# sourceMappingURL=montgomery.js.map","import { mod } from './modular.js';\nimport { bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.js';\nfunction validateDST(dst) {\n    if (dst instanceof Uint8Array)\n        return dst;\n    if (typeof dst === 'string')\n        return utf8ToBytes(dst);\n    throw new Error('DST must be Uint8Array or string');\n}\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction isBytes(item) {\n    if (!(item instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n}\nfunction isNum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(msg, DST, lenInBytes, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    if (DST.length > 255)\n        DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H(concatBytes(...args));\n    }\n    const pseudo_random_bytes = concatBytes(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\nexport function expand_message_xof(msg, DST, lenInBytes, k, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg, count, options) {\n    validateObject(options, {\n        DST: 'string',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    isBytes(msg);\n    isNum(count);\n    const DST = validateDST(_DST);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = mod(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexport function isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexport function createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\n//# sourceMappingURL=hash-to-curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { mod, pow2, isNegativeLE, Field, FpSqrtEven } from './abstract/modular.js';\nimport { equalBytes, bytesToHex, bytesToNumberLE, numberToBytesLE, ensureBytes, } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1),\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n ** 255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n ** 252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = twistedEdwards({ ...ed25519Defaults, domain: ed25519_domain });\nexport const ed25519ph = twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255,\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n});\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const aPub = ed25519.getPublicKey(utils.randomPrivateKey());\n *   x25519.getSharedSecret(edwardsToMontgomery(aPub), edwardsToMontgomery(someonesPub))\n */\nexport function edwardsToMontgomery(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((y - _1n) * Fp.inv(y + _1n)));\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) = map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst { hashToCurve, encodeToCurve } = htf.createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n});\nexport { hashToCurve, encodeToCurve };\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistrettoPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistrettoPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-bit hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-bit output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ed25519.ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ed25519.ExtendedPoint.ZERO);\nexport { RistrettoPoint };\n// https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/14/\n// Appendix B.  Hashing to ristretto255\nexport const hash_to_ristretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = htf.expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistrettoPoint.hashToCurve(uniform_bytes);\n    return P;\n};\n//# sourceMappingURL=ed25519.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((c, point, isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            // Zero is valid point too!\n            if (this.is0()) {\n                if (CURVE.allowInfinityPoint)\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size (nBitLength+64)\n         * as per FIPS 186 B.4.1 with modulo bias being neglible.\n         */\n        randomPrivateKey: () => {\n            const rand = CURVE.randomBytes(Fp.BYTES + 8);\n            const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n            return ut.numberToBytesBE(num, CURVE.nByteLength);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash (not message: you need to hash it by yourself).\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param opts `lowS, extraEntropy, prehash`\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = ut.createHmacDrbg(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    const c2 = (q - _1n) / _2n ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n ** c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n ** (c1 - _1n); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = _2n ** (i - _2n); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = {\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n};\nconst isoMap = htf.isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j))));\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n});\nexport const { hashToCurve, encodeToCurve } = htf.createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n});\n//# sourceMappingURL=secp256k1.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { toBigIntLE, toBufferLE } from 'bigint-buffer';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport createRpc from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nlet _Symbol$toStringTag;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\n_Symbol$toStringTag = Symbol.toStringTag;\nclass PublicKey extends Struct {\n  /** @internal */\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [_Symbol$toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\nPublicKey.default = new PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /** @internal */\n\n  /** @internal */\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    this._publicKey = void 0;\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = byteArray.shift();\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountCount = decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = byteArray.shift();\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: byteArray.shift(),\n      numReadonlySignedAccounts: byteArray.shift(),\n      numReadonlyUnsignedAccounts: byteArray.shift()\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus;\n\n/**\n * Default (empty) signature\n */\n(function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n})(TransactionStatus || (TransactionStatus = {}));\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n\n  /**\n   * Program Id to execute\n   */\n\n  /**\n   * Program input\n   */\n\n  constructor(opts) {\n    this.keys = void 0;\n    this.programId = void 0;\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    this.signatures = [];\n    this.feePayer = void 0;\n    this.instructions = [];\n    this.recentBlockhash = void 0;\n    this.lastValidBlockHeight = void 0;\n    this.nonceInfo = void 0;\n    this.minNonceContextSlot = void 0;\n    this._message = void 0;\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   */\n  verifySignatures(requireAllSignatures) {\n    return this._verifySignatures(this.serializeMessage(), requireAllSignatures === undefined ? true : requireAllSignatures);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData, requireAllSignatures) {\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures && !this._verifySignatures(signData, requireAllSignatures)) {\n      throw new Error('Signature verification failed');\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nconst encodeDecode = layout => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {\n    decode,\n    encode\n  };\n};\nconst bigInt = length => property => {\n  const layout = blob(length, property);\n  const {\n    encode,\n    decode\n  } = encodeDecode(layout);\n  const bigIntLayout = layout;\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return toBigIntLE(Buffer.from(src));\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = toBufferLE(bigInt, length);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n};\nconst u64 = bigInt(8);\n\n/**\n * Create account system transaction params\n */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nvar objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nvar fastStableStringify = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n\nvar fastStableStringify$1 = fastStableStringify;\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  /** The maximum number of slots in each epoch */\n\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n\n  /** Indicates whether epochs start short and grow */\n\n  /** The first epoch with `slotsPerEpoch` slots */\n\n  /** The first slot of `firstNormalEpoch` */\n\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    this.slotsPerEpoch = void 0;\n    this.leaderScheduleSlotOffset = void 0;\n    this.warmup = void 0;\n    this.firstNormalEpoch = void 0;\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nclass SendTransactionError extends Error {\n  constructor(message, logs) {\n    super(message);\n    this.logs = void 0;\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends RpcWebSocketCommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  })))\n}));\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: ConfirmedTransactionMetaResult,\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"0.0.0-development\" }`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /** @internal */\n  /** @internal */\n  /** @internal */\n  /** @internal */\n  /** @internal */\n  /** @internal */\n  /** @internal */\n  /** @internal */\n  /** @internal */\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */\n\n  /** @internal */\n  /** @internal */\n  /** @internal */\n\n  /** @internal */\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    this._commitment = void 0;\n    this._confirmTransactionInitialTimeout = void 0;\n    this._rpcEndpoint = void 0;\n    this._rpcWsEndpoint = void 0;\n    this._rpcClient = void 0;\n    this._rpcRequest = void 0;\n    this._rpcBatchRequest = void 0;\n    this._rpcWebSocket = void 0;\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketHeartbeat = null;\n    this._rpcWebSocketIdleTimeout = null;\n    this._rpcWebSocketGeneration = 0;\n    this._disableBlockhashCaching = false;\n    this._pollingBlockhash = false;\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    this._nextClientSubscriptionId = 0;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    this._subscriptionHashByClientSubscriptionId = {};\n    this._subscriptionStateChangeCallbacksByHash = {};\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    this._subscriptionsByHash = {};\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify$1(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', configWithoutEncoding);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = this._buildArgs(accounts?.length ? [accounts] : []);\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError('failed to simulate transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError('failed to send transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              if (e instanceof Error) {\n                console.error(`${method} error for argument`, args, e.message);\n              }\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify$1([subscriptionConfig.method, args]);\n\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(publicKey, callback, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64');\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, filters ? {\n      filters: filters\n    } : undefined /* extra */);\n\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /** stake authority */\n\n  /** withdraw authority */\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    this.staker = void 0;\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /** Unix timestamp of lockup expiration */\n\n  /** Epoch of lockup expiration */\n\n  /** Lockup custodian authority */\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    this.unixTimestamp = void 0;\n    this.epoch = void 0;\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\nLockup.default = new Lockup(0, 0, PublicKey.default);\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: 0,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insuffcient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\nVoteProgram.space = 3731;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * validator public key\n   */\n\n  /**\n   * validator information\n   */\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    this.key = void 0;\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n    if (programId === TOKEN_PROGRAM_ID) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map","export const encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map","import { blob } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base.mjs';\nexport const bigInt = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntLE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferLE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const bigIntBE = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntBE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferBE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const u64 = bigInt(8);\nexport const u64be = bigIntBE(8);\nexport const u128 = bigInt(16);\nexport const u128be = bigIntBE(16);\nexport const u192 = bigInt(24);\nexport const u192be = bigIntBE(24);\nexport const u256 = bigInt(32);\nexport const u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map","import { u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base.mjs';\nexport const bool = (property) => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n    const boolLayout = layout;\n    boolLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n    boolLayout.encode = (bool, buffer, offset) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n    return boolLayout;\n};\n//# sourceMappingURL=native.js.map","import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport const publicKey = (property) => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map","/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n//# sourceMappingURL=errors.js.map","/** Instructions defined by the program */\nexport var TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeMint\"] = 0] = \"InitializeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n    TokenInstruction[TokenInstruction[\"Transfer\"] = 3] = \"Transfer\";\n    TokenInstruction[TokenInstruction[\"Approve\"] = 4] = \"Approve\";\n    TokenInstruction[TokenInstruction[\"Revoke\"] = 5] = \"Revoke\";\n    TokenInstruction[TokenInstruction[\"SetAuthority\"] = 6] = \"SetAuthority\";\n    TokenInstruction[TokenInstruction[\"MintTo\"] = 7] = \"MintTo\";\n    TokenInstruction[TokenInstruction[\"Burn\"] = 8] = \"Burn\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n    TokenInstruction[TokenInstruction[\"ThawAccount\"] = 11] = \"ThawAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n    TokenInstruction[TokenInstruction[\"MintToChecked\"] = 14] = \"MintToChecked\";\n    TokenInstruction[TokenInstruction[\"BurnChecked\"] = 15] = \"BurnChecked\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n    TokenInstruction[TokenInstruction[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n    TokenInstruction[TokenInstruction[\"GetAccountDataSize\"] = 21] = \"GetAccountDataSize\";\n    TokenInstruction[TokenInstruction[\"InitializeImmutableOwner\"] = 22] = \"InitializeImmutableOwner\";\n    TokenInstruction[TokenInstruction[\"AmountToUiAmount\"] = 23] = \"AmountToUiAmount\";\n    TokenInstruction[TokenInstruction[\"UiAmountToAmount\"] = 24] = \"UiAmountToAmount\";\n    TokenInstruction[TokenInstruction[\"InitializeMintCloseAuthority\"] = 25] = \"InitializeMintCloseAuthority\";\n    TokenInstruction[TokenInstruction[\"TransferFeeExtension\"] = 26] = \"TransferFeeExtension\";\n    TokenInstruction[TokenInstruction[\"ConfidentialTransferExtension\"] = 27] = \"ConfidentialTransferExtension\";\n    TokenInstruction[TokenInstruction[\"DefaultAccountStateExtension\"] = 28] = \"DefaultAccountStateExtension\";\n    TokenInstruction[TokenInstruction[\"Reallocate\"] = 29] = \"Reallocate\";\n    TokenInstruction[TokenInstruction[\"MemoTransferExtension\"] = 30] = \"MemoTransferExtension\";\n    TokenInstruction[TokenInstruction[\"CreateNativeMint\"] = 31] = \"CreateNativeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeNonTransferableMint\"] = 32] = \"InitializeNonTransferableMint\";\n    TokenInstruction[TokenInstruction[\"InterestBearingMintExtension\"] = 33] = \"InterestBearingMintExtension\";\n    TokenInstruction[TokenInstruction[\"CpiGuardExtension\"] = 34] = \"CpiGuardExtension\";\n    TokenInstruction[TokenInstruction[\"InitializePermanentDelegate\"] = 35] = \"InitializePermanentDelegate\";\n})(TokenInstruction || (TokenInstruction = {}));\n//# sourceMappingURL=types.js.map","import { PublicKey } from '@solana/web3.js';\n/** @internal */\nexport function addSigners(keys, ownerOrAuthority, multiSigners) {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (const signer of multiSigners) {\n            keys.push({\n                pubkey: signer instanceof PublicKey ? signer : signer.publicKey,\n                isSigner: true,\n                isWritable: false,\n            });\n        }\n    }\n    else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\n//# sourceMappingURL=internal.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const approveInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct an Approve instruction\n *\n * @param account      Account to set the delegate for\n * @param delegate     Account authorized to transfer tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n        instruction: TokenInstruction.Approve,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an Approve instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, delegate, owner, multiSigners }, data, } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Approve)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an Approve instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveInstructionUnchecked({ programId, keys: [account, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approve.js.map","export var AccountType;\n(function (AccountType) {\n    AccountType[AccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountType[AccountType[\"Mint\"] = 1] = \"Mint\";\n    AccountType[AccountType[\"Account\"] = 2] = \"Account\";\n})(AccountType || (AccountType = {}));\nexport const ACCOUNT_TYPE_SIZE = 1;\n//# sourceMappingURL=accountType.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError } from '../errors.js';\n/** Buffer layout for de/serializing a multisig */\nexport const MultisigLayout = struct([\n    u8('m'),\n    u8('n'),\n    bool('isInitialized'),\n    publicKey('signer1'),\n    publicKey('signer2'),\n    publicKey('signer3'),\n    publicKey('signer4'),\n    publicKey('signer5'),\n    publicKey('signer6'),\n    publicKey('signer7'),\n    publicKey('signer8'),\n    publicKey('signer9'),\n    publicKey('signer10'),\n    publicKey('signer11'),\n]);\n/** Byte length of a multisig */\nexport const MULTISIG_SIZE = MultisigLayout.span;\n/**\n * Retrieve information about a multisig\n *\n * @param connection Connection to use\n * @param address    Multisig account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Multisig information\n */\nexport async function getMultisig(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMultisig(address, info, programId);\n}\n/**\n * Unpack a multisig\n *\n * @param address   Multisig account\n * @param info      Multisig account data\n * @param programId SPL Token program account\n *\n * @return Unpacked multisig\n */\nexport function unpackMultisig(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length != MULTISIG_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const multisig = MultisigLayout.decode(info.data);\n    return { address, ...multisig };\n}\n/** Get the minimum lamport balance for a multisig to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMultisig(connection, commitment) {\n    return await connection.getMinimumBalanceForRentExemption(MULTISIG_SIZE, commitment);\n}\n//# sourceMappingURL=multisig.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getAccountLen } from '../extensions/extensionType.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Token account state as stored by the program */\nexport var AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nexport const AccountLayout = struct([\n    publicKey('mint'),\n    publicKey('owner'),\n    u64('amount'),\n    u32('delegateOption'),\n    publicKey('delegate'),\n    u8('state'),\n    u32('isNativeOption'),\n    u64('isNative'),\n    u64('delegatedAmount'),\n    u32('closeAuthorityOption'),\n    publicKey('closeAuthority'),\n]);\n/** Byte length of a token account */\nexport const ACCOUNT_SIZE = AccountLayout.span;\n/**\n * Retrieve information about a token account\n *\n * @param connection Connection to use\n * @param address    Token account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getAccount(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackAccount(address, info, programId);\n}\n/**\n * Retrieve information about multiple token accounts in a single RPC call\n *\n * @param connection Connection to use\n * @param addresses  Token accounts\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getMultipleAccounts(connection, addresses, commitment, programId = TOKEN_PROGRAM_ID) {\n    const infos = await connection.getMultipleAccountsInfo(addresses, commitment);\n    return addresses.map((address, i) => unpackAccount(address, infos[i], programId));\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    const accountLen = getAccountLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(accountLen, commitment);\n}\n/**\n * Unpack a token account\n *\n * @param address   Token account\n * @param info      Token account data\n * @param programId SPL Token program account\n *\n * @return Unpacked token account\n */\nexport function unpackAccount(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Account)\n            throw new TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData,\n    };\n}\n//# sourceMappingURL=account.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, TokenInvalidMintError, TokenOwnerOffCurveError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getMintLen } from '../extensions/extensionType.js';\nimport { ACCOUNT_SIZE } from './account.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span;\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nexport async function getMint(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nexport function unpackMint(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= ACCOUNT_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Mint)\n            throw new TokenInvalidMintError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMint(connection, commitment) {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMintWithExtensions(connection, extensions, commitment) {\n    const mintLen = getMintLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nexport async function getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport function getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n//# sourceMappingURL=mint.js.map","import { SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\n/**\n * Construct a CreateAssociatedTokenAccount instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.alloc(0), programId, associatedTokenProgramId);\n}\n/**\n * Construct a CreateAssociatedTokenAccountIdempotent instruction\n *\n * @param payer                    Payer of the initialization fees\n * @param associatedToken          New associated token account\n * @param owner                    Owner of the new account\n * @param mint                     Token mint account\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAssociatedTokenAccountIdempotentInstruction(payer, associatedToken, owner, mint, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.from([1]), programId, associatedTokenProgramId);\n}\nfunction buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, instructionData, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false },\n    ];\n    return new TransactionInstruction({\n        keys,\n        programId: associatedTokenProgramId,\n        data: instructionData,\n    });\n}\n//# sourceMappingURL=associatedTokenAccount.js.map","import BN from 'bn.js';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\n\nexport function solToLamports(amount: number): number {\n  if (isNaN(amount)) return Number(0);\n  return Number(amount * LAMPORTS_PER_SOL);\n}\n\nexport function lamportsToSol(lamports: number | BN | bigint): number {\n  if (typeof lamports === 'number') {\n    return Math.abs(lamports) / LAMPORTS_PER_SOL;\n  }\n  if (typeof lamports === 'bigint') {\n    return Math.abs(Number(lamports)) / LAMPORTS_PER_SOL;\n  }\n\n  let signMultiplier = 1;\n  if (lamports.isNeg()) {\n    signMultiplier = -1;\n  }\n\n  const absLamports = lamports.abs();\n  const lamportsString = absLamports.toString(10).padStart(10, '0');\n  const splitIndex = lamportsString.length - 9;\n  const solString = lamportsString.slice(0, splitIndex) + '.' + lamportsString.slice(splitIndex);\n  return signMultiplier * parseFloat(solString);\n}\n","import { Buffer } from 'buffer';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\n\n// Public key that identifies the metadata program.\nexport const METADATA_PROGRAM_ID = new PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');\nexport const METADATA_MAX_NAME_LENGTH = 32;\nexport const METADATA_MAX_SYMBOL_LENGTH = 10;\nexport const METADATA_MAX_URI_LENGTH = 200;\n\n// Public key that identifies the SPL Stake Pool program.\nexport const STAKE_POOL_PROGRAM_ID = new PublicKey('SPoo1Ku8WFXoNDMHPsrGSTSG1Y47rzgn41SLUNakuHy');\n\n// Maximum number of validators to update during UpdateValidatorListBalance.\nexport const MAX_VALIDATORS_TO_UPDATE = 5;\n\n// Seed for ephemeral stake account\nexport const EPHEMERAL_STAKE_SEED_PREFIX = Buffer.from('ephemeral');\n\n// Seed used to derive transient stake accounts.\nexport const TRANSIENT_STAKE_SEED_PREFIX = Buffer.from('transient');\n\n// Minimum amount of staked SOL required in a validator stake account to allow\n// for merges without a mismatch on credits observed\nexport const MINIMUM_ACTIVE_STAKE = LAMPORTS_PER_SOL;\n","import { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport {\n  EPHEMERAL_STAKE_SEED_PREFIX,\n  METADATA_PROGRAM_ID,\n  TRANSIENT_STAKE_SEED_PREFIX,\n} from '../constants';\n\n/**\n * Generates the withdraw authority program address for the stake pool\n */\nexport function findWithdrawAuthorityProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [stakePoolAddress.toBuffer(), Buffer.from('withdraw')],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport function findStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [voteAccountAddress.toBuffer(), stakePoolAddress.toBuffer()],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the stake program address for a validator's vote account\n */\nexport function findTransientStakeProgramAddress(\n  programId: PublicKey,\n  voteAccountAddress: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [\n      TRANSIENT_STAKE_SEED_PREFIX,\n      voteAccountAddress.toBuffer(),\n      stakePoolAddress.toBuffer(),\n      seed.toBuffer('le', 8),\n    ],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the ephemeral program address for stake pool re-delegation\n */\nexport function findEphemeralStakeProgramAddress(\n  programId: PublicKey,\n  stakePoolAddress: PublicKey,\n  seed: BN,\n) {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [EPHEMERAL_STAKE_SEED_PREFIX, stakePoolAddress.toBuffer(), seed.toBuffer('le', 8)],\n    programId,\n  );\n  return publicKey;\n}\n\n/**\n * Generates the token metadata address by {@link mint}\n */\nexport function findTokenMetadataAddress(mint: PublicKey): PublicKey {\n  const [publicKey] = PublicKey.findProgramAddressSync(\n    [Buffer.from('metadata'), METADATA_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    METADATA_PROGRAM_ID,\n  );\n  return publicKey;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i256 = exports.u256 = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"i8\", { enumerable: true, get: function () { return buffer_layout_2.s8; } });\nObject.defineProperty(exports, \"u16\", { enumerable: true, get: function () { return buffer_layout_2.u16; } });\nObject.defineProperty(exports, \"i16\", { enumerable: true, get: function () { return buffer_layout_2.s16; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"i32\", { enumerable: true, get: function () { return buffer_layout_2.s32; } });\nObject.defineProperty(exports, \"f32\", { enumerable: true, get: function () { return buffer_layout_2.f32; } });\nObject.defineProperty(exports, \"f64\", { enumerable: true, get: function () { return buffer_layout_2.f64; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = (0, buffer_layout_1.blob)(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, \"le\");\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, \"le\", this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nfunction u256(property) {\n    return new BNLayout(32, false, property);\n}\nexports.u256 = u256;\nfunction i256(property) {\n    return new BNLayout(32, true, property);\n}\nexports.i256 = i256;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout((0, buffer_layout_1.blob)(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = (0, buffer_layout_1.u8)();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error(\"Invalid option \" + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout((0, buffer_layout_1.u8)(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error(\"Invalid bool: \" + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(elementLayout, (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = (0, buffer_layout_1.struct)([\n        u64(\"tag\"),\n        layout.replicate(\"data\"),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error(\"Invalid tag, expected: \" +\n                tag.toString(\"hex\") +\n                \", got: \" +\n                receivedTag.toString(\"hex\"));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, (data) => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.blob)((0, buffer_layout_1.offset)(length, -length.span), \"data\"),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, (data) => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), (data) => data.toString(\"utf-8\"), (s) => Buffer.from(s, \"utf-8\"), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = (0, buffer_layout_1.union)(discriminant !== null && discriminant !== void 0 ? discriminant : (0, buffer_layout_1.u8)(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = (0, buffer_layout_1.struct)([\n        (0, buffer_layout_1.seq)(elementLayout, length, \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, (values) => ({ values }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property) {\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [key, value];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return (this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset));\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = (0, buffer_layout_1.u32)(\"length\");\n    const layout = (0, buffer_layout_1.struct)([\n        length,\n        (0, buffer_layout_1.seq)(new MapEntryLayout(keyLayout, valueLayout), (0, buffer_layout_1.offset)(length, -length.span), \"values\"),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => new Map(values), (values) => ({ values: Array.from(values.entries()) }), property);\n}\nexports.map = map;\n//# sourceMappingURL=index.js.map","import { publicKey, struct, u32, u64, u8, option, vec } from '@coral-xyz/borsh';\nimport { Lockup, PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport {\n  Infer,\n  number,\n  nullable,\n  enums,\n  type,\n  coerce,\n  instance,\n  string,\n  optional,\n} from 'superstruct';\n\nexport interface Fee {\n  denominator: BN;\n  numerator: BN;\n}\n\nconst feeFields = [u64('denominator'), u64('numerator')];\n\nexport enum AccountType {\n  Uninitialized,\n  StakePool,\n  ValidatorList,\n}\n\nexport const BigNumFromString = coerce(instance(BN), string(), (value) => {\n  if (typeof value === 'string') return new BN(value, 10);\n  throw new Error('invalid big num');\n});\n\nexport const PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  (value) => new PublicKey(value),\n);\n\nexport type StakeAccountType = Infer<typeof StakeAccountType>;\nexport const StakeAccountType = enums(['uninitialized', 'initialized', 'delegated', 'rewardsPool']);\n\nexport type StakeMeta = Infer<typeof StakeMeta>;\nexport const StakeMeta = type({\n  rentExemptReserve: BigNumFromString,\n  authorized: type({\n    staker: PublicKeyFromString,\n    withdrawer: PublicKeyFromString,\n  }),\n  lockup: type({\n    unixTimestamp: number(),\n    epoch: number(),\n    custodian: PublicKeyFromString,\n  }),\n});\n\nexport type StakeAccountInfo = Infer<typeof StakeAccountInfo>;\nexport const StakeAccountInfo = type({\n  meta: StakeMeta,\n  stake: nullable(\n    type({\n      delegation: type({\n        voter: PublicKeyFromString,\n        stake: BigNumFromString,\n        activationEpoch: BigNumFromString,\n        deactivationEpoch: BigNumFromString,\n        warmupCooldownRate: number(),\n      }),\n      creditsObserved: number(),\n    }),\n  ),\n});\n\nexport type StakeAccount = Infer<typeof StakeAccount>;\nexport const StakeAccount = type({\n  type: StakeAccountType,\n  info: optional(StakeAccountInfo),\n});\n\nexport interface StakePool {\n  accountType: AccountType;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakeDepositAuthority: PublicKey;\n  stakeWithdrawBumpSeed: number;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerFeeAccount: PublicKey;\n  tokenProgramId: PublicKey;\n  totalLamports: BN;\n  poolTokenSupply: BN;\n  lastUpdateEpoch: BN;\n  lockup: Lockup;\n  epochFee: Fee;\n  nextEpochFee?: Fee | undefined;\n  preferredDepositValidatorVoteAddress?: PublicKey | undefined;\n  preferredWithdrawValidatorVoteAddress?: PublicKey | undefined;\n  stakeDepositFee: Fee;\n  stakeWithdrawalFee: Fee;\n  nextStakeWithdrawalFee?: Fee | undefined;\n  stakeReferralFee: number;\n  solDepositAuthority?: PublicKey | undefined;\n  solDepositFee: Fee;\n  solReferralFee: number;\n  solWithdrawAuthority?: PublicKey | undefined;\n  solWithdrawalFee: Fee;\n  nextSolWithdrawalFee?: Fee | undefined;\n  lastEpochPoolTokenSupply: BN;\n  lastEpochTotalLamports: BN;\n}\n\nexport const StakePoolLayout = struct<StakePool>([\n  u8('accountType'),\n  publicKey('manager'),\n  publicKey('staker'),\n  publicKey('stakeDepositAuthority'),\n  u8('stakeWithdrawBumpSeed'),\n  publicKey('validatorList'),\n  publicKey('reserveStake'),\n  publicKey('poolMint'),\n  publicKey('managerFeeAccount'),\n  publicKey('tokenProgramId'),\n  u64('totalLamports'),\n  u64('poolTokenSupply'),\n  u64('lastUpdateEpoch'),\n  struct([u64('unixTimestamp'), u64('epoch'), publicKey('custodian')], 'lockup'),\n  struct(feeFields, 'epochFee'),\n  option(struct(feeFields), 'nextEpochFee'),\n  option(publicKey(), 'preferredDepositValidatorVoteAddress'),\n  option(publicKey(), 'preferredWithdrawValidatorVoteAddress'),\n  struct(feeFields, 'stakeDepositFee'),\n  struct(feeFields, 'stakeWithdrawalFee'),\n  option(struct(feeFields), 'nextStakeWithdrawalFee'),\n  u8('stakeReferralFee'),\n  option(publicKey(), 'solDepositAuthority'),\n  struct(feeFields, 'solDepositFee'),\n  u8('solReferralFee'),\n  option(publicKey(), 'solWithdrawAuthority'),\n  struct(feeFields, 'solWithdrawalFee'),\n  option(struct(feeFields), 'nextSolWithdrawalFee'),\n  u64('lastEpochPoolTokenSupply'),\n  u64('lastEpochTotalLamports'),\n]);\n\nexport enum ValidatorStakeInfoStatus {\n  Active,\n  DeactivatingTransient,\n  ReadyForRemoval,\n}\n\nexport interface ValidatorStakeInfo {\n  status: ValidatorStakeInfoStatus;\n  voteAccountAddress: PublicKey;\n  activeStakeLamports: BN;\n  transientStakeLamports: BN;\n  transientSeedSuffixStart: BN;\n  transientSeedSuffixEnd: BN;\n  lastUpdateEpoch: BN;\n}\n\nexport const ValidatorStakeInfoLayout = struct<ValidatorStakeInfo>([\n  /// Amount of active stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('activeStakeLamports'),\n  /// Amount of transient stake delegated to this validator\n  /// Note that if `last_update_epoch` does not match the current epoch then\n  /// this field may not be accurate\n  u64('transientStakeLamports'),\n  /// Last epoch the active and transient stake lamports fields were updated\n  u64('lastUpdateEpoch'),\n  /// Start of the validator transient account seed suffixes\n  u64('transientSeedSuffixStart'),\n  /// End of the validator transient account seed suffixes\n  u64('transientSeedSuffixEnd'),\n  /// Status of the validator stake account\n  u8('status'),\n  /// Validator vote account address\n  publicKey('voteAccountAddress'),\n]);\n\nexport interface ValidatorList {\n  /// Account type, must be ValidatorList currently\n  accountType: number;\n  /// Maximum allowable number of validators\n  maxValidators: number;\n  /// List of stake info for each validator in the pool\n  validators: ValidatorStakeInfo[];\n}\n\nexport const ValidatorListLayout = struct<ValidatorList>([\n  u8('accountType'),\n  u32('maxValidators'),\n  vec(ValidatorStakeInfoLayout, 'validators'),\n]);\n","import {\n  Connection,\n  Keypair,\n  PublicKey,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport { findStakeProgramAddress, findTransientStakeProgramAddress } from './program-address';\nimport BN from 'bn.js';\n\nimport { lamportsToSol } from './math';\nimport { WithdrawAccount } from '../index';\nimport {\n  Fee,\n  StakePool,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfoStatus,\n} from '../layouts';\nimport { MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from '../constants';\n\nexport async function getValidatorListAccount(connection: Connection, pubkey: PublicKey) {\n  const account = await connection.getAccountInfo(pubkey);\n  if (!account) {\n    throw new Error('Invalid validator list account');\n  }\n  return {\n    pubkey,\n    account: {\n      data: ValidatorListLayout.decode(account?.data) as ValidatorList,\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\nexport interface ValidatorAccount {\n  type: 'preferred' | 'active' | 'transient' | 'reserve';\n  voteAddress?: PublicKey | undefined;\n  stakeAddress: PublicKey;\n  lamports: number;\n}\n\nexport async function prepareWithdrawAccounts(\n  connection: Connection,\n  stakePool: StakePool,\n  stakePoolAddress: PublicKey,\n  amount: number,\n  compareFn?: (a: ValidatorAccount, b: ValidatorAccount) => number,\n  skipFee?: boolean,\n): Promise<WithdrawAccount[]> {\n  const validatorListAcc = await connection.getAccountInfo(stakePool.validatorList);\n  const validatorList = ValidatorListLayout.decode(validatorListAcc?.data) as ValidatorList;\n\n  if (!validatorList?.validators || validatorList?.validators.length == 0) {\n    throw new Error('No accounts found');\n  }\n\n  const minBalanceForRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n  const minBalance = minBalanceForRentExemption + MINIMUM_ACTIVE_STAKE;\n\n  let accounts = [] as Array<{\n    type: 'preferred' | 'active' | 'transient' | 'reserve';\n    voteAddress?: PublicKey | undefined;\n    stakeAddress: PublicKey;\n    lamports: number;\n  }>;\n\n  // Prepare accounts\n  for (const validator of validatorList.validators) {\n    if (validator.status !== ValidatorStakeInfoStatus.Active) {\n      continue;\n    }\n\n    const stakeAccountAddress = await findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      validator.voteAccountAddress,\n      stakePoolAddress,\n    );\n\n    if (!validator.activeStakeLamports.isZero()) {\n      const isPreferred = stakePool?.preferredWithdrawValidatorVoteAddress?.equals(\n        validator.voteAccountAddress,\n      );\n      accounts.push({\n        type: isPreferred ? 'preferred' : 'active',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: stakeAccountAddress,\n        lamports: validator.activeStakeLamports.toNumber(),\n      });\n    }\n\n    const transientStakeLamports = validator.transientStakeLamports.toNumber() - minBalance;\n    if (transientStakeLamports > 0) {\n      const transientStakeAccountAddress = await findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      accounts.push({\n        type: 'transient',\n        voteAddress: validator.voteAccountAddress,\n        stakeAddress: transientStakeAccountAddress,\n        lamports: transientStakeLamports,\n      });\n    }\n  }\n\n  // Sort from highest to lowest balance\n  accounts = accounts.sort(compareFn ? compareFn : (a, b) => b.lamports - a.lamports);\n\n  const reserveStake = await connection.getAccountInfo(stakePool.reserveStake);\n  const reserveStakeBalance = (reserveStake?.lamports ?? 0) - minBalanceForRentExemption - 1;\n  if (reserveStakeBalance > 0) {\n    accounts.push({\n      type: 'reserve',\n      stakeAddress: stakePool.reserveStake,\n      lamports: reserveStakeBalance,\n    });\n  }\n\n  // Prepare the list of accounts to withdraw from\n  const withdrawFrom: WithdrawAccount[] = [];\n  let remainingAmount = amount;\n\n  const fee = stakePool.stakeWithdrawalFee;\n  const inverseFee: Fee = {\n    numerator: fee.denominator.sub(fee.numerator),\n    denominator: fee.denominator,\n  };\n\n  for (const type of ['preferred', 'active', 'transient', 'reserve']) {\n    const filteredAccounts = accounts.filter((a) => a.type == type);\n\n    for (const { stakeAddress, voteAddress, lamports } of filteredAccounts) {\n      if (lamports <= minBalance && type == 'transient') {\n        continue;\n      }\n\n      let availableForWithdrawal = calcPoolTokensForDeposit(stakePool, lamports);\n\n      if (!skipFee && !inverseFee.numerator.isZero()) {\n        availableForWithdrawal = divideBnToNumber(\n          new BN(availableForWithdrawal).mul(inverseFee.denominator),\n          inverseFee.numerator,\n        );\n      }\n\n      const poolAmount = Math.min(availableForWithdrawal, remainingAmount);\n      if (poolAmount <= 0) {\n        continue;\n      }\n\n      // Those accounts will be withdrawn completely with `claim` instruction\n      withdrawFrom.push({ stakeAddress, voteAddress, poolAmount });\n      remainingAmount -= poolAmount;\n\n      if (remainingAmount == 0) {\n        break;\n      }\n    }\n\n    if (remainingAmount == 0) {\n      break;\n    }\n  }\n\n  // Not enough stake to withdraw the specified amount\n  if (remainingAmount > 0) {\n    throw new Error(\n      `No stake accounts found in this pool with enough balance to withdraw ${lamportsToSol(\n        amount,\n      )} pool tokens.`,\n    );\n  }\n\n  return withdrawFrom;\n}\n\n/**\n * Calculate the pool tokens that should be minted for a deposit of `stakeLamports`\n */\nexport function calcPoolTokensForDeposit(stakePool: StakePool, stakeLamports: number): number {\n  if (stakePool.poolTokenSupply.isZero() || stakePool.totalLamports.isZero()) {\n    return stakeLamports;\n  }\n  return Math.floor(\n    divideBnToNumber(new BN(stakeLamports).mul(stakePool.poolTokenSupply), stakePool.totalLamports),\n  );\n}\n\n/**\n * Calculate lamports amount on withdrawal\n */\nexport function calcLamportsWithdrawAmount(stakePool: StakePool, poolTokens: number): number {\n  const numerator = new BN(poolTokens).mul(stakePool.totalLamports);\n  const denominator = stakePool.poolTokenSupply;\n  if (numerator.lt(denominator)) {\n    return 0;\n  }\n  return divideBnToNumber(numerator, denominator);\n}\n\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\n  if (denominator.isZero()) {\n    return 0;\n  }\n  const quotient = numerator.div(denominator).toNumber();\n  const rem = numerator.umod(denominator);\n  const gcd = rem.gcd(denominator);\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\n}\n\nexport function newStakeAccount(\n  feePayer: PublicKey,\n  instructions: TransactionInstruction[],\n  lamports: number,\n): Keypair {\n  // Account for tokens not specified, creating one\n  const stakeReceiverKeypair = Keypair.generate();\n  console.log(`Creating account to receive stake ${stakeReceiverKeypair.publicKey}`);\n\n  instructions.push(\n    // Creating new account\n    SystemProgram.createAccount({\n      fromPubkey: feePayer,\n      newAccountPubkey: stakeReceiverKeypair.publicKey,\n      lamports,\n      space: StakeProgram.space,\n      programId: StakeProgram.programId,\n    }),\n  );\n\n  return stakeReceiverKeypair;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport { Buffer } from 'buffer';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<any>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength = type.layout.span;\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({ instruction: type.index }, fields);\n  type.layout.encode(layoutFields, data);\n\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","export * from './layout';\nexport * from './math';\nexport * from './program-address';\nexport * from './stake';\nexport * from './instruction';\n\nexport function arrayChunk(array: any[], size: number): any[] {\n  const result = [];\n  for (let i = 0; i < array.length; i += size) {\n    result.push(array.slice(i, i + size));\n  }\n  return result;\n}\n","import {\n  PublicKey,\n  STAKE_CONFIG_ID,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport BN from 'bn.js';\nimport {\n  METADATA_MAX_NAME_LENGTH,\n  METADATA_MAX_SYMBOL_LENGTH,\n  METADATA_MAX_URI_LENGTH,\n  METADATA_PROGRAM_ID,\n  STAKE_POOL_PROGRAM_ID,\n} from './constants';\nimport { InstructionType, encodeData } from './utils';\nimport { Fee } from './index';\n\n/**\n * An enumeration of valid StakePoolInstructionType's\n */\nexport type StakePoolInstructionType =\n  | 'Initialize'\n  | 'AddValidatorToPool'\n  | 'RemoveValidatorFromPool'\n  | 'DecreaseValidatorStake'\n  | 'IncreaseValidatorStake'\n  // | 'SetPreferredValidator'\n  | 'UpdateValidatorListBalance'\n  | 'UpdateStakePoolBalance'\n  | 'CleanupRemovedValidatorEntries'\n  | 'DepositStake'\n  | 'WithdrawStake'\n  // | 'SetManager'\n  // | 'SetFee'\n  // | 'SetStaker'\n  | 'DepositSol'\n  // | 'SetFundingAuthority'\n  | 'WithdrawSol'\n  | 'CreateTokenMetadata'\n  | 'UpdateTokenMetadata'\n  | 'IncreaseAdditionalValidatorStake'\n  | 'DecreaseAdditionalValidatorStake'\n  | 'Redelegate';\n\nconst MOVE_STAKE_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.nu64('lamports'),\n  BufferLayout.nu64('transientStakeSeed'),\n]);\n\nconst TOKEN_METADATA_LAYOUT = BufferLayout.struct<any>([\n  BufferLayout.u8('instruction'),\n  BufferLayout.blob(METADATA_MAX_NAME_LENGTH, 'name'),\n  BufferLayout.blob(METADATA_MAX_SYMBOL_LENGTH, 'symbol'),\n  BufferLayout.blob(METADATA_MAX_URI_LENGTH, 'uri'),\n]);\n\nconst feeLayout = (property?: string) =>\n  BufferLayout.struct<any>(\n    [BufferLayout.nu64('denominator'), BufferLayout.nu64('numerator')],\n    property,\n  );\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_POOL_INSTRUCTION_LAYOUTS: {\n  [type in StakePoolInstructionType]: InstructionType;\n} = Object.freeze({\n  /// Initializes a new StakePool.\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      feeLayout('fee'),\n      feeLayout('withdrawalFee'),\n      feeLayout('depositFee'),\n      feeLayout('referralFee'),\n      BufferLayout.u32('maxValidators'),\n    ]),\n  },\n  /// (Staker only) Adds stake account delegated to validator to the pool's list of managed validators.\n  AddValidatorToPool: {\n    index: 1,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      // Optional non-zero u32 seed used for generating the validator stake address\n      // OptionLayout.of(BufferLayout.u32('seed')),\n    ]),\n  },\n  /// (Staker only) Removes validator from the pool, deactivating its stake\n  RemoveValidatorFromPool: {\n    index: 2,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  /// (Staker only) Decrease active stake on a validator, eventually moving it to the reserve\n  DecreaseValidatorStake: {\n    index: 3,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  /// (Staker only) Increase stake on a validator from the reserve account\n  IncreaseValidatorStake: {\n    index: 4,\n    layout: MOVE_STAKE_LAYOUT,\n  },\n  // SetPreferredValidator: {\n  //   index: 5,\n  //   layout: BufferLayout.struct<any>([\n  //     BufferLayout.u8('instruction'),\n  //     BufferLayout.u8('validatorType'),\n  //     BufferLayout.u64('validatorVoteAddress'), // Option<Pubkey>\n  //   ]),\n  // },\n  UpdateValidatorListBalance: {\n    index: 6,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('startIndex'),\n      BufferLayout.u8('noMerge'),\n    ]),\n  },\n  UpdateStakePoolBalance: {\n    index: 7,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  CleanupRemovedValidatorEntries: {\n    index: 8,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  DepositStake: {\n    index: 9,\n    layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  },\n  /// Withdraw the token from the pool at the current ratio.\n  WithdrawStake: {\n    index: 10,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('poolTokens'),\n    ]),\n  },\n  // /// (Manager only) Update manager\n  // SetManager: {\n  //   index: 11,\n  //   layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  // },\n  // /// (Manager only) Update fee\n  // SetFee: {\n  //   index: 12,\n  //   layout: BufferLayout.struct<any>([\n  //     BufferLayout.u8('instruction'),\n  //     // Type of fee to update and value to update it to\n  //     BufferLayout.nu64('fee'),\n  //   ]),\n  // },\n  // /// (Manager or staker only) Update staker\n  // SetStaker: {\n  //   index: 13,\n  //   layout: BufferLayout.struct<any>([BufferLayout.u8('instruction')]),\n  // },\n  /// Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n  /// representing ownership into the pool. Inputs are converted to the current ratio.\n  DepositSol: {\n    index: 14,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('lamports'),\n    ]),\n  },\n  // /// (Manager only) Update SOL deposit, stake deposit, or SOL withdrawal authority.\n  // SetFundingAuthority: {\n  //   index: 15,\n  // },\n  /// Withdraw SOL directly from the pool's reserve account. Fails if the\n  /// reserve does not have enough SOL.\n  WithdrawSol: {\n    index: 16,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('poolTokens'),\n    ]),\n  },\n  /// Create token metadata for the stake-pool token in the\n  /// metaplex-token program\n  CreateTokenMetadata: {\n    index: 17,\n    layout: TOKEN_METADATA_LAYOUT,\n  },\n  /// Update token metadata for the stake-pool token in the\n  /// metaplex-token program\n  UpdateTokenMetadata: {\n    index: 18,\n    layout: TOKEN_METADATA_LAYOUT,\n  },\n  IncreaseAdditionalValidatorStake: {\n    index: 19,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('lamports'),\n      BufferLayout.nu64('transientStakeSeed'),\n      BufferLayout.nu64('ephemeralStakeSeed'),\n    ]),\n  },\n  DecreaseAdditionalValidatorStake: {\n    index: 20,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      BufferLayout.nu64('lamports'),\n      BufferLayout.nu64('transientStakeSeed'),\n      BufferLayout.nu64('ephemeralStakeSeed'),\n    ]),\n  },\n  Redelegate: {\n    index: 21,\n    layout: BufferLayout.struct<any>([\n      BufferLayout.u8('instruction'),\n      /// Amount of lamports to redelegate\n      BufferLayout.nu64('lamports'),\n      /// Seed used to create source transient stake account\n      BufferLayout.nu64('sourceTransientStakeSeed'),\n      /// Seed used to create destination ephemeral account.\n      BufferLayout.nu64('ephemeralStakeSeed'),\n      /// Seed used to create destination transient stake account. If there is\n      /// already transient stake, this must match the current seed, otherwise\n      /// it can be anything\n      BufferLayout.nu64('destinationTransientStakeSeed'),\n    ]),\n  },\n});\n\nexport type InitializeParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  poolMint: PublicKey;\n  managerPoolAccount: PublicKey;\n  depositAuthority?: PublicKey;\n  fee: Fee;\n  withdrawalFee: Fee;\n  depositFee: Fee;\n  referralFee: Fee;\n  maxValidators: number;\n};\n\nexport type AddValidatorToPoolParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  // reserveStake: PublicKey;\n  funder: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  /// (Optional) Seed to used to create the validator stake account.\n  seed?: number;\n};\n\nexport type RemoveValidatorFromPoolParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  newStakeAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n  destinationStake: PublicKey;\n};\n\n/**\n * Cleans up validator stake account entries marked as `ReadyForRemoval`\n */\nexport type CleanupRemovedValidatorEntriesParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n};\n\n/**\n * Updates balances of validator and transient stake accounts in the pool.\n */\nexport type UpdateValidatorListBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  validatorAndTransientStakePairs: PublicKey[];\n  startIndex: number;\n  noMerge: boolean;\n};\n\n/**\n * Updates total pool balance based on balances in the reserve and validator list.\n */\nexport type UpdateStakePoolBalanceParams = {\n  stakePool: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * (Staker only) Decrease active stake on a validator, eventually moving it to the reserve\n */\nexport type DecreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  validatorStake: PublicKey;\n  transientStake: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface DecreaseAdditionalValidatorStakeParams extends DecreaseValidatorStakeParams {\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * (Staker only) Increase stake on a validator from the reserve account.\n */\nexport type IncreaseValidatorStakeParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  reserveStake: PublicKey;\n  transientStake: PublicKey;\n  validatorStake: PublicKey;\n  validatorVote: PublicKey;\n  // Amount of lamports to split into the transient stake account\n  lamports: number;\n  // Seed to used to create the transient stake account\n  transientStakeSeed: number;\n};\n\nexport interface IncreaseAdditionalValidatorStakeParams extends IncreaseValidatorStakeParams {\n  ephemeralStake: PublicKey;\n  ephemeralStakeSeed: number;\n}\n\n/**\n * Deposits a stake account into the pool in exchange for pool tokens\n */\nexport type DepositStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  depositAuthority: PublicKey;\n  withdrawAuthority: PublicKey;\n  depositStake: PublicKey;\n  validatorStake: PublicKey;\n  reserveStake: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n};\n\n/**\n * Withdraws a stake account from the pool in exchange for pool tokens\n */\nexport type WithdrawStakeParams = {\n  stakePool: PublicKey;\n  validatorList: PublicKey;\n  withdrawAuthority: PublicKey;\n  validatorStake: PublicKey;\n  destinationStake: PublicKey;\n  destinationStakeAuthority: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  sourcePoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Withdraw sol instruction params\n */\nexport type WithdrawSolParams = {\n  stakePool: PublicKey;\n  sourcePoolAccount: PublicKey;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  destinationSystemAccount: PublicKey;\n  sourceTransferAuthority: PublicKey;\n  solWithdrawAuthority?: PublicKey | undefined;\n  managerFeeAccount: PublicKey;\n  poolMint: PublicKey;\n  poolTokens: number;\n};\n\n/**\n * Deposit SOL directly into the pool's reserve account. The output is a \"pool\" token\n * representing ownership into the pool. Inputs are converted to the current ratio.\n */\nexport type DepositSolParams = {\n  stakePool: PublicKey;\n  depositAuthority?: PublicKey | undefined;\n  withdrawAuthority: PublicKey;\n  reserveStake: PublicKey;\n  fundingAccount: PublicKey;\n  destinationPoolAccount: PublicKey;\n  managerFeeAccount: PublicKey;\n  referralPoolAccount: PublicKey;\n  poolMint: PublicKey;\n  lamports: number;\n};\n\nexport type RedelegateParams = {\n  stakePool: PublicKey;\n  staker: PublicKey;\n  stakePoolWithdrawAuthority: PublicKey;\n  validatorList: PublicKey;\n  sourceValidatorStake: PublicKey;\n  sourceTransientStake: PublicKey;\n  ephemeralStake: PublicKey;\n  destinationTransientStake: PublicKey;\n  destinationValidatorStake: PublicKey;\n  validator: PublicKey;\n  // Amount of lamports to redelegate\n  lamports: number | BN;\n  // Seed used to create source transient stake account\n  sourceTransientStakeSeed: number | BN;\n  // Seed used to create destination ephemeral account\n  ephemeralStakeSeed: number | BN;\n  // Seed used to create destination transient stake account. If there is\n  // already transient stake, this must match the current seed, otherwise\n  // it can be anything\n  destinationTransientStakeSeed: number | BN;\n};\n\nexport type CreateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  poolMint: PublicKey;\n  payer: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\nexport type UpdateTokenMetadataParams = {\n  stakePool: PublicKey;\n  manager: PublicKey;\n  tokenMetadata: PublicKey;\n  withdrawAuthority: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n};\n\n/**\n * Stake Pool Instruction class\n */\nexport class StakePoolInstruction {\n  /**\n   * Creates an 'initialize' instruction.\n   */\n  static initialize(params: InitializeParams) {\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      fee: params.fee,\n      withdrawalFee: params.withdrawalFee,\n      depositFee: params.depositFee,\n      referralFee: params.referralFee,\n      maxValidators: params.maxValidators,\n    });\n\n    const keys = [\n      { pubkey: params.stakePool, isSigner: false, isWritable: true },\n      { pubkey: params.manager, isSigner: true, isWritable: false },\n      { pubkey: params.staker, isSigner: false, isWritable: false },\n      { pubkey: params.stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: params.validatorList, isSigner: false, isWritable: true },\n      { pubkey: params.reserveStake, isSigner: false, isWritable: false },\n      { pubkey: params.poolMint, isSigner: false, isWritable: true },\n      { pubkey: params.managerPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (params.depositAuthority) {\n      keys.push({ pubkey: params.depositAuthority, isSigner: true, isWritable: false });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to add a validator to the pool.\n   */\n  static addValidatorToPool(params: AddValidatorToPoolParams) {\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.AddValidatorToPool;\n    const data = encodeData(type, { seed: params.seed });\n\n    const keys = [\n      { pubkey: params.stakePool, isSigner: false, isWritable: true },\n      { pubkey: params.staker, isSigner: true, isWritable: false },\n      { pubkey: params.funder, isSigner: true, isWritable: true },\n      // { pubkey: params.reserveStake, isSigner: false, isWritable: true },\n      { pubkey: params.withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: params.validatorList, isSigner: false, isWritable: true },\n      { pubkey: params.validatorStake, isSigner: false, isWritable: true },\n      { pubkey: params.validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to remove a validator from the pool.\n   */\n  static removeValidatorFromPool(params: RemoveValidatorFromPoolParams) {\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.RemoveValidatorFromPool;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: params.stakePool, isSigner: false, isWritable: true },\n      { pubkey: params.staker, isSigner: true, isWritable: false },\n      { pubkey: params.withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: params.newStakeAuthority, isSigner: false, isWritable: true },\n      { pubkey: params.validatorList, isSigner: false, isWritable: true },\n      { pubkey: params.validatorStake, isSigner: false, isWritable: true },\n      { pubkey: params.transientStake, isSigner: false, isWritable: false },\n      { pubkey: params.destinationStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update a set of validators in the stake pool.\n   */\n  static updateValidatorListBalance(\n    params: UpdateValidatorListBalanceParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      startIndex,\n      noMerge,\n      validatorAndTransientStakePairs,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateValidatorListBalance;\n    const data = encodeData(type, { startIndex, noMerge: noMerge ? 1 : 0 });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      ...validatorAndTransientStakePairs.map((pubkey) => ({\n        pubkey,\n        isSigner: false,\n        isWritable: true,\n      })),\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to update the overall stake pool balance.\n   */\n  static updateStakePoolBalance(params: UpdateStakePoolBalanceParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      managerFeeAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateStakePoolBalance;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: false },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates instruction to clean up removed validator entries.\n   */\n  static cleanupRemovedValidatorEntries(\n    params: CleanupRemovedValidatorEntriesParams,\n  ): TransactionInstruction {\n    const { stakePool, validatorList } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.CleanupRemovedValidatorEntries;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseValidatorStake(params: IncreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      // TODO: will be available in the new stake pool\n      // { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `IncreaseAdditionalValidatorStake` instruction (rebalance from reserve account to\n   * transient account)\n   */\n  static increaseAdditionalValidatorStake(\n    params: IncreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      reserveStake,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      transientStakeSeed,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.IncreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: false },\n      { pubkey: validatorVote, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseValidatorStake` instruction (rebalance from validator account to\n   * transient account)\n   */\n  static decreaseValidatorStake(params: DecreaseValidatorStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `DecreaseAdditionalValidatorStake` instruction (rebalance from\n   * validator account to transient account)\n   */\n  static decreaseAdditionalValidatorStake(\n    params: DecreaseAdditionalValidatorStakeParams,\n  ): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      withdrawAuthority,\n      validatorList,\n      validatorStake,\n      transientStake,\n      lamports,\n      transientStakeSeed,\n      ephemeralStakeSeed,\n      ephemeralStake,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DecreaseAdditionalValidatorStake;\n    const data = encodeData(type, { lamports, transientStakeSeed, ephemeralStakeSeed });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: transientStake, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit a stake account into a stake pool.\n   */\n  static depositStake(params: DepositStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      depositAuthority,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      reserveStake,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositStake;\n    const data = encodeData(type);\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: depositAuthority, isSigner: false, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: depositStake, isSigner: false, isWritable: true },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to deposit SOL into a stake pool.\n   */\n  static depositSol(params: DepositSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      depositAuthority,\n      reserveStake,\n      fundingAccount,\n      destinationPoolAccount,\n      managerFeeAccount,\n      referralPoolAccount,\n      poolMint,\n      lamports,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.DepositSol;\n    const data = encodeData(type, { lamports });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: fundingAccount, isSigner: true, isWritable: true },\n      { pubkey: destinationPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: referralPoolAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (depositAuthority) {\n      keys.push({\n        pubkey: depositAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw active stake from a stake pool.\n   */\n  static withdrawStake(params: WithdrawStakeParams): TransactionInstruction {\n    const {\n      stakePool,\n      validatorList,\n      withdrawAuthority,\n      validatorStake,\n      destinationStake,\n      destinationStakeAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      managerFeeAccount,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawStake;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStake, isSigner: false, isWritable: true },\n      { pubkey: destinationStakeAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates a transaction instruction to withdraw SOL from a stake pool.\n   */\n  static withdrawSol(params: WithdrawSolParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      sourceTransferAuthority,\n      sourcePoolAccount,\n      reserveStake,\n      destinationSystemAccount,\n      managerFeeAccount,\n      solWithdrawAuthority,\n      poolMint,\n      poolTokens,\n    } = params;\n\n    const type = STAKE_POOL_INSTRUCTION_LAYOUTS.WithdrawSol;\n    const data = encodeData(type, { poolTokens });\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: true },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: sourceTransferAuthority, isSigner: true, isWritable: false },\n      { pubkey: sourcePoolAccount, isSigner: false, isWritable: true },\n      { pubkey: reserveStake, isSigner: false, isWritable: true },\n      { pubkey: destinationSystemAccount, isSigner: false, isWritable: true },\n      { pubkey: managerFeeAccount, isSigner: false, isWritable: true },\n      { pubkey: poolMint, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    if (solWithdrawAuthority) {\n      keys.push({\n        pubkey: solWithdrawAuthority,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to create metadata\n   * using the mpl token metadata program for the pool token\n   */\n  static createTokenMetadata(params: CreateTokenMetadataParams): TransactionInstruction {\n    const {\n      stakePool,\n      withdrawAuthority,\n      tokenMetadata,\n      manager,\n      payer,\n      poolMint,\n      name,\n      symbol,\n      uri,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: poolMint, isSigner: false, isWritable: false },\n      { pubkey: payer, isSigner: true, isWritable: true },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.CreateTokenMetadata, {\n      name: new TextEncoder().encode(name.padEnd(METADATA_MAX_NAME_LENGTH, '\\0')),\n      symbol: new TextEncoder().encode(symbol.padEnd(METADATA_MAX_SYMBOL_LENGTH, '\\0')),\n      uri: new TextEncoder().encode(uri.padEnd(METADATA_MAX_URI_LENGTH, '\\0')),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates an instruction to update metadata\n   * in the mpl token metadata program account for the pool token\n   */\n  static updateTokenMetadata(params: UpdateTokenMetadataParams): TransactionInstruction {\n    const { stakePool, withdrawAuthority, tokenMetadata, manager, name, symbol, uri } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: manager, isSigner: true, isWritable: false },\n      { pubkey: withdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: tokenMetadata, isSigner: false, isWritable: true },\n      { pubkey: METADATA_PROGRAM_ID, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.UpdateTokenMetadata, {\n      name: new TextEncoder().encode(name.padEnd(METADATA_MAX_NAME_LENGTH, '\\0')),\n      symbol: new TextEncoder().encode(symbol.padEnd(METADATA_MAX_SYMBOL_LENGTH, '\\0')),\n      uri: new TextEncoder().encode(uri.padEnd(METADATA_MAX_URI_LENGTH, '\\0')),\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n\n  /**\n   * Creates `Redelegate` instruction (rebalance from one validator account to another)\n   * @param params\n   */\n  static redelegate(params: RedelegateParams): TransactionInstruction {\n    const {\n      stakePool,\n      staker,\n      stakePoolWithdrawAuthority,\n      validatorList,\n      sourceValidatorStake,\n      sourceTransientStake,\n      ephemeralStake,\n      destinationTransientStake,\n      destinationValidatorStake,\n      validator,\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    } = params;\n\n    const keys = [\n      { pubkey: stakePool, isSigner: false, isWritable: false },\n      { pubkey: staker, isSigner: true, isWritable: false },\n      { pubkey: stakePoolWithdrawAuthority, isSigner: false, isWritable: false },\n      { pubkey: validatorList, isSigner: false, isWritable: true },\n      { pubkey: sourceValidatorStake, isSigner: false, isWritable: true },\n      { pubkey: sourceTransientStake, isSigner: false, isWritable: true },\n      { pubkey: ephemeralStake, isSigner: false, isWritable: true },\n      { pubkey: destinationTransientStake, isSigner: false, isWritable: true },\n      { pubkey: destinationValidatorStake, isSigner: false, isWritable: false },\n      { pubkey: validator, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: SYSVAR_STAKE_HISTORY_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: StakeProgram.programId, isSigner: false, isWritable: false },\n    ];\n\n    const data = encodeData(STAKE_POOL_INSTRUCTION_LAYOUTS.Redelegate, {\n      lamports,\n      sourceTransientStakeSeed,\n      ephemeralStakeSeed,\n      destinationTransientStakeSeed,\n    });\n\n    return new TransactionInstruction({\n      programId: STAKE_POOL_PROGRAM_ID,\n      keys,\n      data,\n    });\n  }\n}\n","import {\n  AccountInfo,\n  Connection,\n  Keypair,\n  PublicKey,\n  Signer,\n  StakeAuthorizationLayout,\n  StakeProgram,\n  SystemProgram,\n  TransactionInstruction,\n} from '@solana/web3.js';\nimport {\n  createApproveInstruction,\n  createAssociatedTokenAccountIdempotentInstruction,\n  getAccount,\n  getAssociatedTokenAddressSync,\n} from '@solana/spl-token';\nimport {\n  ValidatorAccount,\n  arrayChunk,\n  calcLamportsWithdrawAmount,\n  findStakeProgramAddress,\n  findTransientStakeProgramAddress,\n  findWithdrawAuthorityProgramAddress,\n  getValidatorListAccount,\n  newStakeAccount,\n  prepareWithdrawAccounts,\n  lamportsToSol,\n  solToLamports,\n  findEphemeralStakeProgramAddress,\n  findTokenMetadataAddress,\n} from './utils';\nimport { StakePoolInstruction } from './instructions';\nimport {\n  StakeAccount,\n  StakePool,\n  StakePoolLayout,\n  ValidatorList,\n  ValidatorListLayout,\n  ValidatorStakeInfo,\n  ValidatorStakeInfoLayout,\n} from './layouts';\nimport { MAX_VALIDATORS_TO_UPDATE, MINIMUM_ACTIVE_STAKE, STAKE_POOL_PROGRAM_ID } from './constants';\nimport { create } from 'superstruct';\nimport BN from 'bn.js';\n\nexport type { StakePool, AccountType, ValidatorList, ValidatorStakeInfo } from './layouts';\nexport { STAKE_POOL_PROGRAM_ID } from './constants';\nexport * from './instructions';\n\nexport interface ValidatorListAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<ValidatorList>;\n}\n\nexport interface StakePoolAccount {\n  pubkey: PublicKey;\n  account: AccountInfo<StakePool>;\n}\n\nexport interface WithdrawAccount {\n  stakeAddress: PublicKey;\n  voteAddress?: PublicKey;\n  poolAmount: number;\n}\n\nexport interface Fee {\n  denominator: BN;\n  numerator: BN;\n}\n\n/**\n * Wrapper class for a stake pool.\n * Each stake pool has a stake pool account and a validator list account.\n */\nexport interface StakePoolAccounts {\n  stakePool: StakePoolAccount | undefined;\n  validatorList: ValidatorListAccount | undefined;\n}\n\ninterface InitializeProps {\n  connection: Connection;\n  manager: Keypair;\n  // Default: Keypair.generate\n  stakePool?: Keypair;\n  // Default: Keypair.generate\n  validatorList?: Keypair;\n  poolMint: PublicKey;\n  reserveStake: PublicKey;\n  managerPoolAccount: PublicKey;\n  fee: Fee;\n  referralFee: Fee;\n  maxValidators: number;\n}\n\ninterface UpdateStakePoolTokenMetadataProps {\n  connection: Connection;\n  stakePool: StakePoolAccount | PublicKey;\n  tokenMetadata?: PublicKey;\n  name: string;\n  symbol: string;\n  uri: string;\n}\n\ninterface CreateStakePoolTokenMetadataProps extends UpdateStakePoolTokenMetadataProps {\n  payer: PublicKey;\n}\n\ninterface RedelegateProps {\n  connection: Connection;\n  stakePoolAddress: PublicKey;\n  sourceVoteAccount: PublicKey;\n  destinationVoteAccount: PublicKey;\n  sourceTransientStakeSeed: number | BN;\n  destinationTransientStakeSeed: number | BN;\n  ephemeralStakeSeed: number | BN;\n  lamports: number | BN;\n}\n\n/**\n * Retrieves and deserializes a StakePool account using a web3js connection and the stake pool address.\n * @param connection: An active web3js connection.\n * @param stakePoolAddress: The public key (address) of the stake pool account.\n */\nexport async function getStakePoolAccount(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n): Promise<StakePoolAccount> {\n  const account = await connection.getAccountInfo(stakePoolAddress);\n\n  if (!account) {\n    throw new Error('Invalid stake pool account');\n  }\n\n  return {\n    pubkey: stakePoolAddress,\n    account: {\n      data: StakePoolLayout.decode(account.data),\n      executable: account.executable,\n      lamports: account.lamports,\n      owner: account.owner,\n    },\n  };\n}\n\n/**\n * Retrieves and deserializes a Stake account using a web3js connection and the stake address.\n * @param connection: An active web3js connection.\n * @param stakeAccount: The public key (address) of the stake account.\n */\nexport async function getStakeAccount(\n  connection: Connection,\n  stakeAccount: PublicKey,\n): Promise<StakeAccount> {\n  const result = (await connection.getParsedAccountInfo(stakeAccount)).value;\n  if (!result || !('parsed' in result.data)) {\n    throw new Error('Invalid stake account');\n  }\n  const program = result.data.program;\n  if (program != 'stake') {\n    throw new Error('Not a stake account');\n  }\n  return create(result.data.parsed, StakeAccount);\n}\n\n/**\n * Retrieves all StakePool and ValidatorList accounts that are running a particular StakePool program.\n * @param connection: An active web3js connection.\n * @param stakePoolProgramAddress: The public key (address) of the StakePool program.\n */\nexport async function getStakePoolAccounts(\n  connection: Connection,\n  stakePoolProgramAddress: PublicKey,\n): Promise<(StakePoolAccount | ValidatorListAccount)[] | undefined> {\n  const response = await connection.getProgramAccounts(stakePoolProgramAddress);\n\n  return response.value.map((a) => {\n    let decodedData;\n\n    if (a.account.data.readUInt8() === 1) {\n      try {\n        decodedData = StakePoolLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode StakeAccount. Error:', error);\n        decodedData = undefined;\n      }\n    } else if (a.account.data.readUInt8() === 2) {\n      try {\n        decodedData = ValidatorListLayout.decode(a.account.data);\n      } catch (error) {\n        console.log('Could not decode ValidatorList. Error:', error);\n        decodedData = undefined;\n      }\n    } else {\n      console.error(\n        `Could not decode. StakePoolAccount Enum is ${a.account.data.readUInt8()}, expected 1 or 2!`,\n      );\n      decodedData = undefined;\n    }\n\n    return {\n      pubkey: a.pubkey,\n      account: {\n        data: decodedData,\n        executable: a.account.executable,\n        lamports: a.account.lamports,\n        owner: a.account.owner,\n      },\n    };\n  });\n}\n\n/**\n * Creates instructions required to deposit stake to stake pool.\n */\nexport async function depositStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  authorizedPubkey: PublicKey,\n  validatorVote: PublicKey,\n  depositStake: PublicKey,\n  poolTokenReceiverAccount?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [];\n\n  const poolMint = stakePool.account.data.poolMint;\n\n  // Create token account if not specified\n  if (!poolTokenReceiverAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(poolMint, authorizedPubkey);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        authorizedPubkey,\n        associatedAddress,\n        authorizedPubkey,\n        poolMint,\n      ),\n    );\n    poolTokenReceiverAccount = associatedAddress;\n  }\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Staker,\n    }).instructions,\n  );\n\n  instructions.push(\n    ...StakeProgram.authorize({\n      stakePubkey: depositStake,\n      authorizedPubkey,\n      newAuthorizedPubkey: stakePool.account.data.stakeDepositAuthority,\n      stakeAuthorizationType: StakeAuthorizationLayout.Withdrawer,\n    }).instructions,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositStake({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      depositAuthority: stakePool.account.data.stakeDepositAuthority,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      referralPoolAccount: poolTokenReceiverAccount,\n      destinationPoolAccount: poolTokenReceiverAccount,\n      withdrawAuthority,\n      depositStake,\n      validatorStake,\n      poolMint,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to deposit sol to stake pool.\n */\nexport async function depositSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  from: PublicKey,\n  lamports: number,\n  destinationTokenAccount?: PublicKey,\n  referrerTokenAccount?: PublicKey,\n  depositAuthority?: PublicKey,\n) {\n  const fromBalance = await connection.getBalance(from, 'confirmed');\n  if (fromBalance < lamports) {\n    throw new Error(\n      `Not enough SOL to deposit into pool. Maximum deposit amount is ${lamportsToSol(\n        fromBalance,\n      )} SOL.`,\n    );\n  }\n\n  const stakePoolAccount = await getStakePoolAccount(connection, stakePoolAddress);\n  const stakePool = stakePoolAccount.account.data;\n\n  // Ephemeral SOL account just to do the transfer\n  const userSolTransfer = new Keypair();\n  const signers: Signer[] = [userSolTransfer];\n  const instructions: TransactionInstruction[] = [];\n\n  // Create the ephemeral SOL account\n  instructions.push(\n    SystemProgram.transfer({\n      fromPubkey: from,\n      toPubkey: userSolTransfer.publicKey,\n      lamports,\n    }),\n  );\n\n  // Create token account if not specified\n  if (!destinationTokenAccount) {\n    const associatedAddress = getAssociatedTokenAddressSync(stakePool.poolMint, from);\n    instructions.push(\n      createAssociatedTokenAccountIdempotentInstruction(\n        from,\n        associatedAddress,\n        from,\n        stakePool.poolMint,\n      ),\n    );\n    destinationTokenAccount = associatedAddress;\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  instructions.push(\n    StakePoolInstruction.depositSol({\n      stakePool: stakePoolAddress,\n      reserveStake: stakePool.reserveStake,\n      fundingAccount: userSolTransfer.publicKey,\n      destinationPoolAccount: destinationTokenAccount,\n      managerFeeAccount: stakePool.managerFeeAccount,\n      referralPoolAccount: referrerTokenAccount ?? destinationTokenAccount,\n      poolMint: stakePool.poolMint,\n      lamports,\n      withdrawAuthority,\n      depositAuthority,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to withdraw stake from a stake pool.\n */\nexport async function withdrawStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  amount: number,\n  useReserve = false,\n  voteAccountAddress?: PublicKey,\n  stakeReceiver?: PublicKey,\n  poolTokenAccount?: PublicKey,\n  validatorComparator?: (_a: ValidatorAccount, _b: ValidatorAccount) => number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  if (!poolTokenAccount) {\n    poolTokenAccount = getAssociatedTokenAddressSync(stakePool.account.data.poolMint, tokenOwner);\n  }\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n        Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  const stakeAccountRentExemption = await connection.getMinimumBalanceForRentExemption(\n    StakeProgram.space,\n  );\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  let stakeReceiverAccount = null;\n  if (stakeReceiver) {\n    stakeReceiverAccount = await getStakeAccount(connection, stakeReceiver);\n  }\n\n  const withdrawAccounts: WithdrawAccount[] = [];\n\n  if (useReserve) {\n    withdrawAccounts.push({\n      stakeAddress: stakePool.account.data.reserveStake,\n      voteAddress: undefined,\n      poolAmount,\n    });\n  } else if (stakeReceiverAccount && stakeReceiverAccount?.type == 'delegated') {\n    const voteAccount = stakeReceiverAccount.info?.stake?.delegation.voter;\n    if (!voteAccount) throw new Error(`Invalid stake reciever ${stakeReceiver} delegation`);\n    const validatorListAccount = await connection.getAccountInfo(\n      stakePool.account.data.validatorList,\n    );\n    const validatorList = ValidatorListLayout.decode(validatorListAccount?.data) as ValidatorList;\n    const isValidVoter = validatorList.validators.find((val) =>\n      val.voteAccountAddress.equals(voteAccount),\n    );\n    if (voteAccountAddress && voteAccountAddress !== voteAccount) {\n      throw new Error(`Provided withdrawal vote account ${voteAccountAddress} does not match delegation on stake receiver account ${voteAccount},\n      remove this flag or provide a different stake account delegated to ${voteAccountAddress}`);\n    }\n    if (isValidVoter) {\n      const stakeAccountAddress = findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        voteAccount,\n        stakePoolAddress,\n      );\n\n      const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n      if (!stakeAccount) {\n        throw new Error(`Preferred withdraw valdator's stake account is invalid`);\n      }\n\n      const availableForWithdrawal = calcLamportsWithdrawAmount(\n        stakePool.account.data,\n        stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n      );\n\n      if (availableForWithdrawal < poolAmount) {\n        throw new Error(\n          `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n            ${poolAmount} asked, ${availableForWithdrawal} available.`,\n        );\n      }\n      withdrawAccounts.push({\n        stakeAddress: stakeAccountAddress,\n        voteAddress: voteAccount,\n        poolAmount,\n      });\n    } else {\n      throw new Error(\n        `Provided stake account is delegated to a vote account ${voteAccount} which does not exist in the stake pool`,\n      );\n    }\n  } else if (voteAccountAddress) {\n    const stakeAccountAddress = findStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      voteAccountAddress,\n      stakePoolAddress,\n    );\n    const stakeAccount = await connection.getAccountInfo(stakeAccountAddress);\n    if (!stakeAccount) {\n      throw new Error('Invalid Stake Account');\n    }\n\n    const availableForWithdrawal = calcLamportsWithdrawAmount(\n      stakePool.account.data,\n      stakeAccount.lamports - MINIMUM_ACTIVE_STAKE - stakeAccountRentExemption,\n    );\n\n    if (availableForWithdrawal < poolAmount) {\n      // noinspection ExceptionCaughtLocallyJS\n      throw new Error(\n        `Not enough lamports available for withdrawal from ${stakeAccountAddress},\n          ${poolAmount} asked, ${availableForWithdrawal} available.`,\n      );\n    }\n    withdrawAccounts.push({\n      stakeAddress: stakeAccountAddress,\n      voteAddress: voteAccountAddress,\n      poolAmount,\n    });\n  } else {\n    // Get the list of accounts to withdraw from\n    withdrawAccounts.push(\n      ...(await prepareWithdrawAccounts(\n        connection,\n        stakePool.account.data,\n        stakePoolAddress,\n        poolAmount,\n        validatorComparator,\n        poolTokenAccount.equals(stakePool.account.data.managerFeeAccount),\n      )),\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n    ),\n  );\n\n  let totalRentFreeBalances = 0;\n\n  // Max 5 accounts to prevent an error: \"Transaction too large\"\n  const maxWithdrawAccounts = 5;\n  let i = 0;\n\n  // Go through prepared accounts and withdraw/claim them\n  for (const withdrawAccount of withdrawAccounts) {\n    if (i > maxWithdrawAccounts) {\n      break;\n    }\n    // Convert pool tokens amount to lamports\n    const solWithdrawAmount = Math.ceil(\n      calcLamportsWithdrawAmount(stakePool.account.data, withdrawAccount.poolAmount),\n    );\n\n    let infoMsg = `Withdrawing ◎${solWithdrawAmount},\n      from stake account ${withdrawAccount.stakeAddress?.toBase58()}`;\n\n    if (withdrawAccount.voteAddress) {\n      infoMsg = `${infoMsg}, delegated to ${withdrawAccount.voteAddress?.toBase58()}`;\n    }\n\n    console.info(infoMsg);\n    let stakeToReceive;\n\n    if (!stakeReceiver || (stakeReceiverAccount && stakeReceiverAccount.type === 'delegated')) {\n      const stakeKeypair = newStakeAccount(tokenOwner, instructions, stakeAccountRentExemption);\n      signers.push(stakeKeypair);\n      totalRentFreeBalances += stakeAccountRentExemption;\n      stakeToReceive = stakeKeypair.publicKey;\n    } else {\n      stakeToReceive = stakeReceiver;\n    }\n\n    instructions.push(\n      StakePoolInstruction.withdrawStake({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        validatorStake: withdrawAccount.stakeAddress,\n        destinationStake: stakeToReceive,\n        destinationStakeAuthority: tokenOwner,\n        sourceTransferAuthority: userTransferAuthority.publicKey,\n        sourcePoolAccount: poolTokenAccount,\n        managerFeeAccount: stakePool.account.data.managerFeeAccount,\n        poolMint: stakePool.account.data.poolMint,\n        poolTokens: withdrawAccount.poolAmount,\n        withdrawAuthority,\n      }),\n    );\n    i++;\n  }\n  if (stakeReceiver && stakeReceiverAccount && stakeReceiverAccount.type === 'delegated') {\n    signers.forEach((newStakeKeypair) => {\n      instructions.concat(\n        StakeProgram.merge({\n          stakePubkey: stakeReceiver,\n          sourceStakePubKey: newStakeKeypair.publicKey,\n          authorizedPubkey: tokenOwner,\n        }).instructions,\n      );\n    });\n  }\n\n  return {\n    instructions,\n    signers,\n    stakeReceiver,\n    totalRentFreeBalances,\n  };\n}\n\n/**\n * Creates instructions required to withdraw SOL directly from a stake pool.\n */\nexport async function withdrawSol(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  tokenOwner: PublicKey,\n  solReceiver: PublicKey,\n  amount: number,\n  solWithdrawAuthority?: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const poolAmount = solToLamports(amount);\n\n  const poolTokenAccount = getAssociatedTokenAddressSync(\n    stakePool.account.data.poolMint,\n    tokenOwner,\n  );\n\n  const tokenAccount = await getAccount(connection, poolTokenAccount);\n\n  // Check withdrawFrom balance\n  if (tokenAccount.amount < poolAmount) {\n    throw new Error(\n      `Not enough token balance to withdraw ${lamportsToSol(poolAmount)} pool tokens.\n          Maximum withdraw amount is ${lamportsToSol(tokenAccount.amount)} pool tokens.`,\n    );\n  }\n\n  // Construct transaction to withdraw from withdrawAccounts account list\n  const instructions: TransactionInstruction[] = [];\n  const userTransferAuthority = Keypair.generate();\n  const signers: Signer[] = [userTransferAuthority];\n\n  instructions.push(\n    createApproveInstruction(\n      poolTokenAccount,\n      userTransferAuthority.publicKey,\n      tokenOwner,\n      poolAmount,\n    ),\n  );\n\n  const poolWithdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  if (solWithdrawAuthority) {\n    const expectedSolWithdrawAuthority = stakePool.account.data.solWithdrawAuthority;\n    if (!expectedSolWithdrawAuthority) {\n      throw new Error('SOL withdraw authority specified in arguments but stake pool has none');\n    }\n    if (solWithdrawAuthority.toBase58() != expectedSolWithdrawAuthority.toBase58()) {\n      throw new Error(\n        `Invalid deposit withdraw specified, expected ${expectedSolWithdrawAuthority.toBase58()}, received ${solWithdrawAuthority.toBase58()}`,\n      );\n    }\n  }\n\n  const withdrawTransaction = StakePoolInstruction.withdrawSol({\n    stakePool: stakePoolAddress,\n    withdrawAuthority: poolWithdrawAuthority,\n    reserveStake: stakePool.account.data.reserveStake,\n    sourcePoolAccount: poolTokenAccount,\n    sourceTransferAuthority: userTransferAuthority.publicKey,\n    destinationSystemAccount: solReceiver,\n    managerFeeAccount: stakePool.account.data.managerFeeAccount,\n    poolMint: stakePool.account.data.poolMint,\n    poolTokens: poolAmount,\n    solWithdrawAuthority,\n  });\n\n  instructions.push(withdrawTransaction);\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to increase validator stake.\n */\nexport async function increaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const transientStakeSeed = validatorInfo.transientSeedSuffixStart.addn(1); // bump up by one to avoid reuse\n\n  const transientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    StakePoolInstruction.increaseAdditionalValidatorStake({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      transientStakeSeed: transientStakeSeed.toNumber(),\n      withdrawAuthority,\n      transientStake,\n      validatorStake,\n      validatorVote,\n      lamports,\n      ephemeralStake,\n      ephemeralStakeSeed,\n    });\n  } else {\n    instructions.push(\n      StakePoolInstruction.increaseValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        transientStake,\n        validatorStake,\n        validatorVote,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to decrease validator stake.\n */\nexport async function decreaseValidatorStake(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  lamports: number,\n  ephemeralStakeSeed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() == validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const transientStakeSeed = validatorInfo.transientSeedSuffixStart.addn(1); // bump up by one to avoid reuse\n\n  const transientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    transientStakeSeed,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  if (ephemeralStakeSeed != undefined) {\n    const ephemeralStake = findEphemeralStakeProgramAddress(\n      STAKE_POOL_PROGRAM_ID,\n      stakePoolAddress,\n      new BN(ephemeralStakeSeed),\n    );\n    instructions.push(\n      StakePoolInstruction.decreaseAdditionalValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n        ephemeralStake,\n        ephemeralStakeSeed,\n      }),\n    );\n  } else {\n    instructions.push(\n      StakePoolInstruction.decreaseValidatorStake({\n        stakePool: stakePoolAddress,\n        staker: stakePool.account.data.staker,\n        validatorList: stakePool.account.data.validatorList,\n        transientStakeSeed: transientStakeSeed.toNumber(),\n        withdrawAuthority,\n        validatorStake,\n        transientStake,\n        lamports,\n      }),\n    );\n  }\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to completely update a stake pool after epoch change.\n */\nexport async function updateStakePool(\n  connection: Connection,\n  stakePool: StakePoolAccount,\n  noMerge = false,\n) {\n  const stakePoolAddress = stakePool.pubkey;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const updateListInstructions: TransactionInstruction[] = [];\n  const instructions: TransactionInstruction[] = [];\n\n  let startIndex = 0;\n  const validatorChunks: Array<ValidatorStakeInfo[]> = arrayChunk(\n    validatorList.account.data.validators,\n    MAX_VALIDATORS_TO_UPDATE,\n  );\n\n  for (const validatorChunk of validatorChunks) {\n    const validatorAndTransientStakePairs: PublicKey[] = [];\n\n    for (const validator of validatorChunk) {\n      const validatorStake = findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      validatorAndTransientStakePairs.push(validatorStake);\n\n      const transientStake = findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      validatorAndTransientStakePairs.push(transientStake);\n    }\n\n    updateListInstructions.push(\n      StakePoolInstruction.updateValidatorListBalance({\n        stakePool: stakePoolAddress,\n        validatorList: stakePool.account.data.validatorList,\n        reserveStake: stakePool.account.data.reserveStake,\n        validatorAndTransientStakePairs,\n        withdrawAuthority,\n        startIndex,\n        noMerge,\n      }),\n    );\n    startIndex += MAX_VALIDATORS_TO_UPDATE;\n  }\n\n  instructions.push(\n    StakePoolInstruction.updateStakePoolBalance({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n      reserveStake: stakePool.account.data.reserveStake,\n      managerFeeAccount: stakePool.account.data.managerFeeAccount,\n      poolMint: stakePool.account.data.poolMint,\n      withdrawAuthority,\n    }),\n  );\n\n  instructions.push(\n    StakePoolInstruction.cleanupRemovedValidatorEntries({\n      stakePool: stakePoolAddress,\n      validatorList: stakePool.account.data.validatorList,\n    }),\n  );\n\n  return {\n    updateListInstructions,\n    finalInstructions: instructions,\n  };\n}\n\n/**\n * Retrieves detailed information about the StakePool.\n */\nexport async function stakePoolInfo(connection: Connection, stakePoolAddress: PublicKey) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n  const reserveAccountStakeAddress = stakePool.account.data.reserveStake;\n  const totalLamports = stakePool.account.data.totalLamports;\n  const lastUpdateEpoch = stakePool.account.data.lastUpdateEpoch;\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const maxNumberOfValidators = validatorList.account.data.maxValidators;\n  const currentNumberOfValidators = validatorList.account.data.validators.length;\n\n  const epochInfo = await connection.getEpochInfo();\n  const reserveStake = await connection.getAccountInfo(reserveAccountStakeAddress);\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const minimumReserveStakeBalance =\n    (await connection.getMinimumBalanceForRentExemption(StakeProgram.space)) + 1;\n\n  const stakeAccounts = await Promise.all(\n    validatorList.account.data.validators.map(async (validator) => {\n      const stakeAccountAddress = findStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n      );\n      const transientStakeAccountAddress = findTransientStakeProgramAddress(\n        STAKE_POOL_PROGRAM_ID,\n        validator.voteAccountAddress,\n        stakePoolAddress,\n        validator.transientSeedSuffixStart,\n      );\n      const updateRequired = !validator.lastUpdateEpoch.eqn(epochInfo.epoch);\n      return {\n        voteAccountAddress: validator.voteAccountAddress.toBase58(),\n        stakeAccountAddress: stakeAccountAddress.toBase58(),\n        validatorActiveStakeLamports: validator.activeStakeLamports.toString(),\n        validatorLastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        validatorLamports: validator.activeStakeLamports\n          .add(validator.transientStakeLamports)\n          .toString(),\n        validatorTransientStakeAccountAddress: transientStakeAccountAddress.toBase58(),\n        validatorTransientStakeLamports: validator.transientStakeLamports.toString(),\n        updateRequired,\n      };\n    }),\n  );\n\n  const totalPoolTokens = lamportsToSol(stakePool.account.data.poolTokenSupply);\n  const updateRequired = !lastUpdateEpoch.eqn(epochInfo.epoch);\n\n  return {\n    address: stakePoolAddress.toBase58(),\n    poolWithdrawAuthority: withdrawAuthority.toBase58(),\n    manager: stakePool.account.data.manager.toBase58(),\n    staker: stakePool.account.data.staker.toBase58(),\n    stakeDepositAuthority: stakePool.account.data.stakeDepositAuthority.toBase58(),\n    stakeWithdrawBumpSeed: stakePool.account.data.stakeWithdrawBumpSeed,\n    maxValidators: maxNumberOfValidators,\n    validatorList: validatorList.account.data.validators.map((validator) => {\n      return {\n        activeStakeLamports: validator.activeStakeLamports.toString(),\n        transientStakeLamports: validator.transientStakeLamports.toString(),\n        lastUpdateEpoch: validator.lastUpdateEpoch.toString(),\n        transientSeedSuffixStart: validator.transientSeedSuffixStart.toString(),\n        transientSeedSuffixEnd: validator.transientSeedSuffixEnd.toString(),\n        status: validator.status.toString(),\n        voteAccountAddress: validator.voteAccountAddress.toString(),\n      };\n    }), // CliStakePoolValidator\n    validatorListStorageAccount: stakePool.account.data.validatorList.toBase58(),\n    reserveStake: stakePool.account.data.reserveStake.toBase58(),\n    poolMint: stakePool.account.data.poolMint.toBase58(),\n    managerFeeAccount: stakePool.account.data.managerFeeAccount.toBase58(),\n    tokenProgramId: stakePool.account.data.tokenProgramId.toBase58(),\n    totalLamports: stakePool.account.data.totalLamports.toString(),\n    poolTokenSupply: stakePool.account.data.poolTokenSupply.toString(),\n    lastUpdateEpoch: stakePool.account.data.lastUpdateEpoch.toString(),\n    lockup: stakePool.account.data.lockup, // pub lockup: CliStakePoolLockup\n    epochFee: stakePool.account.data.epochFee,\n    nextEpochFee: stakePool.account.data.nextEpochFee,\n    preferredDepositValidatorVoteAddress:\n      stakePool.account.data.preferredDepositValidatorVoteAddress,\n    preferredWithdrawValidatorVoteAddress:\n      stakePool.account.data.preferredWithdrawValidatorVoteAddress,\n    stakeDepositFee: stakePool.account.data.stakeDepositFee,\n    stakeWithdrawalFee: stakePool.account.data.stakeWithdrawalFee,\n    // CliStakePool the same\n    nextStakeWithdrawalFee: stakePool.account.data.nextStakeWithdrawalFee,\n    stakeReferralFee: stakePool.account.data.stakeReferralFee,\n    solDepositAuthority: stakePool.account.data.solDepositAuthority?.toBase58(),\n    solDepositFee: stakePool.account.data.solDepositFee,\n    solReferralFee: stakePool.account.data.solReferralFee,\n    solWithdrawAuthority: stakePool.account.data.solWithdrawAuthority?.toBase58(),\n    solWithdrawalFee: stakePool.account.data.solWithdrawalFee,\n    nextSolWithdrawalFee: stakePool.account.data.nextSolWithdrawalFee,\n    lastEpochPoolTokenSupply: stakePool.account.data.lastEpochPoolTokenSupply.toString(),\n    lastEpochTotalLamports: stakePool.account.data.lastEpochTotalLamports.toString(),\n    details: {\n      reserveStakeLamports: reserveStake?.lamports,\n      reserveAccountStakeAddress: reserveAccountStakeAddress.toBase58(),\n      minimumReserveStakeBalance,\n      stakeAccounts,\n      totalLamports,\n      totalPoolTokens,\n      currentNumberOfValidators,\n      maxNumberOfValidators,\n      updateRequired,\n    }, // CliStakePoolDetails\n  };\n}\n\n/**\n * Creates instructions required to redelegate stake.\n */\nexport async function redelegate(props: RedelegateProps) {\n  const {\n    connection,\n    stakePoolAddress,\n    sourceVoteAccount,\n    sourceTransientStakeSeed,\n    destinationVoteAccount,\n    destinationTransientStakeSeed,\n    ephemeralStakeSeed,\n    lamports,\n  } = props;\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const stakePoolWithdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const sourceValidatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n  );\n\n  const sourceTransientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    sourceVoteAccount,\n    stakePoolAddress,\n    new BN(sourceTransientStakeSeed),\n  );\n\n  const destinationValidatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n  );\n\n  const destinationTransientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    destinationVoteAccount,\n    stakePoolAddress,\n    new BN(destinationTransientStakeSeed),\n  );\n\n  const ephemeralStake = findEphemeralStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n    new BN(ephemeralStakeSeed),\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.redelegate({\n      stakePool: stakePool.pubkey,\n      staker: stakePool.account.data.staker,\n      validatorList: stakePool.account.data.validatorList,\n      stakePoolWithdrawAuthority,\n      ephemeralStake,\n      ephemeralStakeSeed,\n      sourceValidatorStake,\n      sourceTransientStake,\n      sourceTransientStakeSeed,\n      destinationValidatorStake,\n      destinationTransientStake,\n      destinationTransientStakeSeed,\n      validator: destinationVoteAccount,\n      lamports,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Initializes a new StakePool.\n */\nexport async function initialize(props: InitializeProps) {\n  const { connection, poolMint, reserveStake, manager, managerPoolAccount, fee, referralFee } =\n    props;\n\n  const poolBalance = await connection.getMinimumBalanceForRentExemption(StakePoolLayout.span);\n\n  const stakePool = props.stakePool ?? Keypair.generate();\n  const validatorList = props.validatorList ?? Keypair.generate();\n\n  const instructions: TransactionInstruction[] = [];\n  const signers: Signer[] = [manager, stakePool, validatorList];\n\n  instructions.push(\n    SystemProgram.createAccount({\n      fromPubkey: manager.publicKey,\n      newAccountPubkey: stakePool.publicKey,\n      lamports: poolBalance,\n      space: StakePoolLayout.span,\n      programId: STAKE_POOL_PROGRAM_ID,\n    }),\n  );\n\n  // current supported max by the program, go big!\n  const maxValidators = props.maxValidators ?? 2950;\n\n  // TODO: ValidatorListLayout.span returns -1\n  // const validatorListSpace = ValidatorListLayout.span + ValidatorStakeInfoLayout.span * maxValidators;\n  const validatorListSpace = 1 + 4 + 4 + ValidatorStakeInfoLayout.span * maxValidators;\n\n  const validatorListBalance = await connection.getMinimumBalanceForRentExemption(\n    validatorListSpace,\n  );\n\n  instructions.push(\n    SystemProgram.createAccount({\n      fromPubkey: manager.publicKey,\n      newAccountPubkey: validatorList.publicKey,\n      lamports: validatorListBalance,\n      space: validatorListSpace,\n      programId: STAKE_POOL_PROGRAM_ID,\n    }),\n  );\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePool.publicKey,\n  );\n\n  instructions.push(\n    StakePoolInstruction.initialize({\n      stakePool: stakePool.publicKey,\n      manager: manager.publicKey,\n      staker: manager.publicKey,\n      stakePoolWithdrawAuthority: withdrawAuthority,\n      validatorList: validatorList.publicKey,\n      poolMint,\n      managerPoolAccount,\n      reserveStake,\n      fee,\n      withdrawalFee: fee,\n      depositFee: fee,\n      referralFee,\n      maxValidators,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n\n/**\n * Creates instructions required to create pool token metadata.\n */\nexport async function createPoolTokenMetadata(props: CreateStakePoolTokenMetadataProps) {\n  const { connection, name, symbol, uri, payer } = props;\n\n  const stakePool =\n    props.stakePool instanceof PublicKey\n      ? await getStakePoolAccount(connection, props.stakePool)\n      : props.stakePool;\n\n  const tokenMetadata =\n    props.tokenMetadata ?? findTokenMetadataAddress(stakePool.account.data.poolMint);\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePool.pubkey,\n  );\n\n  const manager = stakePool.account.data.manager;\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.createTokenMetadata({\n      stakePool: stakePool.pubkey,\n      poolMint: stakePool.account.data.poolMint,\n      payer,\n      manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to update pool token metadata.\n */\nexport async function updatePoolTokenMetadata(props: UpdateStakePoolTokenMetadataProps) {\n  const { connection, name, symbol, uri } = props;\n\n  const stakePool =\n    props.stakePool instanceof PublicKey\n      ? await getStakePoolAccount(connection, props.stakePool)\n      : props.stakePool;\n\n  const tokenMetadata =\n    props.tokenMetadata ?? findTokenMetadataAddress(stakePool.account.data.poolMint);\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePool.pubkey,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n  instructions.push(\n    StakePoolInstruction.updateTokenMetadata({\n      stakePool: stakePool.pubkey,\n      manager: stakePool.account.data.manager,\n      tokenMetadata,\n      withdrawAuthority,\n      name,\n      symbol,\n      uri,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to add a validator to the pool.\n */\nexport async function addValidatorToPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  funder: PublicKey,\n  // seed?: number,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() === validatorVote.toBase58(),\n  );\n\n  if (validatorInfo) {\n    throw new Error(\n      `Stake pool already contains validator ${validatorInfo.voteAccountAddress.toBase58()}, ignoring`,\n    );\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorVote,\n    stakePoolAddress,\n  );\n\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    StakePoolInstruction.addValidatorToPool({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      funder,\n      // reserveStake: stakePool.account.data.reserveStake,\n      validatorList: stakePool.account.data.validatorList,\n      validatorStake,\n      withdrawAuthority,\n      validatorVote,\n      seed: undefined,\n    }),\n  );\n\n  return {\n    instructions,\n  };\n}\n\n/**\n * Creates instructions required to add a validator to the pool.\n */\nexport async function removeValidatorFromPool(\n  connection: Connection,\n  stakePoolAddress: PublicKey,\n  validatorVote: PublicKey,\n  staker: PublicKey,\n) {\n  const stakePool = await getStakePoolAccount(connection, stakePoolAddress);\n\n  const validatorList = await getValidatorListAccount(\n    connection,\n    stakePool.account.data.validatorList,\n  );\n\n  const validatorInfo = validatorList.account.data.validators.find(\n    (v) => v.voteAccountAddress.toBase58() === validatorVote.toBase58(),\n  );\n\n  if (!validatorInfo) {\n    throw new Error('Vote account not found in validator list');\n  }\n\n  const withdrawAuthority = findWithdrawAuthorityProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    stakePoolAddress,\n  );\n\n  const transientStake = findTransientStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n    validatorInfo.transientSeedSuffixStart,\n  );\n\n  const validatorStake = findStakeProgramAddress(\n    STAKE_POOL_PROGRAM_ID,\n    validatorInfo.voteAccountAddress,\n    stakePoolAddress,\n  );\n\n  const destinationStake = Keypair.generate();\n\n  const signers: Signer[] = [destinationStake];\n  const instructions: TransactionInstruction[] = [];\n\n  instructions.push(\n    SystemProgram.createAccount({\n      fromPubkey: staker,\n      newAccountPubkey: destinationStake.publicKey,\n      lamports: 0,\n      space: StakeProgram.space,\n      programId: StakeProgram.programId,\n    }),\n  );\n\n  instructions.push(\n    StakePoolInstruction.removeValidatorFromPool({\n      stakePool: stakePoolAddress,\n      staker: stakePool.account.data.staker,\n      newStakeAuthority: staker,\n      withdrawAuthority,\n      validatorList: stakePool.account.data.validatorList,\n      validatorStake,\n      transientStake,\n      destinationStake: destinationStake.publicKey,\n    }),\n  );\n\n  return {\n    instructions,\n    signers,\n  };\n}\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","this","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","msg","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","bool","lengths","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","assert","assert$3","crypto","globalThis","u32","Uint32Array","createView","DataView","rotr","word","shift","v","padStart","TextEncoder","encode","toBytes","concatBytes","arrays","every","reduce","result","pad","Hash","clone","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","wrapConstructorWithOpts","hashCons","opts","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","h","l","setUint32","SHA2","padOffset","take","dataView","process","roundClean","digestInto","oview","outLen","state","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","u64$3","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","_0n","_1n","_2n","u8a","hexes","bytesToHex","hex","numberToHexUnpadded","hexToNumber","hexToBytes","hexByte","byte","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","numberToVarBytesBE","ensureBytes","title","expectedLength","arrs","r","sum","forEach","equalBytes","b1","b2","bitLen","bitGet","bitSet","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","k","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","boolean","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","_3n","_4n","_5n","_8n","mod","power","modulo","pow2","invert","u","q","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","tonelliFast","root","eql","sqr","Q1div2","tonelliSlow","neg","ONE","g","ZERO","t2","ge","FpSqrt","sqrt3mod4","c1","sqrt5mod8","n2","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","FpPow","f","p","FpInvertBatch","nums","lastMultiplied","acc","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","fromBytes","FpSqrtEven","elm","hashToPrivateScalar","groupOrder","minLen","wNAF","bits","constTimeNegate","condition","item","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","Map","isPoint","other","Point","ex","ey","ez","et","toAffine","static","toInv","fromAffine","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","normalizeZ","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","key","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","context","msgs","ut.concatBytes","sign","options","R","verifyOpts","verify","sig","publicKey","SB","fromHex","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","montgomeryBits","powPminus2","Gu","montgomery","montgomeryBytes","fieldLen","cswap","x_2","x_3","dummy","assertFieldElement","a24","montgomeryLadder","pointU","x_1","z_2","z_3","sw","t","k_t","AA","BB","DA","CB","dacb","da_cb","z2","encodeUCoordinate","decodeUCoordinate","uEnc","decodeScalar","scalarMult","_scalar","pu","GuBytes","scalarMultBase","getSharedSecret","privateKey","validateDST","os2ip","i2osp","strxor","isBytes","isNum","expand_message_xmd","DST","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","args","pseudo_random_bytes","expand_message_xof","dkLen","hash_to_field","count","expand","_DST","log2p","L","len_in_bytes","prb","elm_offset","tv","isogenyMap","COEFF","xNum","xDen","yNum","yDen","createHasher","def","hashToCurve","u0","u1","encodeToCurve","encodeDST","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","ELL2_C2","ELL2_C3","ELL2_C4","ELL2_J","map_to_curve_elligator2_curve25519","tv1","xd","x1n","tv2","gxd","gx1","tv3","y11","y12","e1","y1","x2n","y21","y22","gx2","e2","e3","xn","e4","xMn","xMd","yMn","yMd","ELL2_C1_EDWARDS","map_to_curve_elligator2_edwards25519","yn","yd","htf.createHasher","scalars","assertRstPoint","RistrettoPoint","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","invertSqrt","MAX_255B","bytes255ToNumberLE","calcElligatorRistrettoMap","r0","Ns","Ns_D_is_sq","s_","Nt","s2","W0","W1","W2","W3","ep","ap","r1","R1","r2","R2","emsg","u2","u1_2","u2_2","Dx","Dy","u2sq","invsqrt","D1","D2","zInv","_x","_y","one","two","module","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","cmp","init","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","parseHex4Bits","index","parseHexByte","lowerBound","parseLength","parseBase","limbLen","limbPow","total","imuln","_iaddn","dest","move","_move","_expand","strip","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toBuffer","toArrayLike","allocate","ArrayType","reqLength","postfix","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","self","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","isqr","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","isEven","yp","xp","im","jm","_invmp","x1","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","ireduce","rlen","imulK","K256","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","nOne","lpow","wnd","current","currentLen","mont","Mont","rinv","minv","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","sigma1","sigma0","SHA224","sha256","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","serializeStruct","borshSerialize","structSchema","fields","idx","values","Writer","deserializeField","reader","option","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Layout_1","Layout$3","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","span","property","makeDestinationObject","getSpan","replicate","rv","assign","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","StructError","failure","failures","cached","rest","path","_cached","isIterable","isObject","iterator","print","JSON","stringify","shiftIterator","done","toFailure","branch","refinement","toFailures","run","coerce","coercer","valid","validator","ts","Set","refiner","Struct","props","is","validate","tuples","tuple","define","any","Element","enums","description","literal","never","nullable","optional","record","Key","Value","Elements","Never","keys","Structs","unknown","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","parse","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","version","hashfunc","generateUUID","namespace","err","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_i","_i2","_t","_t2","v5","v5$1","nil","generateRequest","method","params","id","request","jsonrpc","generator","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","callback","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","filter","_interopRequireDefault","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","makeInvokeMethod","tryCatch","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","displayName","defineIteratorMethods","isGeneratorFunction","genFun","mark","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","then","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","skipTempReset","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","regenerator","asyncGeneratorStep","_next","_throw","_asyncToGenerator","_typeof","_classCallCheck","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","_inherits","subClass","superClass","_assertThisInitialized","ReferenceError","assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","has","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","_regenerator","_asyncToGenerator2","_typeof2","require$$3","_classCallCheck2","require$$4","_createClass2","require$$5","_inherits2","require$$6","_possibleConstructorReturn2","require$$7","_getPrototypeOf2","require$$8","_eventemitter","require$$9","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","construct","sham","Proxy","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","_super","webSocketFactory","_this","address","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","connect","socket","timeout","ws_opts","_this2","send","promise","setTimeout","_login","_callee","resp","_callee$","_context","login","_listMethods","_callee2","_callee2$","_context2","listMethods","notify","_this3","_subscribe","_callee3","_callee3$","_context3","subscribe","_x2","_unsubscribe","_callee4","_callee4$","_context4","unsubscribe","_x3","close","_this4","clearTimeout","addEventListener","_ref","notification","_ref2","reason","_default","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","genShake","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","ut","DER","Err","DERErr","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","hasEvenY","U1","U2","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","_bits","ProjectivePoint","hmac","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","mod.invert","cat","isYOdd","isHeadOdd","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","hasHighS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","rand","mod.hashToPrivateScalar","fromPrivateKey","isProbPub","privateA","publicB","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","ut.createHmacDrbg","signature","sg","_sig","fromDER","derError","fromCompact","SWUFpSqrtRatio","c2","c3","c4","c5","c6","c7","sqrtRatio","tv5","tv4","isQR","tvv5","mapToCurveSimpleSWU","mod.validateField","tv6","HMAC","_key","iHash","oHash","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","POW_2_128","fe","TAGGED_HASH_PREFIXES","taggedHash","messages","tagP","tagH","pointToBytes","numTo32b","GmulAdd","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","k_","rx","schnorrVerify","pub","isoMap","htf.isogenyMap","mapSWU","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","properties","SOLANA_SCHEMA","Enum","enum","_Symbol$toStringTag","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","PublicKey","decoded","toBase58","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","nonce","seedsWithNonce","findProgramAddressSync","pubkeyData","pubkey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout.blob","rustString","rsl","BufferLayout.struct","BufferLayout.u32","BufferLayout.offset","_decode","_encode","rslShim","chars","authorized","lockup","BufferLayout.ns64","voteInit","BufferLayout.u8","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","Message","accountKeys","recentBlockhash","indexToProgramIds","account","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","compile","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","programIds","nonProgramIds","_","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","BufferLayout.seq","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","_compile","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","TransactionMessage","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","encodeData","allocLength","layoutFields","decodeData$1","FeeCalculatorLayout","BufferLayout.nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","encodeDecode","bigInt","bigIntLayout","SystemInstruction","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","Transfer","toPubkey","TransferWithSeed","basePubkey","Allocate","accountPubkey","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","deployCommitment","finalizeSignature","currentSlot","getSlot","slot","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","fastStableStringify$1","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","fetchImpl","fetch","RpcWebSocketClient","RpcWebSocketCommonClient","url","rpc","createRpc","underlyingSocket","readyState","decodeData","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","agent","fetchWithMiddleware","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitmentOrConfig","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","baseSchema","withContext","strategy","rawSignature","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","lockedWritableAccounts","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","extra","block","endSlot","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","clientSubscriptionId","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","checkKeysLength","recentSlot","recipient","AddressLookupTableProgram","lookupTableAddress","bumpSeed","addr","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","additionalFee","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","BufferLayout.u16","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","ecdsaSign","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","Initialize","stakePubkey","Delegate","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","splitInstruction","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","currentVoteAccountBalance","rentExemptMinimum","withdraw","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeyCount","configKeys","rawInfo","assert$1","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","TOKEN_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","boolLayout","publicKeyLayout","TokenError","TokenAccountNotFoundError","TokenInvalidAccountError","TokenInvalidAccountOwnerError","TokenInvalidAccountSizeError","TokenOwnerOffCurveError","TokenInstruction","addSigners","ownerOrAuthority","multiSigners","approveInstructionData","createApproveInstruction","Approve","AccountType","ACCOUNT_TYPE_SIZE","MultisigLayout","MULTISIG_SIZE","AccountState","AccountLayout","ACCOUNT_SIZE","getAccount","unpackAccount","rawAccount","tlvData","delegateOption","delegatedAmount","isInitialized","Uninitialized","isFrozen","Frozen","isNative","isNativeOption","rentExemptReserve","closeAuthority","closeAuthorityOption","MintLayout","getAssociatedTokenAddressSync","allowOwnerOffCurve","associatedTokenProgramId","createAssociatedTokenAccountIdempotentInstruction","associatedToken","buildAssociatedTokenAccountInstruction","solToLamports","lamportsToSol","signMultiplier","absLamports","lamportsString","splitIndex","solString","parseFloat","METADATA_PROGRAM_ID","METADATA_MAX_NAME_LENGTH","METADATA_MAX_SYMBOL_LENGTH","METADATA_MAX_URI_LENGTH","STAKE_POOL_PROGRAM_ID","MAX_VALIDATORS_TO_UPDATE","EPHEMERAL_STAKE_SEED_PREFIX","TRANSIENT_STAKE_SEED_PREFIX","MINIMUM_ACTIVE_STAKE","findWithdrawAuthorityProgramAddress","stakePoolAddress","findStakeProgramAddress","voteAccountAddress","findTransientStakeProgramAddress","findEphemeralStakeProgramAddress","findTokenMetadataAddress","Layout$1","upv","const","rustEnum","vecU8","tagged","vec","i256","u256","i128","u128","i32","i8","buffer_layout_1","web3_js_1","buffer_layout_2","BNLayout","signed","i64","WrappedLayout","decoder","encoder","OptionLayout","decodeBool","encodeBool","wrappedLayout","decodeTag","receivedTag","variants","discriminant","unionLayout","MapEntryLayout","keyLayout","valueLayout","keyBytes","valueBytes","feeFields","BigNumFromString","StakeAccountType","StakeMeta","StakeAccountInfo","stake","delegation","voter","activationEpoch","deactivationEpoch","warmupCooldownRate","creditsObserved","StakeAccount","StakePoolLayout","ValidatorStakeInfoStatus","ValidatorStakeInfoLayout","ValidatorListLayout","getValidatorListAccount","prepareWithdrawAccounts","stakePool","compareFn","skipFee","validatorListAcc","validatorList","minBalanceForRentExemption","minBalance","Active","stakeAccountAddress","activeStakeLamports","isPreferred","preferredWithdrawValidatorVoteAddress","voteAddress","stakeAddress","transientStakeLamports","transientStakeAccountAddress","transientSeedSuffixStart","reserveStake","reserveStakeBalance","withdrawFrom","remainingAmount","stakeWithdrawalFee","inverseFee","numerator","denominator","filteredAccounts","availableForWithdrawal","calcPoolTokensForDeposit","divideBnToNumber","poolAmount","stakeLamports","poolTokenSupply","totalLamports","calcLamportsWithdrawAmount","poolTokens","quotient","newStakeAccount","stakeReceiverKeypair","generate","arrayChunk","MOVE_STAKE_LAYOUT","TOKEN_METADATA_LAYOUT","feeLayout","STAKE_POOL_INSTRUCTION_LAYOUTS","AddValidatorToPool","RemoveValidatorFromPool","DecreaseValidatorStake","IncreaseValidatorStake","UpdateValidatorListBalance","UpdateStakePoolBalance","CleanupRemovedValidatorEntries","DepositStake","WithdrawStake","DepositSol","WithdrawSol","CreateTokenMetadata","UpdateTokenMetadata","IncreaseAdditionalValidatorStake","DecreaseAdditionalValidatorStake","Redelegate","StakePoolInstruction","withdrawalFee","depositFee","referralFee","maxValidators","manager","stakePoolWithdrawAuthority","poolMint","managerPoolAccount","depositAuthority","funder","withdrawAuthority","validatorStake","validatorVote","newStakeAuthority","transientStake","destinationStake","startIndex","noMerge","validatorAndTransientStakePairs","managerFeeAccount","transientStakeSeed","ephemeralStake","ephemeralStakeSeed","depositStake","destinationPoolAccount","referralPoolAccount","fundingAccount","destinationStakeAuthority","sourceTransferAuthority","sourcePoolAccount","destinationSystemAccount","solWithdrawAuthority","tokenMetadata","symbol","uri","padEnd","sourceValidatorStake","sourceTransientStake","destinationTransientStake","destinationValidatorStake","sourceTransientStakeSeed","destinationTransientStakeSeed","getStakePoolAccount","getStakeAccount","stakeAccount","getParsedAccountInfo","getStakePoolAccounts","stakePoolProgramAddress","getProgramAccounts","decodedData","poolTokenReceiverAccount","associatedAddress","authorize","stakeDepositAuthority","depositSol","destinationTokenAccount","referrerTokenAccount","fromBalance","getBalance","stakePoolAccount","userSolTransfer","withdrawStake","tokenOwner","useReserve","stakeReceiver","poolTokenAccount","validatorComparator","tokenAccount","stakeAccountRentExemption","stakeReceiverAccount","withdrawAccounts","voteAccount","_d","_c","validatorListAccount","isValidVoter","userTransferAuthority","totalRentFreeBalances","maxWithdrawAccounts","withdrawAccount","solWithdrawAmount","infoMsg","_f","stakeToReceive","stakeKeypair","newStakeKeypair","merge","withdrawSol","solReceiver","poolWithdrawAuthority","expectedSolWithdrawAuthority","withdrawTransaction","increaseValidatorStake","validatorInfo","increaseAdditionalValidatorStake","decreaseValidatorStake","decreaseAdditionalValidatorStake","updateStakePool","updateListInstructions","validatorChunks","validatorChunk","updateValidatorListBalance","updateStakePoolBalance","cleanupRemovedValidatorEntries","finalInstructions","stakePoolInfo","reserveAccountStakeAddress","lastUpdateEpoch","maxNumberOfValidators","currentNumberOfValidators","epochInfo","getEpochInfo","minimumReserveStakeBalance","stakeAccounts","updateRequired","validatorActiveStakeLamports","validatorLastUpdateEpoch","validatorLamports","validatorTransientStakeAccountAddress","validatorTransientStakeLamports","totalPoolTokens","stakeWithdrawBumpSeed","transientSeedSuffixEnd","validatorListStorageAccount","tokenProgramId","epochFee","nextEpochFee","preferredDepositValidatorVoteAddress","stakeDepositFee","nextStakeWithdrawalFee","stakeReferralFee","solDepositAuthority","solDepositFee","solReferralFee","solWithdrawalFee","nextSolWithdrawalFee","lastEpochPoolTokenSupply","lastEpochTotalLamports","reserveStakeLamports","redelegate","sourceVoteAccount","destinationVoteAccount","poolBalance","validatorListSpace","validatorListBalance","createPoolTokenMetadata","createTokenMetadata","updatePoolTokenMetadata","updateTokenMetadata","addValidatorToPool","removeValidatorFromPool"],"mappings":"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"}